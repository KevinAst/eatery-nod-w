{"version":3,"sources":["util/ErrorExtensionPolyfill.js","util/verify.js","util/iForms/IFormMeta.js","features/common/auth/subFeatures/authService/User.js","features/common/auth/state.js","features/common/auth/featureName.js","features/common/auth/signInFormMeta.js","features/common/auth/actions.js","util/notify.js","util/discloseError.js","util/noOp.js","util/encoder.js","util/deviceStorage.js","features/common/auth/credentialsStorage.js","features/common/auth/logic.js","util/Transition.js","features/common/auth/comp/SignInVerifyScreen.js","util/iForms/comp/ITextField.js","features/common/auth/comp/SignInScreen.js","util/SplashScreen.js","features/common/auth/route.js","features/common/baseUI/comp/UserMenu.js","features/common/baseUI/comp/UserMenuItem.js","features/common/auth/comp/AuthUserMenu.js","features/common/auth/feature.js","features/common/auth/subFeatures/authService/AuthServiceAPI.js","features/common/auth/subFeatures/authService/feature.js","featureFlags.js","features/common/auth/subFeatures/authServiceFirebase/AuthServiceFirebase.js","features/common/auth/subFeatures/authServiceFirebase/feature.js","features/common/auth/subFeatures/authServiceMock/AuthServiceMock.js","features/common/auth/subFeatures/authServiceMock/feature.js","features/common/bootstrap/actions.js","features/common/bootstrap/featureName.js","features/common/bootstrap/logic.js","features/common/bootstrap/state.js","features/common/bootstrap/route.js","features/common/bootstrap/feature.js","features/common/bootstrap/bootstrapFn.js","features/discovery/featureName.js","features/discovery/state.js","features/discovery/discoveryFilterFormMeta.js","features/discovery/actions.js","features/discovery/logic.js","util/iForms/comp/IRadioField.js","features/discovery/comp/DiscoveryFilterScreen.js","features/discovery/comp/DiscoveryListScreen.js","features/discovery/route.js","features/discovery/comp/DiscoveryLeftNavItem.js","features/discovery/feature.js","features/discovery/comp/DiscoveriesTitle.js","features/discovery/comp/DiscoveriesFooter.js","features/discovery/subFeatures/discoveryService/DiscoveryServiceAPI.js","features/discovery/subFeatures/discoveryService/feature.js","features/discovery/subFeatures/discoveryServiceGooglePlaces/DiscoveryServiceGooglePlaces.js","features/discovery/subFeatures/discoveryServiceGooglePlaces/feature.js","features/eateries/subFeatures/eateryService/EateryServiceAPI.js","features/eateries/subFeatures/eateryServiceMock/EateryServiceMock.js","features/discovery/subFeatures/discoveryServiceMock/DiscoveryServiceMock.js","features/discovery/subFeatures/discoveryServiceMock/feature.js","features/eateries/featureName.js","features/eateries/state.js","features/eateries/eateryFilterFormMeta.js","features/eateries/actions.js","features/eateries/logic.js","features/eateries/comp/EateryDetailScreen.js","features/eateries/comp/EateriesListScreen.js","features/eateries/comp/EateryFilterScreen.js","features/eateries/route.js","features/eateries/comp/EateryLeftNavItem.js","features/eateries/feature.js","features/eateries/comp/EateriesTitle.js","features/eateries/comp/EateriesFooter.js","features/eateries/subFeatures/eateryService/feature.js","features/eateries/subFeatures/eateryServiceFirebase/EateryServiceFirebase.js","features/eateries/subFeatures/eateryServiceFirebase/feature.js","features/eateries/subFeatures/eateryServiceMock/feature.js","features/common/initFirebase/feature.js","features/common/initFirebase/config/firebaseAppConfig.js","features/common/initGooglePlaces/feature.js","features/common/initGooglePlaces/config/googlePlacesApiKey.js","features/common/baseUI/actions.js","features/common/baseUI/featureName.js","features/common/baseUI/uiThemeStorage.js","features/common/baseUI/state.js","features/common/baseUI/logic.js","features/common/baseUI/comp/LeftNav.js","features/common/baseUI/comp/AppMotif.js","features/common/baseUI/comp/MainLayout.js","features/common/baseUI/comp/About.js","features/common/baseUI/feature.js","features/common/baseUI/comp/ToggleUITheme.js","features/common/location/actions.js","features/common/location/featureName.js","features/common/location/state.js","util/deviceLocation.js","features/common/location/feature.js","features/common/diagnostic/logActions/logic.js","features/common/diagnostic/logActions/featureName.js","features/common/diagnostic/logActions/feature.js","features/common/pwa/serviceWorker.js","features/common/pwa/feature.js","features/common/diagnostic/sandbox/comp/SandboxLeftNavItem.js","features/common/diagnostic/sandbox/feature.js","features/index.js","util/diagnosticUtil.js","util/configureFeatureUIntegrationTests.js","app.js","util/configureEateryNodDiagnostics.js","index.js"],"names":["Error","prototype","defineUserMsg","userMsg","this","expected","isExpected","isUnexpected","defineAttemptingToMsg","attemptingToMsg","concat","formatUserMsg","prior_toString","toString","call","verify","condition","msg","IFormMeta","_ref","arguments","length","undefined","formDesc","formSchema","formActionsAccessor","formStateSelector","mapDomain2Form","mapForm2Domain","unknownArgs","Object","objectWithoutProperties","check","prefix","isString","validate","isFunction","unknownArgKeys","keys","fieldNames","fields","labels","reduce","fieldName","describe","label","FORM","domain","values","castValues","validationOptions","abortEarly","asyncValidate","then","catch","yupErrs","msgs","inner","forEach","yupErr","path","message","registrar","formActionGenesis","appInjectedFormActions","myFormActions","open","actionMeta","traits","ratify","fieldChanged","fieldTouched","process","reject","close","action","formLogic","formActions","createLogic","name","type","String","_ref2","allow","getState","formState","api","inProcess","objectSpread","defineProperty","value","_ref3","cast","formReducer","_reducerHash","reducerHash","state","normalizedFieldNames","sort","normalizedValueProps","isEqual","formMsg","validating","newState","IForm","dispatch","isValidationExposed","getLabel","getValue","isValid","getMsg","getExposedMsg","handleFieldChanged","handleFieldTouched","handleProcess","event","preventDefault","handleClose","msgPrefix","User","_ref$name","_ref$email","email","_ref$emailVerified","emailVerified","_ref$pool","pool","_ref$guestLoc","guestLoc","_ref$originalLoc","originalLoc","classCallCheck","toStruct","reducer","slicedReducer","expandWithFassets","fassets","combineReducers","user","_authAct","signIn","complete","checkEmailVerified","userProfileChanged","signOut","signInForm","signInFormMeta","gfs","appState","getSlicedState","curUser","createSelector","curUserStruct","Yup","shape","required","pass","min","max","_authSel","generateActions","root","autoSignIn","haveDeviceCredentials","noDeviceCredentials","resendEmailVerification","withStyles","theme","variantSuccess","whiteSpace","variantInfo","variantWarning","variantError","props","react_default","a","createElement","build","maxSnack","dense","className","classes","NotifyAPI_withSnackBar","children","_singleton","NotifyAPI","_getPrototypeOf2","_this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","assertThisInitialized","_this2","_ref$duration","duration","_ref$level","level","_ref$position","position","_ref$modal","modal","_ref$actions","actions","levelVariant","anchorOrigin","isArray","indx","txt","autoHideDuration","actionsCbMap","map","identityFn","actionButtons","Button_default","key","color","size","snackbarKey","enqueueSnackbar","variant","onClickAction","e","closeSnackbar","clientAction","target","textContent","setTimeout","Fragment","React","Component","success","info","warn","error","top-left","vertical","horizontal","top-center","top-right","bottom-left","bottom-center","bottom-right","p","withSnackbar","notify","directive","display","toastBase","_ref2$duration","funcQual","toast","alertBase","alert","confirmBase","_ref4","confirm","displayName","DYNAMIC_DEFAULT","discloseError","err","_ref$showUser","showUser","_ref$logIt","logIt","console","log","noOp","encode","ref","safeguard","isPlainObject","encoding","demarkObjEncoding","JSON","stringify","demarkSafeguard","str","window","btoa","obfuscate","decode","result","indexOf","atob","deobfuscate","substring","parse","storeItem","deviceStorage","setItem","fetchItem","getItem","removeItem","_localStorageAvailable","storage","x","DOMException","code","storageAvailable","keyName","keyValue","localStorage","credentialsKey","startAuthorization","bootstrapComplete","done","checkDeviceCredentials","credentials","_action$credentials","manualSignIn","processSignIn","_ref5","warnTimeout","_ref6","authService","supplementSignedInUserLoc","transform","_ref7","next","sel","getLocation","supplementSignInComplete","_ref8","signInCleanup","_ref9","_ref10","refreshUser","_ref11","supplementSignOutUser","_ref12","_ref13","toConsumableArray","TransitionSlide","Slide_default","assign","direction","timeout","TransitionZoom","Zoom_default","CenterItems","Grid_default","container","justify","alignItems","SignInVerifyScreenWithStyles","titleBar","padding","palette","common","white","backgroundColor","primary","main","title","flexGrow","lockAvatar","margin","spacing","unit","entry","icon","marginRight","inProgress","fullScreen","useSelector","useDispatch","useCallback","Dialog_default","TransitionComponent","DialogTitle_default","disableTypography","Typography_default","noWrap","DialogContent_default","Avatar_default","LockOpen_default","DialogContentText_default","onClick","Check_default","Mail_default","ExitToApp_default","withMobileDialog","breakpoint","ITextField","iForm","extraProps","fieldLabel","prop","managedProps","fieldMsg","helperText","TextField_default","disabled","onChange","onBlur","SignInScreenWithStyles","invisible","border","formLabel","formInProcess","formErrMsg","onSubmit","SignInScreen_CenterItems","autoFocus","fullWidth","placeholder","FormHelperText_default","LinearProgress_default","SplashScreen","width","src","alt","progress","defaultProps","SplashScreen_withStyles","featureRoute","priority","PRIORITY","HIGH","content","isUserSignedIn","isUserSignedInUnverified","comp_SignInVerifyScreen","comp_SignInScreen","getAuthStatus","util_SplashScreen","UserMenu","_React$useState","useState","_React$useState2","slicedToArray","anchorUserMenu","setAnchorUserMenu","userMenuOpen","useMemo","Boolean","openUserMenu","currentTarget","_closeUserMenu","userMenuItems","useFassets","orderedUserMenuItems","item1Key","item2Key","localeCompare","IconButton_default","AccountCircle_default","Menu_default","anchorEl","transformOrigin","onClose","closeUserMenu","fassetsKey","UserMenuItem","MenuItem_default","doL8tr","createFeature","define","actions.userProfileChanged","actions.signOut","actions.signIn.complete","sel.curUser","defineUse","AppMotif.UserMenuItem.cc5_AuthUserMenu","UserMenuItem_UserMenuItem","logic","route","AuthServiceAPI","constructor","use","fassetsValue","featureFlags","useWIFI","mockGPS","sandbox","AuthServiceFirebase","currentAppUser","Promise","resolve","lat","lng","firebase","auth","signInWithEmailAndPassword","fbUser","database","uid","once","snapshot","userProfile","val","_this3","currentUser","reload","sendEmailVerification","_this4","enabled","AuthServiceMock","clone","setStatus","bootstrap_logic","_bootstrapAct","bootstrapFns","get","wrapup","bootstrapFnFinished","bootstrapFn","bootstrapWhat","nextBootstrapFn","find","status","statusMsg","getBootstrapStatusMsg","isBootstrapComplete","actions.bootstrapComplete","appDidStart","discovery_featureName","_discovery","_reducerHash2","_reducerHash3","_reducerHash4","_discoveryAct","retrieve","fail","nextPage","filterForm","discoveryFilterFormMeta","filter","searchText","distance","minprice","nextPageToken","discoveriesResp","pagetoken","discoveries","getInProgress","getFilter","getNextPageToken","getDiscoveries","distanceMsg","minpriceMsg","typeError","matches","_discoverySel","initialRetrieve","changeView","viewName","location","loc","defaultFilter","processFilter","discoveryService","searchDiscoveries","searchDiscoveriesNextPage","IRadioField","row","rowProp","msgDom","FormControl_default","FormLabel_default","RadioGroup_default","Op","FormControlLabel_default","control","Radio_default","checked","propTypes","PropTypes","string","isRequired","any","DiscoveryFilterScreenWithStyles","priceRadioProps","Close_default","DiscoveryFilterScreen_CenterItems","FilterList_default","list","fontStyle","eateryPool","getEateryDbPool","handleNextPage","handleFilterDiscovery","toggleEateryPool","discovery","id","removeEatery","addEatery","ListItem_default","ListItemText_default","align","Tune_default","divider","ListItemIcon_default","CheckCircle_default","renderPoolButton","secondary","addr","push","button","FastForward_default","List_default","discovery_route","comp_DiscoveryFilterScreen","curView","featureName","comp_DiscoveryListScreen","major","minor","dark","handleFilter","CloudDone_default","primaryTypographyProps","ListItemSecondaryAction_default","Divider_default","_defineUse","DiscoveryLeftNavItem","TitleComp","inline","FooterComp","Tooltip_default","DiscoveryServiceAPI","eateryId","DiscoveryServiceGooglePlaces","_ref$searchText","_ref$distance","_ref$minprice","miles","selCrit","radius","minPriceLevel","keyword","_resolve","_reject","googlePlacesService","nearbySearch","places","pagination","checkResponseStatus","_pagination","hasNextPage","discoveriesJson","place","gp2eatery","gp2discoveries","getDetails","placeId","eatery","_googlePlacesService","google","maps","PlacesService","document","place_id","phone","formatted_phone_number","geometry","formatted_address","vicinity","navUrl","url","website","EateryServiceAPI","baseLoc","monitorCB","EateryServiceMock","curPoolMonitor","eateries","initialEateryPoolIds","hash","eateriesMockDB","geodist","ChIJ-6rxFimpIIYRCrq8YVb3Ujs","ChIJ01VeXQymIIYRI6lnasCzx3M","ChIJ28cfCwymIIYRmTnBVitvmZ0","ChIJ2_bmEw6vIIYRS7ztDnnLpNg","ChIJ2ybOvA2mIIYRMRjz-wyjyu4","ChIJ6U-QewymIIYRzP5x_fdjwEw","ChIJ6b-WfSOmIIYRHRWCCIzhh08","ChIJ6yNtftWuIIYRJrESGu4C5fM","ChIJ6yVNhImlIIYR8tQxm8GDdi0","ChIJ6zsQedWuIIYRYmlx6sWCkUw","ChIJ76kBGjFcJ4YRwmBQteVXEyk","ChIJ7SpQ6RGmIIYRsuU_zP71sBI","ChIJ8VL0ug2mIIYRDrOWNVA6nhY","ChIJ8W3hFQymIIYRQObKMMNMyRo","ChIJ8dWgxgymIIYRyt8bRdLUXXU","ChIJ9Uw1l75cJ4YRXJ2HT-BttUU","ChIJDVhB0w2mIIYRZVLScBsQtTo","ChIJDxnIrtelIIYR8sJkRU4JuTM","ChIJDyC9Ig6mIIYRDWmrSR08N54","ChIJETttTjKkIIYRfnaTcqDqbnw","ChIJFYDeXQymIIYRh1Cion6Ta9I","ChIJG_d8TP5eJ4YR6wK6RwXBFkc","ChIJO8UE__pZJ4YROei1_1_xklM","ChIJRQDMLA2mIIYR-ZQnRWmSdnU","ChIJT4MvDBKmIIYRFjCBCX693Yc","ChIJTz6VoQumIIYRAXvVrezBp-U","ChIJW3d2Wc2lIIYRu-qs_NaSOkg","ChIJWegGCA6mIIYRYAiMKN4T4CM","ChIJX0qVUw2mIIYRNZcBBOu8Xfs","ChIJXUB3oBGmIIYRDRcvPi-pdDM","ChIJXXjcfZhcJ4YRWnFiE4ofXes","ChIJYbYLMBimIIYR_jUx5ds4Quo","ChIJaS5FoBGmIIYRTXOjqm3XxI0","ChIJaVmoJg6vIIYR9iB3FoxFfEQ","ChIJf-CSq3SmIIYR1QNnxY9r5wo","ChIJfV2h73KmIIYRRDpBV-crpB8","ChIJgTgvHA6mIIYR8-Hw_kHU-f0","ChIJi2AxW3SmIIYRmML7jsbqtb8","ChIJiUWE9A2mIIYRngo31C8qPSw","ChIJnUfNIiOmIIYRibUzWhx-PBg","ChIJnYiUJxtcJ4YRkAFmz9vshEU","ChIJp6mGj3GmIIYRfS0qjpoGsmo","ChIJpdlCODylIIYRyeE-wYHtahE","ChIJryxqrxCmIIYRtUFAh4d96BY","ChIJs_quaAymIIYRUwRs2-LHWqA","ChIJt2f3WgymIIYRb1B1S_gWc3I","ChIJu2hvxRGmIIYRaS0qajrz0ZE","ChIJuwqeNamlIIYRiCYSjKciG5c","ChIJv2VvX3GmIIYRlCIIn4WtIYY","ChIJvTnAEW6mIIYRqA7o0JRIRyA","ChIJzXUQJhimIIYR7wBw72LWWZs","discoverySearchPage1","discoverySearchPage2","divisionHit","DiscoveryServiceMock","eateries_featureName","_eateries","dbPool","_eateriesAct","changed","listView","eateryFilterFormMeta","sortOrder","selectedEateryId","viewDetail","spin","spinMsg","getDbPool","getListViewFilter","getFilteredEateries","e1","e2","getSelectedEatery","getSpinMsg","sortOrderMsg","nullable","positive","_eateriesSel","add","eateryDetail","remove","wrapUp","originalEateryService","mockEateryService","setupGuestUser","isGuest","eateryService","tearDownGuestUser","monitorDbPool","monitorDbEateryPool","closeDbPool","filteredEateries","Math","ceil","floor","randomEateryId","random","spinComplete","addToPoolPrep","fetchEateryDetail","addToPool","removeFromPool","EateryDetailScreenWithStyles","bottomBar","handleSpin","Navigation_default","Link_default","href","underline","Phone_default","icons_Link_default","DialogActions_default","SwapCalls_default","EateriesListScreen","selectedEatery","showDetail","currentDistance","subTxt","Restaurant_default","listContent","comp_EateryDetailScreen","EateryFilterScreenWithStyles","sortOrderRadioProps","EateryFilterScreen_CenterItems","eateries_route","comp_EateryFilterScreen","grey","A200","RestaurantMenu_default","actions.addEatery","actions.removeEatery","sel.getEateryDbPool","feature_defineUse","EateryLeftNavItem","EateryServiceFirebase","dbRef","off","on","set","appWillStart","curRootAppElm","appConfig","initializeApp","apiKey","scriptTag","body","appendChild","toggleUITheme","uiThemeKey","uiTheme","_baseUIAct","getUITheme","baseUI_logic","leftNav","leftNavVisible","setLeftNavVisible","_openLeftNav","closeLeftNav","leftNavItems","orderedLeftNavItems","Drawer_default","onKeyDown","AppBar_default","Toolbar_default","LeftNavItem","openLeftNav","app","appBar","top","bottom","toolbar","menuButton","height","overflow","paddingTop","paddingBottom","viewAuxiliaryContent","curViewAuxiliaryContent","matchKey","fallbackViewAuxiliaryContent","resolveCurViewAuxiliaryContent","disableGutters","icons_Menu_default","comp_LeftNav","lightTheme","createMuiTheme","typography","useNextVariants","darkTheme","themeInUse","styles","CssBaseline_default","comp_AppMotif","showAbout","docsUrl","histUrl","actions.changeView","sel.curView","AppMotif.UserMenuItem.aa2_UIThemeToggle","ChipIcon","MoonIcon","SunIcon","Chip_default","AppMotif.UserMenuItem.zz8_About","fassetValidations","comp","comp_MainLayout","setLocation","_locationAct","getCurPos","defaultLoc","mockLoc","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","geoErr","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","bootstrap.location","what","fn","createBootstrapFn","sel.getLocation","lastState","logActions_logic","group","curState","groupEnd","hostname","match","serviceWorker","ready","registration","unregister","doTest","cb","LowPriority_default","AppMotif.LeftNavItem.zz5_sandbox","features","eateryServiceFirebase","eateryServiceMock","discoveryServiceGooglePlaces","discoveryServiceMock","baseUI","authServiceFirebase","authServiceMock","bootstrap","initFirebase","initGooglePlaces","pwa","logActions","do$","desc","doThis","skip$","diag$","skip","configureFeatureUIntegrationTests","reducerAspect","logicAspect","routeAspect","removeAllReducers","feature","launchApp","diag","logf","disable","config","allowNoReducers$","s","test_allowNoReducers$","createReduxStore$","appReducer","middlewareArr","createStore","compose","applyMiddleware","removeAllLogic","allowNoLogic$","test_allowNoLogic$","createLogicMiddleware$","appLogic","createLogicMiddleware","removeAllRoutes","fallbackRoute","allowNoRoutes$","test_allowNoRoutes$","enable","reducerX","logicX","routeX","aspects","createReducerAspect","createLogicAspect","createRouteAspect","fallbackElm$","elm2html","elm","ReactDOMServer","renderToStaticMarkup","configureEateryNodDiagnostics","appAspects","registerRootAppElm","rootAppElm","ReactDOM","render","getElementById","__webpack_require__","d","__webpack_exports__","src_app"],"mappings":"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","file":"static/js/main.b3d6de7b.chunk.js","sourcesContent":["/**\r\n * Standardize the ability to handle ALL errors more generically, by\r\n * adding these value-added extensions to ALL Error objects (via this\r\n * Error class polyfill - a monkey patch).\r\n * \r\n * All Error instances (created anywhere) are extended to include the\r\n * following characteristics:\r\n * \r\n * - A new error.userMsg property is defined.\r\n * \r\n *   This message is intended to be seen by users, so it should be\r\n *   suitable for human consumption:\r\n *     - both in meaning, \r\n *     - and in sanitation (so as to not reveal any internal\r\n *       architecture)\r\n * \r\n *   By default, error.userMsg = 'Unexpected Condition'\r\n *   and can be changed by: \r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n * - There is a delineation of expected vs. unexpected conditions.  For\r\n *   example:\r\n * \r\n *     - An error communicating \"invalid password\" is an expected\r\n *       condition, because it is stimulated by user input.\r\n * \r\n *     - Contrast that with an error communicating \"DB is down\", which is\r\n *       an unexpected condition, because this is outside the user's\r\n *       control.\r\n * \r\n *   This distinction is controlled by whether an error.userMsg has\r\n *   been defined (expected) or not (unexpected).\r\n * \r\n *   In other words, all errors start out as unexpected, and can be\r\n *   changed to expected by simply invoking:\r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n *   This distinction may be programmatically delineated through one of\r\n *   the following methods:\r\n *     + error.isExpected(): boolean\r\n *     + error.isUnexpected(): boolean\r\n * \r\n * - A new error.attemptingToMsg property is defined.\r\n * \r\n *   This message is also intended to be seen by users, and provides\r\n *   additional detail of what was being attempted (over and above the\r\n *   error.userMsg).\r\n * \r\n *   By default, error.attemptingToMsg = ''\r\n *   and can be changed by: \r\n *     + error.defineAttemptingToMsg(attemptingToMsg): error\r\n * \r\n * - A new error.formatUserMsg() is provided that combines all\r\n *   user-specific messages (userMsg and attemptingToMsg).\r\n * \r\n *     + error.formatUserMsg(): string\r\n * \r\n * - The toString() method has been extended to suffix the base\r\n *   toString() with user-specific messages.\r\n * \r\n * - All of the new \"defining\" methods return the receiving error,\r\n *   so as to allow them to be conveniently chained.  For example:\r\n * \r\n *     throw new Error('catastrophic details here').defineAttemptingToMsg('sign in');\r\n * \r\n * **Usage Scenarios** are as follows:\r\n * \r\n * - Error Origination\r\n * \r\n *   In throwing a new Error, you can:\r\n *     throw new Error('internal technical error details')\r\n *                 .defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                 .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n * \r\n * - Error Pass Through\r\n * \r\n *   Within a mid-level service, you may capture an error from a lower\r\n *   point and supplement it as follows:\r\n * \r\n *     catch(err) {\r\n *       throw err.defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n *     }\r\n * \r\n * - Error Consumption (by client)\r\n * \r\n *   Using these enhancements, the client can abstractly apply various\r\n *   heuristics, such as:\r\n *\r\n *     - if logging is necessary\r\n *       * if so, reveal complete context (internal details and user context)\r\n *     - if user notification necessary\r\n *       * if so supply info suitable for human consumption\r\n * \r\n *   For more usage scenarios, please refer to the discloseError.js utility.\r\n */\r\n\r\n/* eslint-disable no-extend-native */  // we are very careful NOT to break native behavior of the Error object\r\n\r\nif (!Error.prototype.defineUserMsg) { // key off of one of several extension points\r\n\r\n  /**\r\n   * Define a user-specific message, that is applicable for human\r\n   * consumption:\r\n   *  - both in meaning, \r\n   *  - and in sanitization (so as to not reveal any internal architecture).\r\n   *\r\n   * This method also delineates the error as an expected condition.\r\n   *\r\n   * @param {String} userMsg the user message to define\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineUserMsg = function(userMsg) {\r\n    this.userMsg  = userMsg;\r\n    this.expected = true;\r\n    return this;\r\n  };\r\n  Error.prototype.userMsg = \"Unexpected Condition\"; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * expected (say user input error),\r\n   * or not (say a catestrophic error).\r\n   *\r\n   * @return {boolean} error expected (true) or not (false).\r\n   */\r\n  Error.prototype.isExpected = function() {\r\n    return this.expected;\r\n  };\r\n  Error.prototype.expected = false; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * unexpected (say a catestrophic error),\r\n   * or not (say user input error).\r\n   *\r\n   * @return {boolean} error unexpected (true) or not (false).\r\n   */\r\n  Error.prototype.isUnexpected = function() {\r\n    return !this.expected;\r\n  };\r\n\r\n\r\n  /**\r\n   * Define a user-specific 'attempting to' message, that provides\r\n   * additional details of what was being attempted.\r\n   *\r\n   * Errors with this context are prefixed with ' ... attempting to: ',\r\n   * so word your phrasing appropriatly.\r\n   * \r\n   * Multiple attempting-to phrases can be used, which will be\r\n   * combined with the ', -and- ' phrase.\r\n   *\r\n   * @param {String} attemptingToMsg the user-specific attempting\r\n   * to' message.\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineAttemptingToMsg = function(attemptingToMsg) {\r\n    if (this.attemptingToMsg) // append multiples\r\n      this.attemptingToMsg += `, -and- ${attemptingToMsg}`;\r\n    else                      // initial definition\r\n      this.attemptingToMsg += ` ... attempting to: ${attemptingToMsg}`;\r\n    return this;\r\n  };\r\n  Error.prototype.attemptingToMsg = ''; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Format a user-specific message, combining all user-specific contexts.\r\n   *\r\n   * @return {string} formatted user message.\r\n   */\r\n  Error.prototype.formatUserMsg = function() {\r\n    return this.userMsg + this.attemptingToMsg;\r\n  };\r\n\r\n\r\n  /**\r\n   * Extend the Error toString() to prefix user-specfic context.\r\n   */\r\n  const prior_toString = Error.prototype.toString; // monkey patch\r\n  Error.prototype.toString = function() {\r\n    return prior_toString.call(this) + '\\n\\nUser Msg: ' + this.formatUserMsg();\r\n  };\r\n\r\n\r\n  // L8TR:\r\n  // /**\r\n  //  * Define an indicator as to the cause of this error ... used to apply\r\n  //  * various heuristics, such as whether logging is necessary.\r\n  //  *\r\n  //  * The following indicators are available:\r\n  //  *   Error.Cause {\r\n  //  *     UNEXPECTED_CONDITION        [default]\r\n  //  *     RECOGNIZED_USER_ERROR\r\n  //  *   }\r\n  //  *\r\n  //  * @param {String} cause one of Error.Cause.\r\n  //  *\r\n  //  * @return {Error} self, supporting convenient Error method chaining.\r\n  //  */\r\n  // Error.prototype.defineCause = function(cause) {\r\n  //   this.cause = cause;\r\n  //   return this;\r\n  // };\r\n  // \r\n  // Error.Cause = {\r\n  //   UNEXPECTED_CONDITION:    'UNEXPECTED_CONDITION',\r\n  //   RECOGNIZED_USER_ERROR: 'RECOGNIZED_USER_ERROR'\r\n  // };\r\n  // \r\n  // Error.prototype.cause = Error.Cause.UNEXPECTED_CONDITION; // prototype provides the default\r\n\r\n}\r\n","/**\r\n * A convenience assertion utility, typically used to validate\r\n * pre-conditions of a routine.\r\n *\r\n * **Advanced**: verify.prefix(msgPrefix) returns a higher-order\r\n *               verify() function where all messages are prefixed.\r\n *\r\n * @param {truthy} condition - a \"truthy\" condition which\r\n * must be satisfied.\r\n *\r\n * @param {string} msg - a message clarifying the condition being\r\n * checked.\r\n * \r\n * @throws {Error} an Error is thrown when the supplied condition is\r\n * NOT met.\r\n * \r\n * @private\r\n */\r\nexport default function verify(condition, msg) {\r\n  if (!condition) {\r\n    // TODO: don't think there is any benefit in logging this console.error \r\n    // console.error(`verify() constraint issue: ${msg}`); // supplement exception with error log (for react-native exposure)\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nverify.prefix = function(msgPrefix) {\r\n  return (condition, msg) => verify(condition, msgPrefix+msg);\r\n};\r\n","import {reducerHash}  from 'astx-redux-util';\r\nimport {createLogic}  from 'redux-logic';\r\nimport isEqual        from 'lodash.isequal';\r\nimport isString       from 'lodash.isstring';\r\nimport isFunction     from 'lodash.isfunction';\r\nimport verify         from 'util/verify';\r\n\r\n/**\r\n * Define the characteristics of an Intelligent Form - a reusable forms\r\n * utility that is logic-based (using redux-logic).\r\n * \r\n * A form schema provides the details about the form fields (field names,\r\n * labels, validation, etc.).  This schema is driven by Yup (a\r\n * light-weight Joi), so it is declarative and dead simple!\r\n * \r\n * Complete aspects of the form is auto generated, including actions,\r\n * logic, and reducers.  These auto-generated items implement the hard\r\n * work related to dynamically determining when field validation should\r\n * be exposed to the user (based on user touches, and form submission).\r\n * \r\n * **Bottom line**: iForms promotes **painless re-usability!** As a\r\n * **bonus**, it is logic-based, so it is **extremely simple to inject\r\n * **app-specific logic** to manipulate various business-related\r\n * **items.\r\n *\r\n *\r\n * Form Input/Output Boundaries (via App Domains)\r\n * ==============================================\r\n *\r\n * When a form is initiated, the `open` action is optionally\r\n * supplied a domain object, to initialize the form (when not\r\n * supplied all form fields start out as empty strings).\r\n *\r\n * We use the term \"domain\" in a generic way, that can\r\n * manifest itself in a variety of different things.  It can\r\n * be a real application domain object (say from an API\r\n * call), or another part of your state tree, or any\r\n * number of other things.\r\n *\r\n * Likewise, when the form is processed (via the `process`\r\n * action), the form values will be mapped back to the domain\r\n * representation (retained in the `process` action).\r\n *\r\n * This makes it convenient for your logic to operate using\r\n * app-specific structures.\r\n *\r\n * You can easily define the mapping between your domain and the form\r\n * values structure, through the optional\r\n * mapDomain2Form/mapPropsToValues parameters.  By default (when not\r\n * supplied), the domain structure is assumed to be \"one in the same\"\r\n * as the form values structure (through a straight mapping of the\r\n * well known iForm fields).\r\n *\r\n * @param {string} namedArgs.formDesc a human-interpretable description for\r\n * this form (ex: 'Sign In').\r\n *\r\n * @param {ObjectSchema} namedArgs.formSchema the Yup Schema object defining\r\n * form fields, labels, and validation characteristics.\r\n *\r\n * @param {function} namedArgs.formActionsAccessor an accessor\r\n * function that promotes our specific formActions.  A function is\r\n * used to avoid cyclic dependencies in the startup bootstrap process\r\n * (because BOTH actions and IFormMeta instances are created in-line).\r\n * API: () => formActions\r\n *\r\n * @param {function} namedArgs.formStateSelector a selector function\r\n * that promotes our specific formState, given the top-level appState.\r\n * API: (appState) => formState\r\n *\r\n * @param {function} [namedArgs.mapDomain2Form] optionally define a\r\n * mapping between an app domain object and the form values (employed\r\n * through the `open` action).  When not specified, a straight mapping\r\n * of any iForm fields is used.\r\n * API: (domain) => values\r\n *\r\n * EX:\r\n * ```\r\n *   mapDomain2Form: (domain) => ({\r\n *     id:        domain.id,\r\n *     email:     domain.email,\r\n *     firstName: domain.name.first,\r\n *     lastName:  domain.name.last\r\n *   })\r\n * ```\r\n *\r\n * @param {function} [namedArgs.mapForm2Domain] optionally define a\r\n * mapping between form values and the app domain object (employed\r\n * through the `process` action).  When not specified, a straight\r\n * mapping of the iForm values is used (i.e. domain is same as\r\n * values).\r\n * API: (castValues) => domain // NOTE: castValues have been \"cast\" to the appropriate type\r\n *\r\n * EX:\r\n * ```\r\n *   mapForm2Domain: (castValues) => ({\r\n *     id:       castValues.id,\r\n *     email:    castValues.email,\r\n *     name:  {\r\n *       first:  castValues.firstName,\r\n *       last:   castValues.lastName\r\n *     }\r\n *   })\r\n * ```\r\n *\r\n * @return {Object} IFormMeta object exposing various aspects of an\r\n * Intelligent Form ...\r\n * ```\r\n *  {\r\n *    registrar: { // auto-generated items to be externally registered\r\n *      // iForm action creators to be injected into action-u generateActions()\r\n *      formActionGenesis([appInjectedFormActions]): ActionGenesis\r\n *      \r\n *      // iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n *      formLogic(): logic[]\r\n *      \r\n *      // iForm reducer to be registered in the redux state management process\r\n *      formReducer(): function\r\n *    }\r\n * \r\n *    // the selector that promotes self's specific formState, given the top-level appState\r\n *    formStateSelector(appState): formState\r\n *\r\n *    // create an IForm helper object, providing convenience accessors/handlers, avoiding direct formState interpretation\r\n *    IForm(formState, dispatch): IForm\r\n *  }\r\n * ```\r\n */\r\nexport default function IFormMeta({formDesc,\r\n                                   formSchema,\r\n                                   formActionsAccessor,\r\n                                   formStateSelector,\r\n                                   mapDomain2Form,\r\n                                   mapForm2Domain,\r\n                                   ...unknownArgs}={}) {\r\n\r\n  // ***\r\n  // *** validate parameters\r\n  // ***\r\n\r\n  const check = verify.prefix('IFormMeta() parameter violation: ');\r\n\r\n  check(formDesc,            'formDesc is required');\r\n  check(isString(formDesc),  'invalid formDesc (expecting a string)');\r\n\r\n  check(formSchema,          'formSchema is required');\r\n  check(formSchema.validate, 'invalid formSchema (expecting a Yup Schema)'); // duck type check\r\n\r\n  check(formActionsAccessor,             'formActionsAccessor is required');\r\n  check(isFunction(formActionsAccessor), 'invalid formActionsAccessor (expecting a function)');\r\n\r\n  check(formStateSelector,             'formStateSelector is required');\r\n  check(isFunction(formStateSelector), 'invalid formStateSelector (expecting a function)');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n\r\n  // ***\r\n  // *** decompose meta info from the supplied Yup Schema (like fieldNames and labels)\r\n  // ***\r\n\r\n  // fieldNames: String[]\r\n  const fieldNames = Object.keys(formSchema.fields);\r\n\r\n  // labels: { ... fallback to fieldName when NO schema label supplied\r\n  //   fieldName1: string,\r\n  //   fieldName2: string\r\n  // }\r\n  const labels = fieldNames.reduce( (labels, fieldName) => {\r\n    labels[fieldName] = formSchema.fields[fieldName].describe().label || fieldName;\r\n    return labels;\r\n  }, {FORM: formDesc}); // initial value contains our formDesc\r\n\r\n\r\n\r\n  // ***\r\n  // *** default domain mapping functions with ones that have knowledge of our contextual fieldNames\r\n  // ***\r\n\r\n  if (!mapDomain2Form) {\r\n    mapDomain2Form = (domain) => {\r\n      return fieldNames.reduce( (values, fieldName) => {\r\n        values[fieldName] = domain[fieldName] || '';\r\n        values[fieldName] = values[fieldName].toString(); // insure string representation\r\n        return values;\r\n      }, {} );\r\n    };\r\n  }\r\n  check(isFunction(mapDomain2Form), 'invalid mapDomain2Form (expecting a function)');\r\n\r\n  if (!mapForm2Domain) {\r\n    mapForm2Domain = (castValues) => castValues;\r\n  }\r\n  check(isFunction(mapForm2Domain), 'invalid mapForm2Domain (expecting a function)');\r\n\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm action creators to be injected into action-u generateActions()\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated action creators required by self's\r\n   * iForm.\r\n   *\r\n   * @param {ActionGenesis} [appInjectedFormActions] optionally\r\n   * specify additional app-specific action creators to supplement the\r\n   * auto-generated formActions.  This is typically used to introduce\r\n   * fail/complete actions that are spawned out of app-specific logic\r\n   * modules.  NOTE: the formAction root can even become an action\r\n   * creator by promoting a top-level actionMeta node in this\r\n   * structure.\r\n   * \r\n   * @return {ActionGenesis} the auto-generated action creators\r\n   * required by self's iForm.  This is an action-u ActionGenesis\r\n   * sub-structure that is to be injected into the action-u\r\n   * generateActions() process.  The following standard iForm actions\r\n   * are defined:\r\n   * ```\r\n   *    ${formActionGenesis}: {\r\n   *      open([domain] [,formMsg])      ... activate the form state, initiating form processing\r\n   *      fieldChanged(fieldName, value) ... maintain controlled field state change (with validation)\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      fieldTouched(fieldName)        ... maintain field touched status, impacting validation dynamic exposure\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      process()                      ... process this form\r\n   *                                         NOTE 1: IForm logic will reject this action, when the form is invalid\r\n   *                                         NOTE 2: IForm logic supplements action with values (of appropriate\r\n   *                                                 data types) and domain (in app-specific structure)\r\n   *        reject(msgs)                 ... reject process action with supplied validation msgs\r\n   *      close()                        ... close this form\r\n   *\r\n   *      ...appSpecificActions()        ... app-specific action creators supplementing the auto-generated formActions\r\n   *    }\r\n   * ```\r\n   */\r\n  function formActionGenesis(appInjectedFormActions={}) {\r\n\r\n    // NOTE: As an optimization, we bypass detailed action creator validation\r\n    //       because it is a controlled invocation (by IForm components).\r\n    //       ... Even though fieldName is in the developer realm, the fieldName is validated by our IFormElm components\r\n    //       ... Here is an example ratify() for the fieldChanged() action creator:\r\n    //             ratify(fieldName, value) {\r\n    //               verify(isString(fieldName), `'${formDesc}' form fieldChanged() action creator ... fieldName param is NOT a string: ${fieldName}`);\r\n    //               verify(labels[fieldName],   `'${formDesc}' form fieldChanged() action creator ... fieldName: '${fieldName}' is NOT one of the expected fields: ${fieldNames}`);\r\n    //               verify(isString(value),     `'${formDesc}' form fieldChanged() action creator ... value param is NOT a string: ${value}`);\r\n    //               return [fieldName, value];\r\n    //             },\r\n\r\n    // define our base auto-generated action creators\r\n    const myFormActions = {\r\n\r\n      open: {         // open([domain] [,formMsg]): Action\r\n                      // > activate the form state, initiating form processing\r\n                      actionMeta: {\r\n                        traits: ['domain', 'formMsg'],\r\n                        ratify: (domain=null, formMsg=null) => [domain, formMsg],\r\n                      },\r\n      },\r\n\r\n      fieldChanged: { // fieldChanged(fieldName, value): Action\r\n                      // > maintain controlled field state change (with validation)\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName', 'value'],\r\n                      },\r\n      },\r\n\r\n      fieldTouched: { // fieldTouched(fieldName): Action\r\n                      // > maintain field touched status, impacting validation dynamic exposure\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName'],\r\n                      },\r\n      },\r\n\r\n      process: {      // process(): Action\r\n                      // > process this form\r\n                      //   NOTE 1: IForm logic will reject this action, when the form is invalid\r\n                      //   NOTE 2: IForm logic supplements action with values (of appropriate\r\n                      //           data types) and domain (in app-specific structure)\r\n                      actionMeta: {\r\n                      },\r\n\r\n        reject: {     // reject(msgs): Action\r\n                      // > reject process action with supplied validation msgs\r\n                      actionMeta: {\r\n                        traits: ['msgs'],\r\n                      },\r\n        },\r\n\r\n      },\r\n\r\n      close: {        // close(): Action\r\n                      // > close this form\r\n                      actionMeta: {\r\n                      },\r\n      },\r\n\r\n    };\r\n\r\n    // inject any app-specific actions creators\r\n    const check = verify.prefix('IFormMeta.formActionGenesis(): invalid appInjectedFormActions parameter ... ');\r\n    for (const action in appInjectedFormActions) {\r\n      check(!myFormActions[action], `${action} action is reserved as one of the auto-generated iForm actions.`);\r\n      myFormActions[action] = appInjectedFormActions[action];\r\n    }\r\n\r\n    // beam me up Scotty!\r\n    return myFormActions;\r\n  }\r\n\r\n\r\n  const validationOptions = {\r\n    abortEarly: false, // return ALL errors\r\n  };\r\n\r\n  /**\r\n   * Validate the supplied values against our schema.\r\n   *\r\n   * @param {Object} values the set of values to validate (keyed by\r\n   * fieldName).\r\n   * \r\n   * @return {promise} the async promise that resolves to msgs object\r\n   * (keyed by fieldName) containing validation messages for all\r\n   * fields.\r\n   */\r\n  function asyncValidate(values) {\r\n    return formSchema.validate(values, validationOptions)\r\n    .then( () => ({}) )  // empty msgs\r\n    .catch( yupErrs => { // transform all Yup errors into our msgs\r\n      const msgs = {};\r\n      yupErrs.inner.forEach(yupErr => {\r\n        msgs[yupErr.path] = yupErr.message;\r\n      });\r\n      return msgs;\r\n    });\r\n  }\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n  // ***\r\n\r\n  /**\r\n   * Promote the redux-logic modules that orchestrates various iForm\r\n   * characteristics, such as validation.\r\n   *\r\n   * @return {logic[]} the redux-logic modules that perform low-level\r\n   * iForm business logic (such as validation).  This should be\r\n   * registered to the app's redux-logic process.\r\n   */\r\n  function formLogic() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // promote our iForm logic[]\r\n    return [\r\n\r\n      createLogic({\r\n        name: `validateFields for '${formDesc}' form`,\r\n        type: [String(formActions.fieldChanged),\r\n               String(formActions.fieldTouched)], // if fields have initial value (i.e. never changed) this will be the first time fields are validated\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform field validation\r\n          // ... fieldChanged action has an updated value in action\r\n          const values = action.type === String(formActions.fieldChanged)\r\n                          ? {...formState.values, [action.fieldName]: action.value}\r\n                          : formState.values;\r\n          asyncValidate(values)\r\n          .then(msgs => {\r\n\r\n            // retain overall form msg if any\r\n            if (formState.msgs.FORM) {\r\n              msgs.FORM = formState.msgs.FORM;\r\n            }\r\n\r\n            // supplement our action with validation msgs\r\n            action.msgs = msgs;\r\n\r\n            // continue processing, supporting field updates, and visualizing any validation errors\r\n            allow(action);\r\n          });\r\n\r\n        },\r\n      }),\r\n\r\n\r\n      createLogic({\r\n        name: `process validation for '${formDesc}' form`,\r\n        type: String(formActions.process),\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform validation\r\n          asyncValidate(formState.values)\r\n            .then( msgs => {\r\n\r\n              // reject validation problems (via new action)\r\n              if (Object.keys(msgs).length > 0) {\r\n\r\n                // inject form msg to further highlight validation issues\r\n                msgs.FORM = 'Please resolve the highlighted issues, and try again.';\r\n\r\n                // reject current process action by re-issuing a different process.reject action\r\n                allow( formActions.process.reject(msgs) );\r\n              }\r\n\r\n              // allow clean validation (supplementing action with values/domain)\r\n              else {\r\n\r\n                // supplement our action with values/domain\r\n                const castValues = formSchema.cast(formState.values);\r\n                const domain     = mapForm2Domain(castValues);\r\n                action.values = castValues;\r\n                action.domain = domain;\r\n\r\n                allow(action);\r\n              }\r\n            });\r\n\r\n        },\r\n      }),\r\n\r\n    ];\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm reducer to be registered in the redux state management process\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated reducer required by self's iForm, that\r\n   * maintains our form's redux state.\r\n   * \r\n   * @return {function} the reducer that maintains our iForm redux\r\n   * state.  This reducer is to be registered in the redux state\r\n   * management process.  The following state shape is maintained:\r\n   * ```\r\n   *    ${formState}: { // ex: appState.auth.signInForm (null for inactive form)\r\n   *\r\n   *      labels: {       // field labels (UI promotion and validation msg content)\r\n   *        FORM:         string, // form desc\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      values: {       // field values\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      msgs: {          // validation msgs (if any) ... initial: {}\r\n   *        FORM:          string, // msg spanning entire form ... non-exist for valid\r\n   *        <fieldName1>:  string, // non-exist for valid\r\n   *        <fieldName2>:  string, // non-exist for valid\r\n   *      },\r\n   *\r\n   *      validating: {    // demarks which fields are being validated ... based on whether it has been touched by user (internal use only)\r\n   *        FORM:          boolean, // ALL fields validated (takes precedence)\r\n   *        <fieldName1>:  boolean,\r\n   *        <fieldName2>:  boolean,\r\n   *      },\r\n   *\r\n   *      inProcess: boolean, // is form being processed?\r\n   *    }\r\n   * ```\r\n   */\r\n  function formReducer() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // generate our reducer function\r\n    const myFormReducer = reducerHash({\r\n\r\n      [formActions.open]: (state, action) => {\r\n        // define our initial form values\r\n        // ... interpret optional action props\r\n        const values = action.domain\r\n                           // ... either from our supplied domain (if any)\r\n                           //     INTERPRETED by mapDomain2Form(), which can be\r\n                           //     either client supplied or our own default\r\n                         ? mapDomain2Form(action.domain)\r\n                           // ... or inject empty string for each field\r\n                           //     NOTE: we prefer to NOT handle this in mapDomain2Form,\r\n                           //           so as to NOT rely on client logic \"to do the right thing\"\r\n                         : fieldNames.reduce( (values, fieldName) => { \r\n                             values[fieldName] = '';\r\n                             return values;\r\n                           }, {});\r\n        // ... insure no miss-matched field introduced in mapDomain2Form()\r\n        //     - comparing our known fields: fieldNames: string[]\r\n        //     - to the generated object:    values:     {field1, field2, etc}\r\n        const normalizedFieldNames = fieldNames.sort();\r\n        const normalizedValueProps = Object.keys(values).sort();\r\n        verify(isEqual(normalizedFieldNames, normalizedValueProps),\r\n               `'${formDesc}' form open reducer ... miss-matched field(s) introduced in app-supplied mapDomain2Form ... generated fields: ${normalizedValueProps} ... expected fields: ${normalizedFieldNames}`);\r\n\r\n        const msgs = {};\r\n        if (action.formMsg) { // ... interpret optional action.formMsg\r\n          msgs.FORM = action.formMsg;\r\n        }\r\n\r\n        // expand a completely new formState\r\n        return {\r\n          labels,\r\n          values,\r\n          msgs,\r\n          validating: {},\r\n          inProcess: false,\r\n        };\r\n      },\r\n\r\n      [formActions.fieldChanged]: (state, action) => {\r\n\r\n        // carve out new container (supporting immutable state)\r\n        const newState = {...state};\r\n\r\n        // merge new field value\r\n        newState.values = {...state.values, [action.fieldName]: action.value};\r\n\r\n        // retain logic-injected validation msgs (within action)\r\n        newState.msgs = action.msgs;\r\n\r\n        // that's all folks\r\n        return newState;\r\n      },\r\n\r\n      [formActions.fieldTouched]: (state, action) => {\r\n        if (state.validating[action.fieldName]) {\r\n          return state; // validating indicator already set\r\n        }\r\n        else {          // set our field validating indicator to true\r\n          const newState      = {...state};\r\n          newState.validating = {...state.validating, [action.fieldName]: true};\r\n          newState.msgs       = action.msgs; // also retain validation logic-injected msgs\r\n          return newState;\r\n        }\r\n      },\r\n\r\n      [formActions.process]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.inProcess  = true; // mark form as being processed\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = {}; // clear validation msgs (form is clean)\r\n        return newState;\r\n      },\r\n\r\n      [formActions.process.reject]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = action.msgs; // retain validation logic-injected msgs\r\n        return newState;\r\n      },\r\n\r\n      [formActions.close]: (state, action) => null,\r\n\r\n    }, null); // initialState\r\n\r\n    // promote our iForm reducer function\r\n    return myFormReducer;\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define our IForm helper object\r\n  // ***\r\n\r\n  /**\r\n   * Create an IForm helper object, providing convenience\r\n   * accessors/handlers, avoiding direct formState interpretation.\r\n   *\r\n   * @param {ReduxState} formState the redux form state supporting\r\n   * self's form.\r\n   *\r\n   * @param {function} dispatch the redux dispatch function, supporting\r\n   * self's handlers.\r\n   * \r\n   * @return {Object} the IForm helper object, with the following API:\r\n   * ```\r\n   * {\r\n   *   // the label of the supplied field (or form when not supplied)\r\n   *   getLabel(fieldName='FORM'): string\r\n   *\r\n   *   // the value of the supplied field (N/A for form)\r\n   *   getValue(fieldName): string\r\n   *\r\n   *   // is supplied field value valid (or form when not supplied\r\n   *   // ... i.e. all fields in form), irrespective to whether errors are\r\n   *   // exposed to the user or not\r\n   *   isValid(fieldName='FORM'): boolean\r\n   * \r\n   *   // the validation msg of supplied field (or form when not supplied)\r\n   *   // irrespective to whether errors are exposed to the user or not\r\n   *   // - undefined/null for valid\r\n   *   getMsg(fieldName='FORM'): string\r\n   * \r\n   *   // the exposed validation msg of supplied field (or form when not\r\n   *   // supplied) - undefined/null for valid.  The exposed msg is tailored \r\n   *   // to whether validation should be exposed to the user or not \r\n   *   // (BASED ON user touches).\r\n   *   getExposedMsg(fieldName='FORM'): string\r\n   *\r\n   *   // Should validation messages be exposed for supplied field (or\r\n   *   // form when not supplied), based on user touches.\r\n   *   // \r\n   *   // This is needed to expose UI success/error icon adornment\r\n   *   // (i.e. no adornment is shown if NOT yet being validated).\r\n   *   //\r\n   *   // NOTE: Form validation (when enabled) takes precedence over\r\n   *   //       individual fields.\r\n   *   isValidationExposed(fieldName='FORM'): boolean\r\n   *\r\n   *   // is form being processed?\r\n   *   inProcess(): boolean\r\n   *\r\n   *   // Service an IForm field value change.\r\n   *   handleFieldChanged(fieldName, value): void\r\n   *\r\n   *   // Service an IForm field touched.\r\n   *   handleFieldTouched(fieldName): void\r\n   *\r\n   *   // Service an IForm process request.\r\n   *   handleProcess(): void\r\n   *\r\n   *   // Service an IForm close request.\r\n   *   handleClose(): void\r\n   * }\r\n   * ```\r\n   */\r\n  function IForm(formState, dispatch) {\r\n\r\n    // validate parameters\r\n    const check = verify.prefix('IFormMeta.IForm() parameter violation: ');\r\n    check(formState,                            'formState is required');\r\n    check(formState.labels,                     'invalid formState - does NOT conform to the IForm state');\r\n    check(formState.labels.FORM===formDesc,     `miss-matched formState - expecting ${formDesc} but received ${formState.labels.FORM}`);\r\n\r\n    check(dispatch,                             'dispatch is required');\r\n    check(isFunction(dispatch),                 'invalid dispatch (expecting a function)');\r\n\r\n\r\n    // formActions required for handler methods (below)\r\n    const formActions = formActionsAccessor();\r\n\r\n\r\n    /**\r\n     * @return {string} the label of the supplied field (or form when\r\n     * not supplied).\r\n     */\r\n    function getLabel(fieldName='FORM') {\r\n      return formState.labels[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} the value of the supplied field (N/A for form).\r\n     */\r\n    function getValue(fieldName) {\r\n      verify(fieldName || fieldName !== 'FORM', `IFormMeta.IForm.getValue() unsupported fieldName: ${fieldName}`);\r\n      return formState.values[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is supplied field value valid (or form when not supplied\r\n     * ... i.e. all fields in form), irrespective to whether errors are\r\n     * exposed to the user or not.\r\n     * @return {boolean} \r\n     */\r\n    function isValid(fieldName='FORM') {\r\n      return fieldName==='FORM'\r\n               ? Object.keys(formState.msgs).length === 0\r\n               : formState.msgs[fieldName] ? false : true; // eslint-disable-line no-unneeded-ternary\r\n    }\r\n\r\n    /**\r\n     * @return {string} the validation msg of supplied field (or form\r\n     * when not supplied) irrespective to whether errors are exposed\r\n     * to the user or not - undefined/null for valid\r\n     */\r\n    function getMsg(fieldName='FORM') {\r\n      return formState.msgs[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} exposed validation msg of supplied field (or\r\n     * form when not supplied) - undefined/null for valid.  The\r\n     * exposed msg is tailored to whether validation should be exposed\r\n     * to the user or not (BASED ON user touches).\r\n     */\r\n    function getExposedMsg(fieldName='FORM') {\r\n      return isValidationExposed(fieldName) ? formState.msgs[fieldName] : null;\r\n    }\r\n\r\n    /**\r\n     * Should validation messages be exposed for supplied field (or\r\n     * form when not supplied), based on user touches.\r\n     * \r\n     * This is needed to expose UI success/error icon adornment\r\n     * (i.e. no adornment is shown if NOT yet being validated).\r\n     *\r\n     * NOTE: Form validation (when enabled) takes precedence over\r\n     *       individual fields.\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function isValidationExposed(fieldName='FORM') {\r\n      return formState.validating.FORM || formState.validating[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is form being processed?\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function inProcess() {\r\n      return formState.inProcess;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Service an IForm field value change.\r\n     */\r\n    function handleFieldChanged(fieldName, value) {\r\n      dispatch( formActions.fieldChanged(fieldName, value) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm field touch.\r\n     */\r\n    function handleFieldTouched(fieldName) {\r\n      dispatch( formActions.fieldTouched(fieldName) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm process request.\r\n     */\r\n    function handleProcess(event) {\r\n      dispatch( formActions.process() );\r\n\r\n      // for <form onSubmit> handlers, prevent anything from being submitted to the server\r\n      // ... old technique would be to \"return false\" from the handler, \r\n      //     but this is no longer supported in react\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Service an IForm close request.\r\n     */\r\n    function handleClose() {\r\n      dispatch( formActions.close() );\r\n    }\r\n\r\n    // promote our IForm helper object\r\n    return {\r\n      getLabel,\r\n      getValue,\r\n      isValid,\r\n      getMsg,\r\n      getExposedMsg,\r\n      isValidationExposed,\r\n      inProcess,\r\n      handleFieldChanged,\r\n      handleFieldTouched,\r\n      handleProcess,\r\n      handleClose,\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** publicly expose needed IFormMeta characteristics\r\n  // ***\r\n\r\n  return {\r\n    registrar: {\r\n      formActionGenesis,\r\n      formLogic,\r\n      formReducer,\r\n    },\r\n    formStateSelector,\r\n    IForm,\r\n  };\r\n\r\n}\r\n","import verify from 'util/verify';\r\n\r\n/**\r\n * The User object representing the active user within an application,\r\n * holding their identity, authorization status, and profile.\r\n *\r\n * NOTE: Using the default constructor, a User object can always be\r\n *       made available, even when no user is signed in.\r\n *       In this case:\r\n *       - all properties will be null (or false), and\r\n *       - more importantly the getAuthStatus() and isXyz() methods will\r\n *         correctly represent the 'signedOut' status.\r\n */\r\nexport default class User {\r\n\r\n  /**\r\n   * Instantiate a User object with the supplied named parameters.\r\n   *\r\n   * See NOTE (above) in regard to the default constructor.\r\n   *\r\n   * @param {string} name the user's name (e.g. 'John Doe')\r\n   *\r\n   * @param {string} email the user's email (used as an identifier for\r\n   * authorization credentials).  A null value indicates NO user is\r\n   * signed in.\r\n   *\r\n   * @param {boolean} emailVerified indicates whether the user's\r\n   * email been verified (used in authorization credentials).\r\n   *\r\n   * @param {string} pool the user's eatery pool identifier\r\n   * (e.g. 'DateNightPool').  This identifies the set of pool eateries\r\n   * the user has to choose from, and can be shared with other users.\r\n   *\r\n   * @param {loc} guestLoc the location ({lat, lng}) of a \"guest\"\r\n   * user.  When supplied, indicates this IS a \"guest\" user\r\n   * (i.e. isGuest(): true).\r\n   *\r\n   * @param {loc} originalLoc the real location ({lat, lng}) of the\r\n   * user.  This information is used to \"reset\" the characteristics of\r\n   * \"guest\" users, when they sign out.\r\n   * \r\n   * This information is \"supplemented\" through logic modules, and is\r\n   * provided as a constructor parameter SOLELY in support of the\r\n   * clone() operation.\r\n   */\r\n                                    // INTERNAL NOTES\r\n                                    // =================\r\n  constructor({name=null,           // via app's DB userProfile.name\r\n               email=null,          // via firebase.User.email\r\n               emailVerified=false, // via firebase.User.emailVerified\r\n               pool=null,           // via app's DB userProfile.pool\r\n             //uid=null,            // via firebase.User.uid             user's unique id hash ... CURRENTLY NO NEED for this (internally available via firebase.auth().currentUser.uid)\r\n               guestLoc=null,\r\n               originalLoc=null,\r\n               ...unknownArgs}={}) {\r\n\r\n    // validate constructor parameters\r\n    const check = verify.prefix('User() constructor parameter violation: ')\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguments.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n\r\n    // retain supplied state in self\r\n    this.name          = name;\r\n    this.email         = email;\r\n    this.emailVerified = emailVerified;\r\n    this.pool          = pool;\r\n    this.guestLoc      = guestLoc;\r\n    this.originalLoc   = originalLoc;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed out\r\n   * (i.e. there is no user).\r\n   */\r\n  isUserSignedOut() {\r\n    return this.email === null;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -AND-\r\n   * their email has been verified.\r\n   */\r\n  isUserSignedIn() {\r\n    return this.email !== null && this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -HOWEVER-\r\n   * their email needs verification.\r\n   */\r\n  isUserSignedInUnverified() {\r\n    return this.email !== null && !this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return self's authorization status string, representing all\r\n   * permutations of the isXyx() methods:\r\n   * \r\n   * - 'signedOut':          the user is signed out (i.e. there is no user)\r\n   * - 'signedIn':           the user is signed in -AND- their email has been verified.\r\n   * - 'signedInUnverified': the user is signed in -HOWEVER- their email needs verification.\r\n   */\r\n  getAuthStatus() {\r\n    if (this.email) {\r\n      return this.emailVerified ? 'signedIn' : 'signedInUnverified';\r\n    }\r\n    else {\r\n      return 'signedOut';\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is a \"guest\" user.\r\n   */\r\n  isGuest() {\r\n    return this.guestLoc ? true : false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Serialize self into a pure data structure (void of any methods),\r\n   * so as to be serializable.\r\n   *\r\n   * This is useful in state managers (such as redux) where state must\r\n   * be serializable.\r\n   *\r\n   * The returned structure is suitable to be used to re-instantiate a\r\n   * User object, gaining the benefit of it's value-added methods.\r\n   * \r\n   * @returns {struct} a pure data structure of self, suitable to\r\n   * re-instantiate a User object.\r\n   */\r\n  toStruct() {\r\n    return {\r\n      name:          this.name,\r\n      email:         this.email,\r\n      emailVerified: this.emailVerified,\r\n      pool:          this.pool,\r\n      guestLoc:      this.guestLoc,\r\n      originalLoc:   this.originalLoc,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clone self into a new User object\r\n   * \r\n   * @returns {User} the new cloned User object.\r\n   */\r\n  clone() {\r\n    return new User(this.toStruct());\r\n  }\r\n\r\n};\r\n","import {combineReducers}    from 'redux';\r\nimport {reducerHash}        from 'astx-redux-util';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport {slicedReducer}      from 'feature-redux';\r\nimport {createSelector}     from 'reselect';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport _authAct             from './actions';\r\nimport User                 from './subFeatures/authService/User';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our authorization process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is NOT only used for fassets injection,\r\n//       but ALSO to delay expansion (avoiding circular dependencies\r\n//       in selector access from signInFormMeta.js)\r\nconst reducer = slicedReducer(_auth, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // the current User object (serialized to state only) ... can represent empty User - NOT signed in\r\n  user: reducerHash({\r\n    [_authAct.signIn.complete]:           (state, action) => action.user.toStruct(),\r\n    [_authAct.signIn.checkEmailVerified]: (state, action) => action.user.toStruct(), // containing updated User.emailVerified\r\n    [_authAct.userProfileChanged]:        (state, action) => action.user.toStruct(), // pulling in new profile info\r\n    [_authAct.signOut]:                   (state, action) => new User().toStruct(),  // an empty User - NOT signed in\r\n  }, new User().toStruct()), // initialState (an empty User - NOT signed in)\r\n\r\n  // SignIn iForm's reducer ... null indicates form is inactive\r\n  signInForm: signInFormMeta.registrar.formReducer(),\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n      // Our feature state root (via slicedReducer as a single-source-of-truth)\r\nconst getFeatureState  = (appState) => reducer.getSlicedState(appState);\r\nconst gfs              = getFeatureState;             // ... concise alias (used internally)\r\n\r\n\r\n             // the current User object (with all it's value-added methods)\r\n             //   LIKE: user.getAuthStatus()\r\n             //         user.isUserSignedOut()\r\n             //         user.isUserSignedIn()\r\n             //         user.isUserSignedInUnverified()\r\n             //         user.name\r\n             //         user.email\r\n             //         user.pool\r\n             //   NOTE: will always return a User object (may represent a no-user object that: isSignedOut())\r\n       const curUserStruct = (appState) => gfs(appState).user;\r\nexport const curUser       = createSelector(curUserStruct,\r\n                                            (curUserStruct) => new User(curUserStruct));\r\n\r\n             // SignIn form  related\r\nexport const isSignInFormActive = (appState) => gfs(appState).signInForm ? true : false;\r\nexport const getUserSignInForm  = (appState) => gfs(appState).signInForm;\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'auth';\r\n","import * as Yup      from 'yup';\r\nimport IFormMeta     from 'util/iForms/IFormMeta';\r\nimport _authAct      from './actions';\r\nimport * as _authSel from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Sign In',\r\n  formSchema: Yup.object().shape({\r\n    email:    Yup.string().required().email()        .label('Email'),\r\n    pass:     Yup.string().required().min(6).max(9)  .label('Password'), // TODO: add password regex check: https://dzone.com/articles/use-regex-test-password\r\n  }),\r\n  formActionsAccessor: ()         => _authAct.signIn,\r\n  formStateSelector:   (appState) => _authSel.getUserSignInForm(appState),\r\n});\r\n","import {generateActions}    from 'action-u';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\n\r\nexport default generateActions.root({\r\n  [_auth]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    autoSignIn: {  // actions.autoSignIn(): Action\r\n                   // > autoSignIn our authorization process\r\n                   actionMeta: {},\r\n\r\n      haveDeviceCredentials: {  // actions.autoSignIn.haveDeviceCredentials(credentials): Action\r\n                                // > credentials were stored on our device\r\n                                actionMeta: {\r\n                                  traits: ['credentials'],\r\n                                },\r\n      },\r\n\r\n      noDeviceCredentials: {  // actions.autoSignIn.noDeviceCredentials(): Action\r\n                              // > NO credentials were stored on our device\r\n                              actionMeta: {},\r\n      },\r\n    },\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    signIn: signInFormMeta.registrar.formActionGenesis({\r\n    \r\n      // along with additional app-specific actions:\r\n    \r\n                  // actions.signIn(email, pass): Action\r\n                  // > SignIn with supplied email/pass\r\n                  actionMeta: {\r\n                    traits: ['email', 'pass'],\r\n                  },\r\n    \r\n      complete: { // actions.signIn.complete(user): Action\r\n                  // > signIn completed successfully\r\n                  actionMeta: {\r\n                    traits: ['user'],\r\n                  },\r\n      },\r\n    \r\n      checkEmailVerified: { // actions.signIn.checkEmailVerified(): Action\r\n                            // > check to see if account email has been verified\r\n                            actionMeta: {}, // NOTE: logic supplements the action with the current user\r\n      },\r\n    \r\n      resendEmailVerification: { // actions.signIn.resendEmailVerification(): Action\r\n                                 // > resend email verification\r\n                                 //   NOTE: logic supplements action with most up-to-date user\r\n                                 actionMeta: {},\r\n      },\r\n    \r\n    }),\r\n\r\n    signOut: { // actions.signOut(): Action <<< NOTE: logic supplements action.user (with current user that is signing out)\r\n               // > sign out active user\r\n               actionMeta: {},\r\n    },\r\n\r\n    userProfileChanged: { // actions.userProfileChanged(user): Action\r\n                          // > user profile changed\r\n                          actionMeta: {\r\n                            traits: ['user'],\r\n                          },\r\n    },\r\n\r\n  },\r\n\r\n});\r\n","import React              from 'react';\r\nimport verify             from 'util/verify';\r\nimport {SnackbarProvider,\r\n        withSnackbar}     from 'notistack';\r\nimport {withStyles}       from '@material-ui/core/styles';\r\nimport Button             from \"@material-ui/core/Button\";\r\nimport isString           from 'lodash.isstring';\r\nimport isFunction         from 'lodash.isfunction';\r\n\r\n/* eslint-disable react/jsx-pascal-case */  // for: <NotifyAPI_withSnackBar>\r\n\r\n/**\r\n * The Notify component provides user notifications through a visual\r\n * message dialog.\r\n *\r\n * User messages are initiated through a programmatic invocation,\r\n * using the functional notify() API.  Supplied directives support\r\n * a variety of scenarios, including:\r\n *   - action buttons (for acknowledgment, or confirmation, etc.)\r\n *   - timed closure of the message\r\n *   - msg levels of success, info, warn, error (impacting the dialog style/color)\r\n *   - modal and non-modal\r\n *\r\n * Notify is the fundamental component which is the basis of various\r\n * UI notifications (i.e. Toasts, Alerts, Confirmations, etc.).  It\r\n * can be used stand-alone, or indirectly through various wrappers\r\n * (promoted through named exports).  The following functions are\r\n * summarized as follows:\r\n *\r\n * ```\r\n *                                                                 auto-close         variant-color      screen           ??TODO client\r\n *                 params:                         msg             duration           level              position         modal  actions\r\n *                 ============================    ==============  =================  =================  ===============  =====  ==========================\r\n *   - notify .... ({msg,                          msg to display  1-20 seconds       'success': green   'top-left'       false  [ {txt, [action]}, ... ]\r\n *                   duration=5,                   ... supports    null: close        'info':    blue    'top-center'     true   - where action: () => void\r\n *                   level='success',                  cr/lf             via          'warn':    yellow  'top-right'             - actions ARE OPTIONAL\r\n *                   position='bottom-left',                             client       'error':   red     'bottom-left'           - ALL actions auto close\r\n *                   modal=false,                                        action                          'bottom-center'  \r\n *                   actions=[]})                                        DEFAULT: OK                     'bottom-right'\r\n *                   \r\n *   - toast ..... ({msg, duration=5, actions})                    ditto              via toast.xyz()    'bottom-left'    false  ditto\r\n *   - alert ..... ({msg, actions})                                null               via alert.xyz()    'top-center'     true   ditto\r\n *   - confirm ... ({msg, actions})                                null               via confirm.xyz()  'top-right'      true   requires client action(s)\r\n * ```\r\n *\r\n * **Setup**:\r\n *\r\n *   The Notify component is tightly controlled as a single instance\r\n *   within an entire app.  Therefore, one and only one Notify\r\n *   instance must be pre-instantiated (initially hidden) somewhere at\r\n *   the top-level of your app.\r\n *\r\n *     ```\r\n *       <React.Fragment>\r\n *         <Notify/>\r\n *         {app content}\r\n *       </React.Fragment>\r\n\r\n *       -or-\r\n *       <Notify>\r\n *         {app content}\r\n *       <Notify>\r\n *     ```\r\n * \r\n * **Usage**:\r\n * \r\n *   see docs below: `notify()`, `toast()`, `alert()`, `confirm()`\r\n * \r\n * **Module Note**:\r\n *\r\n *   This utility is housed in a lower-case `notify.js` module,\r\n *   because the general public API is a series of lower-case \"named\r\n *   exported\" functions: `notify()`, `toast()`, `alert()`,\r\n *   `confirm()`.\r\n * \r\n *   There is a \"default exported\" Notify component (which is somewhat\r\n *   unusual to find in a lower-case module), but is only used once at\r\n *   app startup, so is therefore justified (in this case).\r\n */\r\n\r\n//***\r\n//*** the top-level Notify component conveniently auto-injects the notistack <SnackbarProvider>\r\n//*** (required for our programmatic interface)\r\n//***\r\n\r\nfunction Notify(props) {\r\n  return (\r\n    <SnackbarProvider maxSnack={3} dense={true} className={props.classes.variantSuccess}>\r\n      <NotifyAPI_withSnackBar>\r\n        {props.children}\r\n      </NotifyAPI_withSnackBar>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\n// apply snackbar variant style changes in support cr/lf\r\n// ... via: whiteSpace of 'pre-line'\r\n// ... this honors cr/lf within our snackbar items\r\nconst crlfStyles = (theme) => ({\r\n  variantSuccess: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantInfo: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantWarning: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantError: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n});\r\nexport default withStyles(crlfStyles)(Notify);\r\n\r\n\r\n//***\r\n//*** keep track of our one-and-only instance\r\n//***\r\n\r\nlet _singleton = null;\r\n\r\n\r\n//***\r\n//*** the NotifyAPI component provides our internal programmatic API\r\n//*** (see .display()), used by notify(), toast(), etc.\r\n//***\r\n\r\nclass NotifyAPI extends React.Component {\r\n\r\n  static propTypes = { // expected component props\r\n  }\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    // keep track of our one-and-only instance\r\n    verify(!_singleton, '<Notify> only ONE Notify instance should be instantiated in the app (at the top-level).');\r\n    _singleton = this;\r\n  }\r\n\r\n  // display() is the interface point to our programmatic API (notify(), toast(), etc.)\r\n  display({msg,\r\n           duration=5, // auto close duration in seconds ... DEFAULT: 5 ... use null - manual close (via actions [default to OK])\r\n           level='success',\r\n           position='bottom-left',\r\n           modal=false,\r\n           actions=[],\r\n           ...unknownArgs}={}) {\r\n\r\n    // validate the named parameters (i.e. the directive)\r\n    const check = verify.prefix('notify() parameter violation: '); // NOTE: we pretend we are: notify() (the public access point)\r\n\r\n    // ... msg\r\n    check(msg, 'directive.msg is required');\r\n    check(isString(msg),  'msg must be a string');\r\n\r\n    // ... duration\r\n    if (duration !== null) {\r\n      check(duration >= 1 && duration <= 20, `supplied duration (${duration}) must be a number between 1 and 20 (inclusive).`);\r\n    }\r\n\r\n    // ... level\r\n    check(levelVariant[level], `invalid level: '${level}', expecting one of ${Object.keys(levelVariant)}.`);\r\n\r\n    // ... position\r\n    check(anchorOrigin[position], `invalid position: '${position}', expecting one of ${Object.keys(anchorOrigin)}.`);\r\n\r\n    // ... modal\r\n    check(modal===true || modal===false, `supplied modal (${modal}) must be a boolean true/false.`);\r\n\r\n    // ... actions\r\n    check(actions,                'actions must be an Action[] array'); // defaulted to [] ... this is user error of like null or something\r\n    check(Array.isArray(actions), 'actions must be an Action[] array');\r\n    actions.forEach( (action, indx) => {\r\n      check(action.txt,           `action[${indx}].txt is required`);\r\n      check(isString(action.txt), `action[${indx}].txt be a string ... NOT: ${action.txt}`);\r\n      if (action.action) {\r\n        check(isFunction(action.action), `action[${indx}].action (when supplied) must be a function ... NOT: ${action.action}`);\r\n      }\r\n    });\r\n\r\n    // ... unknown args\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n    // maintain our display duration\r\n    const autoHideDuration = duration ? duration*1000 : null; // convert to seconds ... null indicates manual close (via actions [default to OK])\r\n\r\n    // interpret any client-supplied actions\r\n\r\n    // ... provide a default OK when NO duration and NO actions are defined\r\n    //     NOTE: When NO duration is supplied, only way to close notification is through an action!\r\n    //           If client has NO actions, we will supply one (a default OK)\r\n    if (!duration && actions.length===0) {\r\n      actions = [{txt: 'OK'}]; // do NOT mutate client-supplied actions\r\n    }\r\n\r\n    // ... maintain a actions callback map indexed by .txt (default to identityFn)\r\n    const actionsCbMap = actions.reduce( (map, action) => {\r\n      map[action.txt] = action.action || identityFn;\r\n      return map;\r\n    }, {} );\r\n    // ... define our actionButtons (supplied to enqueueSnackbar) ... empty array is ignored\r\n    const actionButtons = actions.map( (action, indx) => <Button key={indx} color=\"default\" size=\"small\">{action.txt}</Button> );\r\n\r\n\r\n    // KEY: display the notification ... using notistack's enqueueSnackbar(...)\r\n    const snackbarKey = this.props.enqueueSnackbar(msg, {\r\n      variant: levelVariant[level],\r\n      autoHideDuration,\r\n      anchorOrigin: anchorOrigin[position],\r\n      action: actionButtons,\r\n      onClickAction: (e) => {\r\n        // close this notification\r\n        this.props.closeSnackbar(snackbarKey);\r\n\r\n        // invoke client-supplied callback\r\n        // ... on delay to make any client-notification transitions more intuitive\r\n        const clientAction = actionsCbMap[e.target.textContent];\r\n        setTimeout( () => clientAction(), 400);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// our level variant (indirectly defines color -and- provides level validation)\r\nconst levelVariant = { // color NOT used\r\n  success: 'success',\r\n  info:    'info',\r\n  warn:    'warning',\r\n  error:   'error',\r\n};\r\n\r\n// our anchorOrigin, indexed by position keyword\r\nconst anchorOrigin = {\r\n  'top-left':      { vertical: 'top',    horizontal: 'left'   },\r\n  'top-center':    { vertical: 'top',    horizontal: 'center' },\r\n  'top-right':     { vertical: 'top',    horizontal: 'right'  },\r\n  'bottom-left':   { vertical: 'bottom', horizontal: 'left'   },\r\n  'bottom-center': { vertical: 'bottom', horizontal: 'center' },\r\n  'bottom-right':  { vertical: 'bottom', horizontal: 'right'  },\r\n};\r\n\r\n// a convenient identity function\r\nconst identityFn = (p)=>p;\r\n\r\n\r\n//***\r\n//*** the withSnackbar() HOC provides access to the Snackbar run-time methods:\r\n//***   + props.enqueueSnackbar(...)\r\n//***   + props.closeSnackbar(...)\r\n//*** \r\n\r\nconst NotifyAPI_withSnackBar = withSnackbar(NotifyAPI);\r\nNotifyAPI_withSnackBar.displayName = 'NotifyAPI_withSnackBar'; // ... for react debugging (NOT accomplished in withSnackbar() ... grrrrr)\r\n\r\n\r\n\r\n/**\r\n * Display a user notification - the general purpose access point,\r\n * using named directives.\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds to\r\n * display the msg before automatically closing the dialog.  If not\r\n * supplied, the dialog must be explicitly closed through a button\r\n * click.\r\n *\r\n * @param {string} [directive.level] the category level associated\r\n * with this notification (impacting background color).  One of:\r\n *  - 'success' ... the default\r\n *  - 'info'\r\n *  - 'warn'\r\n *  - 'error'\r\n *\r\n * @param {string} [directive.position] the position to display this\r\n * notification. One of:\r\n *  - 'top-left'\r\n *  - 'top-center'\r\n *  - 'top-right'\r\n *  - 'bottom-left' ... the default\r\n *  - 'bottom-center'\r\n *  - 'bottom-right'\r\n *\r\n * @param {boolean} [directive.modal] an indicator as to whether the\r\n * notification dialog is modal (true) or not (false) the default.\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   notify({\r\n *     msg:      'You have un-saved changes.\\nif you leave, your changes will NOT be saved!',\r\n *     duration: seconds,\r\n *     level:    'warn',\r\n *     position: 'bottom-right',\r\n *     modal:    true,\r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => ...callback-logic-here... },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nexport function notify(directive) {\r\n  // validate that an <Notify> has been instantiated\r\n  verify(_singleton, 'notify(): NO <Notify> instance has been established in the app root.');\r\n\r\n  // pass-through to our instance method\r\n  _singleton.display(directive);\r\n}\r\n\r\n\r\n/**\r\n * The toast() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"toast\" ... a non-modal dialog\r\n * located at the bottom-left of the screen, which is typically closed\r\n * after 5 seconds.\r\n *\r\n * Various levels can be accomplished via toast.success(),\r\n * toast.info(), toast.warn(), toast.error() ... all of which have the\r\n * same signature.  NOTE: toast() is the same as toast.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf are\r\n * supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds before\r\n * automatically closing the dialog (default: 5).  A null defers to\r\n * supplied actions to close (which in turn defaults to an OK).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *\r\n *   toast({ msg:'Hello World' });    // will close in 6 secs\r\n *\r\n *   toast.error({ msg:     `An error occurred: ${err}`, \r\n *                 duration: null }); // OK button will close\r\n *\r\n *   toast.warn({                     // will close in 3 secs -OR- when \"undo\" is clicked\r\n *     msg: 'Your item was deleted', \r\n *     actions: [\r\n *       { txt: 'undo', action: () => ...callback-logic-here... },\r\n *     ]\r\n *    })\r\n * ```\r\n */\r\nfunction toastBase({msg, duration=5, actions, ...unknownArgs}, level) {\r\n\r\n  // validate toast-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`toast${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration,\r\n    level,    // NOTE: level is defaulted by the root notify()\r\n    position: 'bottom-left',\r\n    modal: false,\r\n    actions,\r\n  });\r\n}\r\nexport function  toast(directive) { toastBase(directive);          }\r\ntoast.success  = function(directive) { toastBase(directive, 'success'); }\r\ntoast.info     = function(directive) { toastBase(directive, 'info');    }\r\ntoast.warn     = function(directive) { toastBase(directive, 'warn');    }\r\ntoast.error    = function(directive) { toastBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The alert() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"alert\" ... a modal dialog located\r\n * at the top-center of the screen, that must be acknowledged by the\r\n * user with either the default OK button, or a client-supplied\r\n * action.\r\n *\r\n * Various levels can be accomplished via alert.success(),\r\n * alert.info(), alert.warn(), alert.error() ... all of which have the\r\n * same signature.  NOTE: alert() is the same as alert.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO actions are defined, a default OK  action is injected\r\n *       that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   alert({ msg:'Hello World' });\r\n *   alert.warn({\r\n *     msg:`Your limit (${limit}) has been reached!`\r\n *     actions: [\r\n *       { txt: 'increase', action: () => ...callback-logic-here... },\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction alertBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate alert-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`alert${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-center',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  alert(directive) { alertBase(directive);          }\r\nalert.success  = function(directive) { alertBase(directive, 'success'); }\r\nalert.info     = function(directive) { alertBase(directive, 'info');    }\r\nalert.warn     = function(directive) { alertBase(directive, 'warn');    }\r\nalert.error    = function(directive) { alertBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The confirm() function is a convenience wrapper around notify()\r\n * that displays the supplied msg as a \"confirmation\" ... a modal\r\n * dialog located at the bottom-right of the screen, that must be\r\n * acknowledged through client-supplied action buttons.\r\n *\r\n * Various levels can be accomplished via confirm.success(),\r\n * confirm.info(), confirm.warn(), confirm.error() ... all of which\r\n * have the same signature.  NOTE: confirm() is the same as\r\n * confirm.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} directive.actions one or more actions - button/action\r\n * combinations.  The required Action.txt defines the button label,\r\n * and the Action.action is an option client-supplied callback.  Each\r\n * defined action will implicitly close the dialog, in addition to\r\n * invoking the optional client-supplied callback.\r\n *\r\n * Example:\r\n * ```\r\n *   confirm.warn({ \r\n *     msg: 'This is an confirm warning.\\nYou must explicitly acknowledge it.', \r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => console.log('xx Discarding Changes') },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction confirmBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate confirm-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`confirm${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  // confirm() requires client-supplied actions\r\n  check(actions && actions.length>0, 'client-specific actions are required.');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-right',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  confirm(directive) { confirmBase(directive);          }\r\nconfirm.success  = function(directive) { confirmBase(directive, 'success'); }\r\nconfirm.info     = function(directive) { confirmBase(directive, 'info');    }\r\nconfirm.warn     = function(directive) { confirmBase(directive, 'warn');    }\r\nconfirm.error    = function(directive) { confirmBase(directive, 'error');   }\r\n","import {toast, alert} from 'util/notify';\r\nimport verify         from 'util/verify';\r\n\r\nconst DYNAMIC_DEFAULT = 'DYNAMIC_DEFAULT';\r\n\r\n/**\r\n * The discloseError() utility provides a standard way to \r\n * disclose errors both to the user (toasts) and logs.\r\n *\r\n * This utility uses the heuristics defined by the\r\n * ErrorExtensionPolyfill, and therefore require it to be present.\r\n *\r\n * The emission of both user notifications and logs can be controlled,\r\n * through parameters that dynamically default (based on \"expected\"\r\n * vs. \"unexpected\" error status).\r\n *\r\n * All user notifications occur through toasts, and are sanitized:\r\n *  - showing appropriate user-level detail,\r\n *  - with more information available via a button click\r\n *\r\n * Log formats are also standardized.\r\n *\r\n * **Please Note** this function uses named parameters.\r\n *\r\n * @param {Error} err the Error object to be disclosed (logged and\r\n * user-notified).\r\n *\r\n * @param {boolean} [showUser=true] an indicator as to whether the\r\n * user should be shown this error.\r\n *\r\n * @param {boolean} [logIt=DYNAMIC_DEFAULT] an indicator as to whether\r\n * a log entry should be emitted, dynamically defaulted (LOG when err\r\n * is Unexpected, NO-LOG when Expected).\r\n */\r\nexport default function discloseError({err,\r\n                                       showUser=true,         // DEFAULT: true ................. i.e. always SHOW\r\n                                       logIt=DYNAMIC_DEFAULT, // DEFAULT: err.isUnexpected() ... i.e. LOG when Unexpected, NO-LOG when Expected\r\n                                       ...unknownArgs}={}) {\r\n\r\n  // validate parameters\r\n  try {\r\n    const check = verify.prefix('discloseError() parameter violation: ')\r\n    // ... err\r\n    check(err,           'err is required');\r\n    check(err instanceof Error, 'err must be an Error object, NOT: ', err);\r\n    // ... showUser\r\n    showUser = showUser===DYNAMIC_DEFAULT ? err.isExpected() : showUser; // dynamic DEFAULT semantics\r\n    check(showUser===true || showUser===false, 'showUser must be a boolean');\r\n    // ... logIt\r\n    logIt = logIt===DYNAMIC_DEFAULT ? err.isUnexpected() : logIt; // dynamic DEFAULT semantics\r\n    check(logIt===true || logIt===false, 'logIt must be a boolean');\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguents.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n  }\r\n  // NOTE: this handler CANNOT throw an error, \r\n  //       because it is typically used inside a promise.catch()\r\n  //       which will generate an \"Unhandled promise rejection\"\r\n  catch(e) {\r\n    console.log('YIKES ... eatery-nod-w\\'s discloseError() was attempting to report on err: ', err);\r\n    console.log('HOWEVER AN INVOCATION PROBLEM was detected in the parameters passed to discloseError()!\\n' +\r\n                '... discloseError() CANNOT throw an error (when used in a promise an \"Unhandled promise rejection\" will result)!!\\n' +\r\n                '... PLEASE FIX THE FOLLOWING INVOCATION PROBLEM: ', e);\r\n    return; // cannot throw(e) ... see log (above)\r\n  }\r\n\r\n  // show user when requested\r\n  if (showUser) {\r\n    // unexpeded errors display as error toasts with additional details link\r\n    if (err.isUnexpected()) {\r\n      toast.error({  // ... will auto close -OR- when \"details\" is clicked\r\n        msg: err.formatUserMsg(),\r\n        actions: [\r\n          { txt:    'details',\r\n            action: () => {\r\n              alert.error({ msg: `An unexpected error occurred:\r\n\r\n${err}\r\n\r\nIf this problem persists, please contact your tech support.`\r\n              });\r\n            }},\r\n        ]\r\n      });\r\n    }\r\n\r\n    // expeded errors display as warning toasts with NO additional detail\r\n    else {\r\n      toast.warn({  // ... will auto close\r\n        msg: err.formatUserMsg()\r\n      });\r\n    }\r\n        \r\n  }\r\n\r\n  // generate log entry when requested\r\n  if (logIt) {\r\n\r\n    // log the details of the error (with traceback) for tech review\r\n    // NOTE 1: we refrain from using console.warn() and console.error() \r\n    //         because of BAD semantics inferred by react-native/expo:\r\n    //          - console.warn():  generates yellow popup\r\n    //          - console.error(): kills app with \"red screen of death\"\r\n    // NOTE 2: react-native/expo appears to be doing something non standard\r\n    //         when passing error as the 2nd parameter of log():\r\n    //             log('msg', error)\r\n    //         ... in this case is merely emitting error.toString()\r\n    //         ... we can however receive a stack trace by calling log(error) as the first parameter\r\n    const prefix = err.isUnexpected() ? '*** Unexpected Error:\\n\\n' : '*** Expected Error:\\n\\n';\r\n    console.log(prefix + err);\r\n    if (err.isUnexpected()) { // produce stack traces only for unexpected errors\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * A \"no op\" function that does absolutely nothing (think IEFBR14 :-)\r\n */\r\nexport default function noOp() {\r\n}\r\n","import verify         from 'util/verify';\r\nimport isString       from 'lodash.isstring';\r\nimport isPlainObject  from 'lodash.isplainobject';\r\n\r\n\r\n/**\r\n * Encode the supplied ref into a string representation.\r\n *\r\n * - supporting an optional safeguard (obfuscate content making it\r\n *   obscure to public visibility)\r\n *\r\n * - employing embedded-recognition so the process can be reversed using\r\n *   self-recognition\r\n *\r\n * TERMINOLOGY:\r\n *\r\n * - encode:  package content into a string representation (which can\r\n *            be reversed) ... ex: obj2str\r\n *\r\n * - decode:  reverse the process of encode()\r\n *\r\n * - safeguard: obfuscate content so as to make it obscure to public\r\n *              visibility\r\n *              NOTE: this is a \"lighter weight\" process than full\r\n *                    encryption\r\n *\r\n * - embedded-recognition: the ability to recognize and reverse the\r\n *                         process of either encoding and/or\r\n *                         safeguarding, producing the original\r\n *                         ref (that was originally encoded)\r\n *\r\n * @param {string|jsonObj} ref the reference to encode\r\n * @param {boolean} [safeguard=false] an indicator as to whether the\r\n * result should be obfuscated (true) or not (false - the DEFAULT).\r\n * \r\n * @return {string} an encoded representation of the supplied ref.\r\n */\r\nexport function encode(ref, safeguard=false) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('encode(ref) parameter violation: ');\r\n\r\n  // ... ref\r\n  check(ref,                                 'ref is required');\r\n  check(isString(ref) || isPlainObject(ref), 'ref must be a string -or- an object literal. NOT: ', ref);\r\n\r\n  // ... safeguard\r\n  check(safeguard===true || safeguard===false, 'safeguard must be a boolean (true/false), NOT: ', safeguard);\r\n\r\n  // encode the supplied ref into a string representation\r\n  let encoding = ref;            // ... by default, a string is left un-touched\r\n  if (isPlainObject(encoding)) { // ... encode objects\r\n    encoding = demarkObjEncoding + JSON.stringify(encoding);\r\n  }\r\n\r\n  // safeguard, when requested\r\n  if (safeguard) {\r\n    encoding = demarkSafeguard + obfuscate(encoding);\r\n  }\r\n\r\n  // thats all folks :-)\r\n  return encoding;\r\n}\r\n\r\n\r\n/**\r\n * Decode the supplied ref, reversing the process of `encode()`.\r\n * \r\n * NOTE: `decode()` can be invoked on a non-encoded ref, in which case\r\n *       it will simply pass-through the un-encoded ref.  This is a\r\n *       convenience, and is made possible by embedded-recognition.\r\n * \r\n * @param {any} ref the reference object to decode ... either the\r\n * output of `encode()` (a recognized encoded string), or any other\r\n * reference (simply passed-through).\r\n * \r\n * @return {any} the decoded representation of the supplied ref.\r\n */\r\nexport function decode(ref) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('decode(ref) parameter violation: ');\r\n\r\n  // ... ref\r\n  check(ref, 'ref is required');\r\n\r\n  // simply pass-through any non-strig ref\r\n  if (!isString(ref)) {\r\n    return ref;\r\n  }\r\n\r\n  // KEY: at this point we know ref is a string :-)\r\n  let result = ref;\r\n\r\n  // unwind any safeguards\r\n  if (result.indexOf(demarkSafeguard) === 0) {\r\n    result = result.substring(demarkSafeguard.length);\r\n    result = deobfuscate(result);\r\n  }\r\n\r\n  // unwind any encodings\r\n  if (result.indexOf(demarkObjEncoding) === 0) {\r\n    result = result.substring(demarkObjEncoding.length);\r\n    result = JSON.parse(result);\r\n  }\r\n\r\n  // thats all folks :-)\r\n  return result;\r\n}\r\n\r\n// embedded-recognition keywords\r\nconst demarkObjEncoding = 'obj2str:';\r\nconst demarkSafeguard   = 'afesa'; // ... use a obsecure phrase, so as to NOT \"stand out\"\r\n                                   //     - pig Latin for \"safe\"\r\n                                   //     - preventing it from being uniquely identified\r\n                                   //       and harvested within a global deployment\r\n\r\n\r\nfunction obfuscate(str) {\r\n  if (!window.btoa) {\r\n    throw new Error('*** ERROR *** encode(): ENCODING NOT supported by this browser (btoa).');\r\n  }\r\n  const encoding = window.btoa(str);\r\n  return encoding;\r\n}\r\n\r\nfunction deobfuscate(str) {\r\n  if (!window.atob) {\r\n    throw new Error('*** ERROR *** encode(): DECODING NOT supported by this browser (atob).');\r\n  }\r\n  const clearTxt = window.atob(str);\r\n  return clearTxt;\r\n}\r\n","import verify         from 'util/verify';\r\nimport isString       from 'lodash.isstring';\r\nimport isPlainObject  from 'lodash.isplainobject';\r\nimport noOp           from 'util/noOp';\r\nimport {encode,\r\n        decode}       from 'util/encoder';\r\n\r\n/**\r\n * Store the supplied entry in local device storage.\r\n *\r\n * @param {string} key the unique key that catalogs this entry.\r\n * @param {string|jsonObj} ref the reference to store.\r\n * @param {boolean} [safeguard=false] an indicator as to whether the\r\n * entry should be obfuscated (true) or not (false - the DEFAULT).\r\n */\r\nexport function storeItem(key, ref, safeguard=false) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('storeItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // ... ref\r\n  check(ref,                                 'ref is required');\r\n  check(isString(ref) || isPlainObject(ref), 'ref must be a string -or- an object literal, NOT: ', ref);\r\n\r\n  // ... safeguard\r\n  check(safeguard===true || safeguard===false, 'safeguard must be a boolean (true/false), NOT: ', safeguard);\r\n\r\n  // encode the supplied ref into a string representation\r\n  // SUPPORTING:\r\n  //   - object encoding (to a string representation)\r\n  //     NOTE: plain strings are NOT altered in this operation\r\n  //   - safeguard (obfuscation)\r\n  const value = encode(ref, safeguard);\r\n\r\n  // store the entry into our deviceStorage\r\n  deviceStorage.setItem(key, value);\r\n}\r\n\r\n\r\n/**\r\n * Fetch the stored entry from local device storage.\r\n *\r\n * @param {string} key the unique key that catalogs this entry.\r\n * \r\n * @return {any} the entry stored from the supplied key (null for\r\n * none), implicitly unpacked to the original ref (supplied to\r\n * `storeItem()`).\r\n */\r\nexport function fetchItem(key) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('fetchItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // retrieve the entry from our deviceStorage\r\n  const value = deviceStorage.getItem(key);\r\n\r\n  // no-op for non-existent entries\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  // decode the entry, unpacking it into the original form (ref)\r\n  const ref = decode(value);\r\n\r\n  // that's all folks :-)\r\n  return ref;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Remove the stored entry from local device storage.\r\n *\r\n * @param {string} key the unique key of the entry to remove.\r\n */\r\nexport function removeItem(key) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('removeItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // remove the entry from our local device storage\r\n  deviceStorage.removeItem(key);\r\n}\r\n\r\n\r\n\r\n\r\n//***\r\n//*** Abstract the Web Storage API (gracefully no-oping for unsupported browsers)\r\n//***\r\n//***  NOTE 1: This API is synchronous!\r\n//***  NOTE 2: Apparently this API is available on both http (non SSL) as well as https (SSL).\r\n//***\r\n\r\n// feature detection\r\n// ... NOTE: can't just assert window.localStorage exists\r\n//           see: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\r\nconst _localStorageAvailable = storageAvailable('localStorage');\r\nfunction storageAvailable(type) {\r\n  let storage;\r\n  try {\r\n    storage = window[type];\r\n    let x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  }\r\n  catch(e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n           // acknowledge QuotaExceededError only if there's something already stored\r\n           (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n// log warning when deviceStorage is NOT in affect\r\nif (!_localStorageAvailable) {\r\n  console.warn('***WARNING*** deviceStorage module ... localStorage (Web Storage API) is NOT available in this browser ... all deviceStorage usage will silently no-op!!');\r\n}\r\n\r\n// our localStorage pass-through that gracefully no-ops for unsupported browsers\r\nconst deviceStorage = _localStorageAvailable ? {\r\n  setItem:    (keyName, keyValue) => window.localStorage.setItem(keyName, keyValue),\r\n  getItem:    (keyName)           => window.localStorage.getItem(keyName),\r\n  removeItem: (keyName)           => window.localStorage.removeItem(keyName),\r\n} : {\r\n  setItem:    noOp,\r\n  getItem:    noOp,\r\n  removeItem: noOp,\r\n};\r\n\r\n// TEMP crude test of deviceStorage ... invoke these separately!\r\n// deviceStorage.setItem('WowZeeKey', 'WowZeeValue');\r\n// console.log(`test deviceStorage ... '${deviceStorage.getItem('WowZeeKey')}'`);\r\n","import {storeItem,\r\n        fetchItem,\r\n        removeItem}   from 'util/deviceStorage';\r\n\r\n/**\r\n * Store credentials on local device in an encoded form.\r\n * \r\n * @param {string} email the email (id) to store.\r\n * @param {string} pass the password to store.\r\n */\r\nexport function storeCredentials(email, pass) {\r\n  storeItem(credentialsKey,\r\n            {email, pass},\r\n            true); // safeguard\r\n}\r\n\r\n/**\r\n * Fetch credentials stored on local device (if any).\r\n * \r\n * @return {object} the credentials object if any (null for none):\r\n *   {\r\n *     email: string,\r\n *     pass:  string\r\n *   }\r\n */\r\nexport function fetchCredentials() {\r\n  return fetchItem(credentialsKey);\r\n}\r\n\r\n/**\r\n * Remove credentials from local device.\r\n */\r\nexport function removeCredentials() {\r\n  removeItem(credentialsKey);\r\n}\r\n\r\nconst credentialsKey = 'credentials';\r\n","import {createLogic}        from 'redux-logic';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport _auth                from './featureName';\r\nimport _authAct             from './actions';\r\nimport {curUser}            from './state';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport discloseError        from 'util/discloseError';\r\nimport {toast}              from 'util/notify';\r\nimport {fetchCredentials,\r\n        storeCredentials,\r\n        removeCredentials}  from './credentialsStorage';\r\n\r\n/**\r\n * Start our authorization process, once the bootstrap initialization process is complete.\r\n * \r\n * NOTE: We could auto-start our auth process (via feature-u app life cycle handlers),\r\n *       except our downstream processes are dependent on device.loc, so we wait and\r\n *       trigger the process here.\r\n */\r\nexport const startAuthorization = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_auth}.startAuthorization`,\r\n  type: String(fassets.actions.bootstrapComplete),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.autoSignIn() );\r\n    done();\r\n  },\r\n}));\r\n\r\n\r\n/**\r\n * Monitor authorization startup, fetching credentials stored on device (if any).\r\n */\r\nexport const checkDeviceCredentials = createLogic({\r\n\r\n  name: `${_auth}.checkDeviceCredentials`,\r\n  type: String(_authAct.autoSignIn),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    const credentials = fetchCredentials();\r\n    if (credentials) {\r\n      dispatch( _authAct.autoSignIn.haveDeviceCredentials(credentials) );\r\n    }\r\n    else {\r\n      dispatch( _authAct.autoSignIn.noDeviceCredentials() );\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Auto SignIn, when device credentials exist.\r\n */\r\nexport const autoSignIn = createLogic({\r\n\r\n  name: `${_auth}.autoSignIn`,\r\n  type: String(_authAct.autoSignIn.haveDeviceCredentials),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n    const {email, pass} = action.credentials;\r\n    dispatch( _authAct.signIn(email, pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Manual SignIn, when NO device credentials exist, or user signs out.\r\n */\r\nexport const manualSignIn = createLogic({\r\n\r\n  name: `${_auth}.manualSignIn'`,\r\n  type: [\r\n    String(_authAct.autoSignIn.noDeviceCredentials),\r\n    String(_authAct.signOut),\r\n  ],\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn.open() );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Interactive SignIn form processor.\r\n */\r\nexport const processSignIn = createLogic({\r\n\r\n  name: `${_auth}.processSignIn`,\r\n  type: String(_authAct.signIn.process),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn(action.values.email, action.values.pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn logic.\r\n */\r\nexport const signIn = createLogic({\r\n\r\n  name: `${_auth}.signIn`,\r\n  type: String(_authAct.signIn),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY signin using our firebase service is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    \r\n    fassets.authService.signIn(action.email, action.pass)\r\n\r\n           .then( user => { // user has successfully signed in\r\n\r\n             // retain these credentials on our device (to streamline subsequent app launch)\r\n             storeCredentials(action.email, action.pass);\r\n\r\n             // communicate a new user is in town\r\n             dispatch( _authAct.signIn.complete(user) );\r\n\r\n             done();\r\n           })\r\n\r\n           .catch( (err) => {\r\n             discloseError({err,\r\n                            showUser: err.isUnexpected()}); // expected errors are shown to the user via the re-direction to the signIn screen (see next step)\r\n\r\n             // re-direct to SignIn form, prepopulated with appropriate msg\r\n             dispatch( _authAct.signIn.open(action, err.formatUserMsg()) ); // NOTE: action is a cheap shortcut to domain (contains email/pass) ... pre-populating sign-in form with last user input\r\n\r\n             done();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signed-in user's originalLoc (in support of re-setting\r\n * \"guest\" users on sign-out.\r\n */\r\nexport const supplementSignedInUserLoc = createLogic({\r\n\r\n  name: `${_auth}.supplementSignedInUserLoc`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n    action.user.originalLoc = fassets.sel.getLocation(getState());\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signIn complete action by triggering profile.changed action,\r\n * causing eateries view to populate.\r\n */\r\nexport const supplementSignInComplete = createLogic({\r\n\r\n  name: `${_auth}.supplementSignInComplete`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // NOTE: Currently, this is the only place where userProfileChanged is dispatched.\r\n    //       It stimulates the eateries view to get the ball rolling (displaying the correct pool)\r\n    //       In the future, userProfileChanged is dispatched dynamically, when the user has the ability to change their pool.\r\n    dispatch( _authAct.userProfileChanged(action.user) ); // use the same user from our our monitored action!!\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn cleanup.\r\n */\r\nexport const signInCleanup = createLogic({\r\n\r\n  name: `${_auth}.signInCleanup`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // console.log(`xx logic ${featureName}.signInCleanup: user.status: '${curUser(getState()).getAuthStatus()}'`);\r\n    dispatch( _authAct.signIn.close() ); // we are done with our signIn form\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Check to see if account email has been verified.\r\n */\r\nexport const checkEmailVerified = createLogic({\r\n\r\n  name: `${_auth}.checkEmailVerified`,\r\n  type: String(_authAct.signIn.checkEmailVerified),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    toast({ msg:`verifying your email: ${curUser(getState()).email}` });\r\n    // fetch the most up-to-date user\r\n    fassets.authService.refreshUser()\r\n           .then( user => {\r\n             // supplement action with the most up-to-date user\r\n             action.user = user;\r\n             next(action);\r\n           })\r\n           .catch( err => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n\r\n             // nix the entire action\r\n             reject();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Resend Email Verification.\r\n */\r\nexport const resendEmailVerification = createLogic({\r\n\r\n  name: `${_auth}.resendEmailVerification`,\r\n  type: String(_authAct.signIn.resendEmailVerification),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    toast({ msg:`resending email to: ${curUser(getState()).email}` });\r\n    fassets.authService.resendEmailVerification()\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signOut action with active user (in support of re-setting\r\n * \"guest\" users on sign-out.\r\n */\r\nexport const supplementSignOutUser = createLogic({\r\n\r\n  name: `${_auth}.supplementSignOutUser`,\r\n  type: String(_authAct.signOut),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n    action.user = curUser(getState());\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignOut logic.\r\n */\r\nexport const signOut = createLogic({\r\n\r\n  name: `${_auth}.signOut`,\r\n  type: String(_authAct.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    fassets.authService.signOut()\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    removeCredentials();\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default expandWithFassets( (fassets) => [\r\n\r\n  startAuthorization(fassets),\r\n\r\n  checkDeviceCredentials,\r\n  autoSignIn,\r\n  manualSignIn,\r\n\r\n  // signIn logic (NOTE: form logic just be registered BEFORE app-specific logic)\r\n  ...signInFormMeta.registrar.formLogic(), // inject the standard SignIn form-based logic modules\r\n  processSignIn,\r\n\r\n  supplementSignedInUserLoc,\r\n  signIn,\r\n  supplementSignInComplete,\r\n  signInCleanup,\r\n\r\n  checkEmailVerified,\r\n  resendEmailVerification,\r\n\r\n  supplementSignOutUser,\r\n  signOut,\r\n]);\r\n","import React  from 'react';\r\nimport Fade   from '@material-ui/core/Fade';\r\nimport Slide  from '@material-ui/core/Slide';\r\nimport Zoom   from '@material-ui/core/Zoom';\r\n\r\n//***\r\n//*** Common Transition components used throughout our app :-)\r\n//***\r\n\r\nexport function TransitionFade(props) {\r\n  return <Fade timeout=\"1000\" {...props} />;\r\n}\r\n\r\nexport function TransitionSlide(props) {\r\n  return <Slide direction=\"right\" timeout=\"1000\" {...props} />;\r\n}\r\n\r\nexport function TransitionZoom(props) {\r\n  return <Zoom timeout=\"1000\" {...props} />;\r\n}\r\n","import React,\r\n       {useCallback}     from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}  from 'react-redux'\r\n\r\nimport {withStyles}      from '@material-ui/core/styles';\r\nimport withMobileDialog  from '@material-ui/core/withMobileDialog';\r\n\r\nimport _authAct          from '../actions';\r\nimport * as _authSel     from '../state';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport CheckIcon         from '@material-ui/icons/Check';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport MailIcon          from '@material-ui/icons/Mail';\r\nimport SignOutIcon       from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n/**\r\n * SignInVerifyScreen requesting email verification completion.\r\n */\r\nfunction SignInVerifyScreen({fullScreen, classes}) {\r\n\r\n  const email = useSelector((appState) => _authSel.curUser(appState).email, []);\r\n\r\n  const dispatch = useDispatch();\r\n  const checkEmailVerified      = useCallback(() => dispatch( _authAct.signIn.checkEmailVerified() ),      []);\r\n  const resendEmailVerification = useCallback(() => dispatch( _authAct.signIn.resendEmailVerification() ), []);\r\n  const signOut                 = useCallback(() => dispatch( _authAct.signOut() ),                        []);\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <CenterItems>\r\n          <Avatar className={classes.lockAvatar}>\r\n            <LockIcon/>\r\n          </Avatar>\r\n        </CenterItems>\r\n        <CenterItems>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Sign In Verification\r\n          </Typography>\r\n        </CenterItems>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Your account email has not been verified.\r\n        </DialogContentText>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Please follow the instructions from the email sent to: {email}\r\n        </DialogContentText>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Typography variant=\"body2\">\r\n              ... once completed:\r\n            </Typography>\r\n          </CenterItems>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={checkEmailVerified}>\r\n              <CheckIcon className={classes.icon}/>\r\n              Continue\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={resendEmailVerification}>\r\n              <MailIcon className={classes.icon}/>\r\n              Resend Email\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={signOut}>\r\n              <SignOutIcon className={classes.icon}/>\r\n              Sign Out\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst SignInVerifyScreenWithStyles = withStyles(styles)(SignInVerifyScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SignInVerifyScreenWithStyles);\r\n","import React        from 'react';\r\nimport TextField    from '@material-ui/core/TextField';\r\nimport PropTypes    from 'prop-types';\r\nimport verify       from 'util/verify';\r\n\r\n/**\r\n * An IForm text input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * Usage:\r\n *   <ITextField fieldName=\"myFieldName\" ... the IFormMeta fieldName\r\n *               iForm={IForm}\r\n *               ... extra props from material-ui TextField comp\r\n *                   EX:\r\n *                   autoFocus\r\n *                   type=\"number\"\r\n *                   helperText=\"... help text here\"/>\r\n *                   ... etc.\r\n */\r\nexport default function ITextField({fieldName, iForm, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<ITextField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  ['label', 'value', 'disabled', 'onChange', 'onBlur', 'error'].forEach(\r\n    (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  );\r\n\r\n  // compute field success/error adornments\r\n  // ... dynamically exposed based on user field touches\r\n  const managedProps = {};\r\n  if (iForm.isValidationExposed(fieldName)) {\r\n    const fieldMsg = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n    if (fieldMsg) { // error adornment\r\n      managedProps.error      = true;     // mark field with error color\r\n      managedProps.helperText = fieldMsg; // overwrite helperText to hold the field error message\r\n    }\r\n  }\r\n\r\n  // emit an ITextField that is auto-wired to the supplied iForm\r\n  return (\r\n    <TextField label={fieldLabel}\r\n               value={iForm.getValue(fieldName)}\r\n               disabled={iForm.inProcess()}\r\n               onChange={(event) => iForm.handleFieldChanged(fieldName, event.target.value)}\r\n               onBlur={() => iForm.handleFieldTouched(fieldName)}\r\n               {...extraProps}\r\n               {...managedProps}/>\r\n  );\r\n}\r\n\r\nITextField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n};\r\n","import React             from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}     from 'react-redux'\r\n\r\nimport {withStyles}      from '@material-ui/core/styles';\r\nimport withMobileDialog  from '@material-ui/core/withMobileDialog';\r\n\r\nimport signInFormMeta    from '../signInFormMeta';\r\nimport ITextField        from 'util/iForms/comp/ITextField';\r\nimport {toast}           from 'util/notify';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport InProgress        from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport SignInIcon        from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  // our fieldset is strictly strictly to disable all inputs/submit when form is in-process\r\n  invisible: {\r\n    border:  '0 none',\r\n    margin:  0,\r\n    padding: 0,\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * SignInScreen: gather user sign-in credentials.\r\n */\r\nfunction SignInScreen({fullScreen, classes}) {\r\n\r\n  const dispatch  = useDispatch();\r\n  const formState = useSelector((appState) => signInFormMeta.formStateSelector(appState), []);\r\n\r\n  const iForm = signInFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel     = iForm.getLabel();\r\n  const formInProcess = iForm.inProcess();\r\n  const formErrMsg    = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <form onSubmit={iForm.handleProcess}>\r\n          <fieldset className={classes.invisible} disabled={formInProcess}>\r\n\r\n            <CenterItems>\r\n              <Avatar className={classes.lockAvatar}>\r\n                <LockIcon/>\r\n              </Avatar>\r\n            </CenterItems>\r\n            <CenterItems>\r\n              <Typography variant=\"h6\" noWrap>\r\n                {formLabel}\r\n              </Typography>\r\n            </CenterItems>\r\n\r\n            <DialogContentText className={classes.entry}>\r\n              Welcome to Eatery Nod ... please {formLabel}!\r\n            </DialogContentText>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"email\"\r\n                          iForm={iForm}\r\n                          autoFocus\r\n                          required\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          placeholder=\"jon.snow@gmail.com\"\r\n                          helperText=\"your email is your ID\"/>\r\n            </div>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"pass\"\r\n                          iForm={iForm}\r\n                          required\r\n                          fullWidth\r\n                          type=\"password\"/>\r\n            </div>\r\n\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <SignInIcon className={classes.icon}/>\r\n                {formLabel}\r\n              </Button>\r\n            </CenterItems>\r\n            <FormHelperText error>{formErrMsg}</FormHelperText>\r\n\r\n            {formInProcess && (\r\n               <div className={classes.entry}>\r\n                 <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n               </div>\r\n             )}\r\n\r\n            <div className={classes.entry}>\r\n              <CenterItems>\r\n                <Typography variant=\"body2\" color=\"secondary\">\r\n                  ... don't have an account?\r\n                </Typography>\r\n              </CenterItems>\r\n              <CenterItems>\r\n                <Button variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={()=>toast.warn({ msg:'Sign Up has not yet been implemented.' })}>\r\n                  <SignInIcon className={classes.icon}/>\r\n                  Sign Up\r\n                </Button>\r\n              </CenterItems>\r\n            </div>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nconst SignInScreenWithStyles = withStyles(styles)(SignInScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SignInScreenWithStyles);\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport { withStyles }   from '@material-ui/core/styles';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport Progress         from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Dialog           from '@material-ui/core/Dialog';\r\nimport DialogContent    from '@material-ui/core/DialogContent';\r\nimport DialogTitle      from '@material-ui/core/DialogTitle';\r\nimport Typography       from '@material-ui/core/Typography';\r\nimport {TransitionZoom} from 'util/Transition';\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  progress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * A modal SplashScreen used when there is nothing else to display :-)\r\n *\r\n * The SplashScreen will responsively/dynamically utilize the full\r\n * screen for cell phone devices.\r\n *\r\n * NOTE: Currently we dynamically size based on the message content,\r\n *       within the constraint of the screen.  Not sure if I like\r\n *       this or not ... it is good for cell phones, but can be rather\r\n *       small for browsers (typically the message is pretty small).\r\n *       FYI: This is pretty much the default behavior of <Dialog>.\r\n *            I spend a small amount of time to override this without\r\n *            any success.\r\n */\r\nfunction SplashScreen({msg, classes, fullScreen}) {\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle className={classes.title}>\r\n        <center className={classes.title}>Eatery Nod</center>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <center>\r\n          <br/>\r\n          <img width=\"120px\" src='/eatery.png' alt='eatery-nod'/>\r\n          <br/>\r\n          <Progress className={classes.progress} color=\"secondary\"/>\r\n          <Typography variant=\"body2\">{msg}</Typography>\r\n          <br/>\r\n        </center>\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nSplashScreen.propTypes = {\r\n  msg:        PropTypes.string,\r\n  classes:    PropTypes.object.isRequired,\r\n  fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nSplashScreen.defaultProps = {\r\n  msg: '',\r\n};\r\n\r\nconst SplashScreen_withStyles = withStyles(styles)(SplashScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SplashScreen_withStyles);\r\n","import React               from 'react';\r\nimport * as _authSel       from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\n\r\nimport SignInVerifyScreen  from './comp/SignInVerifyScreen';\r\nimport SignInScreen        from './comp/SignInScreen';\r\nimport SplashScreen        from 'util/SplashScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    const user = _authSel.curUser(appState);\r\n\r\n    // when user is FULLY signedIn/verified\r\n    // ... allow down-stream features to route further (i.e. app-specific screens)\r\n    if (user.isUserSignedIn()) {\r\n      return null;\r\n    }\r\n\r\n    // when user is signed in BUT unverified\r\n    // ... display email verification screen\r\n    if (user.isUserSignedInUnverified()) {\r\n      return <SignInVerifyScreen/>;\r\n    }\r\n\r\n\r\n    // ***\r\n    // *** at this point we know user is unauthorized (either signed out, or in-transition)\r\n    // ***\r\n\r\n    // display interactive SignIn, when form is active (accomplished by our logic)\r\n    if (_authSel.isSignInFormActive(appState)) {\r\n      return <SignInScreen/>;\r\n    }\r\n\r\n    // display interactive SignUp, when form is active (accomplished by our logic)\r\n    // TODO: check for signUpForm (WHEN SUPPORTED)\r\n    \r\n    // fallback: communicate route transition condition\r\n    // NOTES:\r\n    //  1) we MUST issue a route to prevent downstream feature visualization too early\r\n    //  2) it can occur under the following conditions:\r\n    //     a) a slow server-side sign-in process\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     b) during transition between startup/auth features\r\n    //        ... where logic is in the process of activating one of the auth form screens\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     c) an error condition (say some change that impacts our route logic)\r\n    //        ... this is an unexpected condition\r\n    //        ... SO, we expose the user-status context in the message (for diagnostics)\r\n    const msg = `authorization in progress (${user.getAuthStatus()})`;\r\n    return <SplashScreen msg={msg}/>;\r\n  },\r\n\r\n});\r\n","import React,\r\n       {useCallback,\r\n        useMemo}      from 'react';\r\nimport PropTypes      from 'prop-types';\r\n\r\nimport {useFassets}   from 'feature-u';\r\n\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport Menu           from '@material-ui/core/Menu';\r\nimport UserIcon       from '@material-ui/icons/AccountCircle';\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * UserMenu: our UserMenu component that accumulates menu items via use contract.\r\n */\r\nexport default function UserMenu({curUser}) {\r\n\r\n  const [anchorUserMenu, setAnchorUserMenu] = React.useState(null);\r\n  const userMenuOpen = useMemo(() => Boolean(anchorUserMenu), [anchorUserMenu]);\r\n\r\n  const openUserMenu = useCallback((event) => setAnchorUserMenu(event.currentTarget), []);\r\n  _closeUserMenu     = useCallback(()      => setAnchorUserMenu(null),                []);\r\n\r\n  const userMenuItems        = useFassets('AppMotif.UserMenuItem.*@withKeys');\r\n  const orderedUserMenuItems = useMemo(() => (\r\n    [...userMenuItems].sort(([item1Key], [item2Key]) => item1Key.localeCompare(item2Key))\r\n  ), [userMenuItems]);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton color=\"inherit\"\r\n                  onClick={openUserMenu}>\r\n        <UserIcon/>\r\n        <Typography variant=\"subtitle2\" color=\"inherit\" noWrap>\r\n          &nbsp;{curUser.name}\r\n        </Typography>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorUserMenu}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={userMenuOpen}\r\n            onClose={closeUserMenu}>\r\n        {orderedUserMenuItems.map( ([fassetsKey, UserMenuItem]) => <UserMenuItem key={fassetsKey}/> )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  curUser: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\n/**\r\n * Utility function that closes our user menu.\r\n */\r\nexport function closeUserMenu() { // exported for use by our own: UserMenuItem\r\n  if (_closeUserMenu) {\r\n    _closeUserMenu();\r\n  }\r\n}\r\nlet _closeUserMenu = null;\r\n","import React           from 'react';\r\nimport PropTypes       from 'prop-types';\r\nimport MenuItem        from '@material-ui/core/MenuItem';\r\nimport {closeUserMenu} from './UserMenu';\r\n\r\n/**\r\n * UserMenuItem: our UserMenuItem - a MenuItem wrapper that auto-closes the UserMenu.\r\n */\r\nexport default function UserMenuItem(props) {\r\n\r\n  // value-added onClick that auto-closes the UserMenu\r\n  const myOnClick = (...args) => {\r\n    // auto-close the UserMenu\r\n    closeUserMenu()\r\n\r\n    // pass-through to client onClick()\r\n    if (props.onClick) {\r\n      props.onClick(...args);\r\n    }\r\n  };\r\n\r\n  // wrap <MenuItem>\r\n  return (\r\n    <MenuItem {...props} onClick={myOnClick}>{props.children}</MenuItem>\r\n  );\r\n}\r\n\r\nUserMenuItem.propTypes = {\r\n  children: PropTypes.node.isRequired, // UserMenuItem content is required (i.e. the label)\r\n};\r\n","import React,\r\n       {useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\nimport _authAct      from '../actions';\r\nimport {toast,\r\n        confirm}     from 'util/notify';\r\n\r\n/**\r\n * AuthUserMenu: our user-profile menu items (in the App Header)\r\n */\r\nexport default function AuthUserMenu() {\r\n\r\n  const dispatch = useDispatch();\r\n  const signOut  = useCallback(() => {\r\n    confirm.warn({ \r\n      msg: 'Are you sure you wish to sign out?', \r\n      actions: [\r\n        { txt: 'Sign Out', action: () => dispatch( _authAct.signOut() ) },\r\n        { txt: 'Go Back' }\r\n      ]\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserMenuItem onClick={doL8tr}>User Profile</UserMenuItem>\r\n      <UserMenuItem onClick={signOut}>Sign Out</UserMenuItem>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction doL8tr() {\r\n  toast.warn({msg: 'NOT implemented yet (coming soon)!'})\r\n}\r\n","import {createFeature}  from 'feature-u';\r\nimport _auth            from './featureName';\r\nimport _authAct         from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (signInFormMeta)\r\nimport reducer,\r\n       {curUser}        from './state';\r\nimport logic            from './logic';\r\nimport route            from './route';\r\nimport AuthUserMenu     from './comp/AuthUserMenu';\r\n\r\n// feature: auth\r\n//          promote complete user authentication service (full details in README)\r\nexport default createFeature({\r\n  name: _auth,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      // actions:\r\n      'actions.userProfileChanged': _authAct.userProfileChanged, // userProfileChanged(user) NOTE: PUBLIC for eateries to monitor, and for future use (when user can change their pool)\r\n      'actions.signOut':            _authAct.signOut,            // signOut()\r\n      'actions.signIn.complete':    _authAct.signIn.complete,    // signIn.complete(user)\r\n\r\n      // selectors:\r\n      'sel.curUser': curUser, // full blown User object\r\n    },\r\n\r\n    defineUse: {\r\n      // inject our user-profile menu items (in the App Header)\r\n      'AppMotif.UserMenuItem.cc5_AuthUserMenu': AuthUserMenu,\r\n    },\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n});\r\n","/**\r\n * AuthServiceAPI is a \"pseudo\" interface specifying the AuthService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceAPI {\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signIn() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.refreshUser() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.resendEmailVerification() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signOut() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature} from 'feature-u';\r\nimport AuthServiceAPI  from './AuthServiceAPI';\r\n\r\n// feature: authService\r\n//          promote a persistent authentication service API (retaining\r\n//          active user) through the `authService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'authService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['authService', {required: true, type: objectOfTypeAuthServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeAuthServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof AuthServiceAPI ? null : 'object of type AuthServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","/**\r\n * featureFlags (see description below)\r\n */\r\n\r\nexport default {\r\n\r\n  useWIFI: true,  // should app use WIFI? ... regulates various services: real/mocked\r\n\r\n  mockGPS: false, // should app mock GPS? ... regulates util/deviceLocation.js getCurPos():  real/mocked\r\n                  // false: use real device location\r\n                  // true:  mock device location (default to Glen Carbon IL)\r\n                  // {lat, lng}: specify mocked location, example:\r\n                  //             {lat: 40.48643,  lng: -86.1336}   ... Kokomo IN\r\n                  //             {lat: 42.60559,  lng: -83.14993}  ... Troy MI\r\n                  //             {lat: 30.010479, lng: -90.119414} ... New Orleans, LA\r\n                  //             {lat: 38.752209, lng: -89.986610} ... Glen Carbon IL\r\n\r\n  log:     false, // should app emit diagnostic logs?\r\n                  // false:     no logs\r\n                  // true:      generate 'non verbose' logs (e.g. actions will NOT include redux state)\r\n                  // 'verbose': generate 'verbose'     logs (e.g. actions WILL     include redux state)\r\n\r\n  sandbox: false, // should app enable diagnostic sandbox controls?\r\n};\r\n","import firebase       from 'firebase/app';\r\nimport                     'firebase/auth';\r\nimport                     'firebase/database';\r\nimport AuthServiceAPI from '../authService/AuthServiceAPI';\r\nimport User           from '../authService/User';\r\n\r\n/**\r\n * AuthServiceFirebase is the **real** AuthServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceFirebase extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   * \r\n   * NOTE: Firebase also maintains it's rendition of current user,\r\n   *       available via `firebase.auth().currentUser`.  However, this\r\n   *       service supplements the user with additional information\r\n   *       from the app's DB userProfile.\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // detect guest signin and resolve immediately\r\n      if (pass === 'guestNO' && email.indexOf('guestNO@') === 0) { // New Orleans guest ... ex: guestNO@gmail.com/guestNO\r\n        // NOTE: appears to be working without a delay from say a timeout\r\n        this.currentAppUser = new User({\r\n          name:          'Harry',\r\n          email,\r\n          emailVerified: true,\r\n          pool:          'mockNO',\r\n          guestLoc:      {lat: 30.010479, lng: -90.119414}, // New Orleans, LA\r\n        });\r\n        return resolve(this.currentAppUser);\r\n      }\r\n      \r\n      // signin through firebase authentication\r\n      firebase.auth().signInWithEmailAndPassword(email, pass)\r\n              .then( fbUser => { // fbUser:  <firebase.User>: https://firebase.google.com/docs/reference/js/firebase.User\r\n                                 // same as: firebase.auth().currentUser\r\n\r\n                // supplement the signed-in fbUser with our app's DB userProfile\r\n                const dbRef = firebase.database().ref(`/userProfiles/${fbUser.user.uid}`);\r\n                dbRef.once('value')\r\n                     .then( snapshot => {\r\n\r\n                       const userProfile = snapshot.val();\r\n                       // console.log(`xx AuthServiceFirebase.signIn() userProfile: `, userProfile)\r\n\r\n                       // communicate issue: missing userProfile in our DB\r\n                       if (!userProfile) {\r\n                         return reject(\r\n                           new Error(`***ERROR*** No userProfile exists for user: ${fbUser.user.email}`)\r\n                             .defineAttemptingToMsg('sign in to eatery-nod (your user profile does NOT exist)')\r\n                         );\r\n                       }\r\n\r\n                       // retain/communicate our user object, populated from both the fbUser and userProfile\r\n                       this.currentAppUser = new User({\r\n                         name:          userProfile.name,\r\n                         email:         fbUser.user.email,\r\n                         emailVerified: fbUser.user.emailVerified,\r\n                         pool:          userProfile.pool,\r\n                       });\r\n                       // console.log(`xx MOCK RECORDING from AuthServiceFirebase.signIn(...): returning User: ${JSON.stringify(this.currentAppUser.toStruct())}`);\r\n                       return resolve(this.currentAppUser);\r\n                     })\r\n\r\n                     .catch( err => { // unexpected error\r\n                       return reject(err.defineAttemptingToMsg('sign in to eatery-nod (a problem was encountered fetching your user profile)'));\r\n                     });\r\n\r\n              })\r\n\r\n              .catch( (err) => {\r\n                // NOTE: When firebase:\r\n                //       - provides an err.code, this enumerates a user specific credentials problem (like \"invalid password\")\r\n                //         ... we do NOT expose this to the user (so as to NOT give hacker insight)\r\n                //             rather we generalize it to the user ('Invalid SignIn credentials.')\r\n                //       - when NO err.code is supplied, it represents an unexpected condition\r\n                if (err.code) { // expected condition\r\n                  err.defineUserMsg('Invalid SignIn credentials.'); // make generic ... do NOT expose err.code to the user\r\n                }\r\n                else { // unexpected condition\r\n                  err.defineAttemptingToMsg('sign in to eatery-nod');\r\n                }\r\n                return reject(err);\r\n              });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.refreshUser(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('refresh a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // refresh our current signed-in user\r\n      firebase.auth().currentUser.reload()\r\n\r\n              .then( () => { // NOTE: this service returns void ... however, the firebase.auth().currentUser has been updated!\r\n\r\n                const fbUser = firebase.auth().currentUser;\r\n\r\n                // refresh our signed-in user\r\n                // ... just for good measure, we create a new instance of this.currentAppUser, rather than mutating the existing one\r\n                //     - just in case it is held directly in redux\r\n                //     - even though client SHOULD use user.toStruct()\r\n                this.currentAppUser = new User({\r\n                  name:          this.currentAppUser.name,  // keep same (from our db profile)\r\n                  email:         fbUser.user.email,         // refresh   (from current firebase auth)\r\n                  emailVerified: fbUser.user.emailVerified, // refresh   (from current firebase auth)\r\n                  pool:          this.currentAppUser.pool,  // keep same (from our db profile)\r\n                });\r\n\r\n                // communicate our refreshed signed-in user\r\n                return resolve(this.currentAppUser);\r\n              })\r\n\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('refresh the signed-in user'));\r\n              });\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    // verify we have a current user to resend to\r\n    if (this.currentAppUser === null) {\r\n      // unexpected condition\r\n      throw new Error('***ERROR*** (within app logic) AuthServiceFirebase.resendEmailVerification(): may only be called once a successful signIn() has completed.')\r\n        .defineAttemptingToMsg('resend an email verification to a non-existent user (not yet signed in)');\r\n    }\r\n\r\n    // issue the email request\r\n    firebase.auth().currentUser.sendEmailVerification();\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.signOut(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('sign-out a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // issue the signout request\r\n      firebase.auth().signOut()\r\n              .then( () => {\r\n                this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n              })\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('sign-out the user'));\r\n              });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}     from 'feature-u';\r\nimport featureFlags        from 'featureFlags';\r\nimport AuthServiceFirebase from './AuthServiceFirebase';\r\n\r\n// feature: authServiceFirebase \r\n//          defines the real 'authService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'authServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceFirebase(),\r\n    },\r\n  },\r\n\r\n});\r\n","import AuthServiceAPI from '../authService/AuthServiceAPI';\r\nimport User           from '../authService/User';\r\n\r\n/**\r\n * AuthServiceMock is the **mock** AuthServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceMock extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n\r\n  signIn(email, pass) { // ... see AuthServiceAPI\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // stimulate various errors with variations in email/pass\r\n      if (pass === 'unexpect') { // ... unexpected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Simulated Unexpected Condition`)\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      if (pass === 'expect') { // ... expected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Invalid Password`) // do NOT expose details to the user (e.g. Invalid Password)\r\n            .defineUserMsg('Invalid SignIn credentials.') // keep generic\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      // define our mock user\r\n      this.currentAppUser = new User({\r\n        \"name\":          \"MockGuy\",\r\n        email,\r\n        \"emailVerified\": false,\r\n        \"pool\":          \"mock\"\r\n      });\r\n\r\n      // sign in the supplied user\r\n      if (pass === 'unverify') { // ... simulate user unverified\r\n        return resolve(this.currentAppUser);\r\n      }\r\n\r\n      // ... all other cases: user is verified\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  refreshUser() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      // very simple mock ... assume they have now been verified\r\n      this.currentAppUser = this.currentAppUser.clone();\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  resendEmailVerification() { // ... see AuthServiceAPI\r\n    // NOTHING TO DO :-)\r\n  }\r\n\r\n\r\n  signOut() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n      return resolve(undefined);\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags';\r\nimport AuthServiceMock  from './AuthServiceMock';\r\n\r\n// feature: authServiceMock\r\n//          defines the mock 'authService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'authServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {generateActions} from 'action-u';\r\nimport _bootstrap        from './featureName';\r\n\r\nexport default generateActions.root({\r\n                   // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n  [_bootstrap]: { // actions(): Action ... the root IS an action (e.g. bootstrap() action)\r\n                   // > start boostrap initialization process\r\n                   actionMeta: {},\r\n\r\n    setStatus: { // actions.setStatus(statusMsg): Action\r\n                 // > set bootstrap status (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n                 actionMeta: {\r\n                   traits: ['statusMsg'],\r\n                 },\r\n    },\r\n\r\n    // the fundamental action that indicates the bootstrap process is complete\r\n    // ... monitored by down-stream features (to start the app running),\r\n    complete: { // actions.complete(): Action\r\n                // > bootstrap is complete and app is ready to start\r\n                actionMeta: {},\r\n    },\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'bootstrap';\r\n","import {createLogic}      from 'redux-logic';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\nimport discloseError      from '../../../util/discloseError';\r\n\r\n/**\r\n * Administer the \"bootstrap\" initialization process, initiated by\r\n * dispatching the `bootstrap()` action.\r\n * \r\n * A bootstrapFn is a client-specific critical-path initialization that\r\n * must be completed before the app can run.\r\n * \r\n * Bootstraps can be supplied by any number of features, under the\r\n * `'bootstrap.*'` fassets use contract.  These are functions (created\r\n * through `createBootstrapFn()`), that perform any critical-path\r\n * client-specific initialization.  All bootstraps will run to\r\n * completion before this administrative process is finished (as\r\n * denoted by the `bootstrap.complete()` action).\r\n * \r\n * Actions that are emitted by this process are:\r\n * \r\n *  - bootstrap.setStatus(statusMsg)\r\n *  \r\n *    Status is a human interpretable representation of the bootstrap\r\n *    process (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE').\r\n * \r\n *    This status is used by our SplashScreen, informing the user\r\n *    of what is going on.\r\n * \r\n *  - client-specific actions\r\n * \r\n *    These actions can optionally emitted by client-specific\r\n *    bootstrapFns.  As an example, a device feature's bootstrapFn may\r\n *    need to retain it's GPS location.\r\n * \r\n *  - bootstrap.complete()\r\n * \r\n *    This is a **fundamental result** of the bootstrap process\r\n *    completion.  It indications that all bootstraps have completed,\r\n *    and the app is fully initialized and ready to run.\r\n * \r\n *    This action is typically monitored by an external feature to\r\n *    start the app.\r\n */\r\nexport const bootstrap = createLogic({\r\n\r\n  name: `${_bootstrap}`,        // our featureName IS the module name (bootstrap)\r\n  type: String(_bootstrapAct),  // our base actions IS the bootstrap() action\r\n  warnTimeout: 0, // long-running process (runs till all bootstrap initialization has completed)\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n\r\n    // identify the various bootstrap items to process\r\n    // ... employing our use contract\r\n    const bootstrapFns = fassets.get('bootstrap.*'); // bootstrapFn[]\r\n\r\n    // initialize all bootstrapFns to an un-processed status\r\n    bootstrapFns.forEach( (bootstrapFn) => bootstrapFn.complete = false );\r\n\r\n    // helper to \"wrapup\" when all bootstrap initialization has completed\r\n    function wrapup() {\r\n      dispatch( _bootstrapAct.setStatus('COMPLETE') ); // maintain our status as complete\r\n      dispatch( _bootstrapAct.complete() );            // the fundamental action that triggers downstream processes\r\n      done();\r\n    }\r\n\r\n    // no-op if there are NO bootstrapFns ... there is nothing to do\r\n    if (bootstrapFns.length === 0) {\r\n      wrapup();\r\n      return;\r\n    }\r\n\r\n    // helper that monitors the completion of each bootstrapFn\r\n    // ... optionally with the supplied err\r\n    function bootstrapFnFinished(bootstrapFn, err=null) {\r\n\r\n      // mark bootstrapFn as completed\r\n      // ... unless there is an unexpected error\r\n      if (!err || !err.isUnexpected()) {\r\n        bootstrapFn.complete = true;\r\n      }\r\n\r\n      // handle error conditions\r\n      if (err) {\r\n        // add the \"what\" context to this raw error\r\n        err.defineAttemptingToMsg(bootstrapFn.bootstrapWhat);\r\n\r\n        // disclose the error to the user -and- log it\r\n        discloseError({err, logIt:true});\r\n      }\r\n\r\n      // change our status to one of the \"open\" un-processed bootstrapFns\r\n      // ... giving user visibility of what is being done\r\n      // ... e.g. 'Waiting for bla bla bla'\r\n      const nextBootstrapFn = bootstrapFns.find( (bootstrapFn) => !bootstrapFn.complete );\r\n      if (nextBootstrapFn) {\r\n        dispatch( _bootstrapAct.setStatus(nextBootstrapFn.bootstrapWhat) );\r\n      }\r\n\r\n      // when ALL bootstrapFns have completed, we are done!!!\r\n      // ... we have successfully initialized ALL bootstrapFns\r\n      // ... otherwise we keep going\r\n      //     - even when we are hung with one bootstrapFn that errored\r\n      //       ... because this process is a critical path that must complete\r\n      //       ... there is no subsequent work that will be done in the entire app\r\n      if (!nextBootstrapFn) {\r\n        wrapup();\r\n      }\r\n\r\n    }\r\n\r\n    // \"prime the pump\" by setting our status to the FIRST bootstrapFn\r\n    // ... giving user visibility of what is being done\r\n    // ... e.g. 'Waiting for bla bla bla'\r\n    dispatch( _bootstrapAct.setStatus(bootstrapFns[0].bootstrapWhat) );\r\n    \r\n    // asynchronously kick off each each bootstrapFn process\r\n    // ... via promise\r\n    bootstrapFns.forEach(bootstrapFn => {\r\n      bootstrapFn({getState, dispatch, fassets})\r\n        .then( () => {\r\n          // console.log(`xx resolving bootstrapFn IN logic processor ... bootstrap.${bootstrapFn.bootstrapWhat}`);\r\n          bootstrapFnFinished(bootstrapFn);\r\n        })\r\n        .catch( (err) => {\r\n          // console.log(`xx error caught invoking bootstrap.${bootstrapFn.bootstrapWhat}: `, err);\r\n          bootstrapFnFinished(bootstrapFn, err);\r\n        });\r\n    });\r\n\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  bootstrap,\r\n];\r\n","import {combineReducers}  from 'redux';\r\nimport {reducerHash}      from 'astx-redux-util';\r\nimport {slicedReducer}    from 'feature-redux';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\n\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for the bootstrap process.\r\n// ***\r\nconst reducer = slicedReducer(_bootstrap, combineReducers({\r\n\r\n  // status: string ... bootstrap status - 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n  //                    - VISIBLE in the SplashScreen startup\r\n  //                      ... via selector: getBootstrapStatusMsg(appState)\r\n  //                    - USED to determine when our app is ready to start\r\n  //                      ... via selector: isBootstrapComplete(appState)\r\n  status: reducerHash({\r\n    [_bootstrapAct.setStatus]: (state, action) => action.statusMsg,\r\n  }, 'Waiting for App to start'), // initialState\r\n\r\n}) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                               /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState        = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;   // ... concise alias (used internally)\r\n\r\n\r\n                                     /** Is app ready to start (based on our bootstrap status): boolean */\r\nexport const isBootstrapComplete   = (appState) => gfs(appState).status === 'COMPLETE';\r\n                                     /** Bootstrap status message: string ('Waiting for bla bla bla' -or- 'COMPLETE') */\r\nexport const getBootstrapStatusMsg = (appState) => gfs(appState).status;\r\n","import React                   from 'react';\r\nimport {isBootstrapComplete,\r\n        getBootstrapStatusMsg} from './state';\r\nimport {featureRoute, \r\n        PRIORITY}              from 'feature-router';\r\nimport SplashScreen            from 'util/SplashScreen';\r\n\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH+10,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    // promote a simple SplashScreen (with status) until the bootstrap process is complete\r\n    // NOTE: Errors from bootstrap hooks are promoted through independent user notifications (toasts)\r\n    if (!isBootstrapComplete(appState)) {\r\n      // console.log(`xx bootstrap feature router ... NOT COMPLETE: route -> SplashScreen with msg: ${getBootstrapStatusMsg(appState)}`);\r\n      return <SplashScreen msg={getBootstrapStatusMsg(appState)}/>;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n});\r\n","import {createFeature}       from 'feature-u';\r\nimport _bootstrap            from './featureName';\r\nimport {isFassetBootstrapFn} from './bootstrapFn';\r\nimport _bootstrapAct         from './actions';\r\nimport logic                 from './logic';\r\nimport route                 from './route';\r\nimport reducer               from './state';\r\n\r\n// feature: bootstrap\r\n//          initialize the app through a critical-path app initialization\r\n//          process that must complete before the app can run, using the\r\n//          `'bootstrap.*'` fassets use contract (full details in README)\r\nexport default createFeature({\r\n  name: _bootstrap,\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    // the 'bootstrap.*' use contract (see 'bootstrap' logic module)\r\n    use: [\r\n      ['bootstrap.*', {required: false, type: isFassetBootstrapFn}],\r\n    ],\r\n\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      // *** public actions ***\r\n                                   // the fundamental action, \r\n                                   // monitored by down-stream features (e.g. authorization),\r\n                                   // logically starting our app running!\r\n      'actions.bootstrapComplete': _bootstrapAct.complete, // ... slight naming variation to original action\r\n\r\n    }\r\n  },\r\n\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    // dispatch our base bootstrap action, that \"kicks off\" the app's bootstrap initialization process\r\n    dispatch( _bootstrapAct() ); // ... this base \"actions\" is the bootstrap action\r\n  }\r\n\r\n});\r\n","import isFunction  from 'lodash.isfunction';\r\nimport isString    from 'lodash.isstring';\r\nimport verify      from 'util/verify';\r\n\r\n/**\r\n * Embellish the supplied function with a `bootstrapWhat` property -\r\n * used by the `bootstrap` feature to set it's status.\r\n *\r\n * A bootstrapFn is required by the `'bootstrap.*'` fassets use\r\n * contract.\r\n * \r\n * @param {string} what - a description of what is being bootstrapped\r\n * (e.g. 'Waiting for bla bla bla').\r\n * \r\n * @param {function} fn - the function to be embellished with the\r\n * `bootstrapWhat` property.  The API of this function is:\r\n *   + fn({getState, dispatch, fassets})): promise - resolving void (promise used for error handling)\r\n *\r\n * @return {bootstrapFn} the supplied fn parameter, embellished with a\r\n * `bootstrapWhat` property.\r\n */\r\nexport function createBootstrapFn(what, fn) {\r\n\r\n  // validate parameters\r\n  const check = verify.prefix('createBootstrapFn() parameter violation: ');\r\n\r\n  check(what,           'what is required');\r\n  check(isString(what), 'what must be a string');\r\n\r\n  check(fn,             'fn is required');\r\n  check(isFunction(fn), 'fn must be a function');\r\n\r\n  // embellish/return the supplied function\r\n  fn.bootstrapWhat = what;\r\n  return fn;\r\n}\r\n\r\n\r\n/**\r\n * Return an indicator as to whether the supplied `ref` parameter is a\r\n * bootstrapFn.\r\n * \r\n * @param {any} ref - the reference item to validate.\r\n *\r\n * @return {boolean} true: if bootstrapFn, false otherwise.\r\n */\r\nexport function isBootstrapFn(ref) {\r\n  return ref && isFunction(ref) && ref.bootstrapWhat;\r\n}\r\n\r\n\r\n/**\r\n * A bootstrapFn validator conforming to feature-u's fassetValidation\r\n * API ... see: https://feature-u.js.org/cur/api.html#fassetValidations\r\n * \r\n * @param {any} fassetsValue - the fassets value to validate.\r\n *\r\n * @return {string} null: valid bootstrapFn -or-\r\n *                  'bootstrapFn': NOT a valid bootstrapFn (used in feature-u Error content).\r\n */\r\nexport function isFassetBootstrapFn(fassetsValue) {\r\n  return isBootstrapFn(fassetsValue) ? null : 'bootstrapFn';\r\n}\r\n\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'discovery';\r\n","import {combineReducers}        from 'redux';\r\nimport {reducerHash}            from 'astx-redux-util';\r\nimport {expandWithFassets}      from 'feature-u';\r\nimport {slicedReducer}          from 'feature-redux';\r\nimport _discovery               from './featureName';\r\nimport discoveryFilterFormMeta  from './discoveryFilterFormMeta';\r\nimport _discoveryAct            from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our discovery process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is used NOT for app injection,\r\n//       but RATHER to delay expansion (avoiding circular dependancies\r\n//       in selector access from discoveryFilterFormMeta.js)\r\n//       >>> subsequently, fassets is now used to access fassets.actions.signOut action\r\nconst reducer = slicedReducer(`view.${_discovery}`, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // retrieval in-progress (used by BOTH filtered retrieval, and next page)\r\n  // ... null/'retrieve'/'next'\r\n  inProgress: reducerHash({\r\n\r\n    [_discoveryAct.retrieve]:          (state, action) => 'retrieve',\r\n    [_discoveryAct.retrieve.complete]: (state, action) => null,\r\n    [_discoveryAct.retrieve.fail]:     (state, action) => null,\r\n\r\n    [_discoveryAct.nextPage]:          (state, action) => 'next',\r\n    [_discoveryAct.nextPage.complete]: (state, action) => null,\r\n    [_discoveryAct.nextPage.fail]:     (state, action) => null,\r\n\r\n  }, null),  // initialState\r\n\r\n  // standard iForm reducer for our DiscoveryFilterForm\r\n  filterForm: discoveryFilterFormMeta.registrar.formReducer(),\r\n\r\n  // selection criteria (filter)\r\n  filter: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.filter,\r\n    [fassets.actions.signOut]:         (state, action) => ({searchText: '', distance: 10, minprice:   '1'}), // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, { // initialState\r\n    searchText: '',\r\n    distance:   10,\r\n    minprice:   '1',\r\n  }),\r\n\r\n  // next page token (for paging)\r\n  nextPageToken: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.discoveriesResp.pagetoken,\r\n    [_discoveryAct.nextPage.complete]: (state, action) => action.discoveriesResp.pagetoken,\r\n    [fassets.actions.signOut]:         (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n  // discoveries (data records)\r\n  discoveries: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.discoveriesResp.discoveries,\r\n    [_discoveryAct.nextPage.complete]: (state, action) => [...state, ...action.discoveriesResp.discoveries], // append to state\r\n    [fassets.actions.signOut]:         (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                   /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState            = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;       // ... concise alias (used internally)\r\n\r\nexport const getInProgress       = (appState) => gfs(appState).inProgress;\r\n\r\nexport const isFormFilterActive  = (appState) => gfs(appState).filterForm ? true : false;\r\nexport const getFormFilter       = (appState) => gfs(appState).filterForm;\r\n\r\nexport const getFilter           = (appState) => gfs(appState).filter;\r\n\r\nexport const getNextPageToken    = (appState) => gfs(appState).nextPageToken;\r\n\r\nexport const getDiscoveries      = (appState) => gfs(appState).discoveries;\r\n","import * as Yup            from 'yup';\r\nimport IFormMeta           from 'util/iForms/IFormMeta';\r\nimport _discoveryAct       from './actions';\r\nimport * as _discoverySel  from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nconst distanceMsg = 'Miles should be a number between 1 and 30';\r\nconst minpriceMsg = 'Price should be a number between 0 and 4';\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Discovery Filter',\r\n  formSchema: Yup.object().shape({\r\n    searchText: Yup.string().label('Search'),\r\n    distance:   Yup.number().label('Distance')    .typeError(distanceMsg) .required() .min(1, distanceMsg) .max(30, distanceMsg),\r\n    minprice:   Yup.string().label('Price Range') .typeError(minpriceMsg) .required() .matches(/[0-4]/, minpriceMsg),\r\n  }),\r\n  formActionsAccessor: ()         => _discoveryAct.filterForm,\r\n  formStateSelector:   (appState) => _discoverySel.getFormFilter(appState),\r\n});\r\n","import {generateActions}        from 'action-u';\r\nimport _discovery               from './featureName';\r\nimport discoveryFilterFormMeta  from './discoveryFilterFormMeta';\r\n\r\nexport default generateActions.root({\r\n\r\n  [_discovery]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    filterForm: discoveryFilterFormMeta.registrar.formActionGenesis(),\r\n\r\n    retrieve: { // actions.retrieve([filter]): Action\r\n                // > retrieval of discoveries using supplied filter\r\n                actionMeta: {\r\n                  traits: ['filter']\r\n                },\r\n\r\n      complete: { // actions.retrieve.complete(filter, discoveriesResp): Action\r\n                  // > discoveries retrieval complete, with supplied response\r\n                  actionMeta: {\r\n                    traits: ['filter', 'discoveriesResp'],\r\n                  },\r\n      },\r\n\r\n      fail: { // actions.retrieve.fail(err): Action\r\n              // > discoveries retrieval failed, with supplied err\r\n              actionMeta: {\r\n                traits: ['err'],\r\n              },\r\n      },\r\n\r\n    },\r\n\r\n    nextPage: { // actions.nextPage(pagetoken): Action\r\n                // > retrieve next-page, via supplied pagetoken\r\n                actionMeta: {\r\n                  traits: ['pagetoken'],\r\n                },\r\n\r\n      complete: { // actions.nextPage.complete(discoveriesResp): Action\r\n                  // > discoveries nextPage retrieval complete, with supplied response\r\n                  actionMeta: {\r\n                    traits: ['discoveriesResp'],\r\n                  },\r\n      },\r\n\r\n      fail: { // actions.nextPage.fail(err): Action\r\n              // > discoveries nextPage retrieval failed, with supplied err\r\n              actionMeta: {\r\n                traits: ['err'],\r\n              },\r\n      },\r\n\r\n    },\r\n\r\n  },\r\n});\r\n","import {createLogic}           from 'redux-logic';\r\nimport discoveryFilterFormMeta from './discoveryFilterFormMeta';\r\nimport _discoveryAct           from './actions';\r\nimport _discovery              from './featureName';\r\nimport * as _discoverySel      from './state';\r\nimport {expandWithFassets}     from 'feature-u';\r\nimport discloseError           from 'util/discloseError';\r\n\r\n/**\r\n * Initially retrieve discoveries, on 'discovery' view change.\r\n */\r\nexport const initialRetrieve = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_discovery}.initialRetrieve`,\r\n  type: String(fassets.actions.changeView),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    const appState = getState();\r\n\r\n    if (action.viewName                        === _discovery  && // ... our view\r\n        _discoverySel.getDiscoveries(appState) === null        && // ... discoveries in initial state\r\n        !_discoverySel.getInProgress(appState)) {                 // ... no discovery retrieval is in-progress\r\n      // initial retrieval using default filter (located in our app state)\r\n      const location = fassets.sel.getLocation(appState);\r\n      dispatch( _discoveryAct.retrieve({..._discoverySel.getFilter(appState),\r\n                                        loc: [location.lat, location.lng]}) );\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Default the filter.open() domain param from the appState\r\n * filter.\r\n */\r\nexport const defaultFilter = createLogic({\r\n\r\n  name: `${_discovery}.defaultFilter`,\r\n  type: String(_discoveryAct.filterForm.open),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    if (!action.domain) {\r\n      action.domain = _discoverySel.getFilter(getState());\r\n    }\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n/**\r\n * Process discovery filter.\r\n */\r\nexport const processFilter = createLogic({\r\n\r\n  name: `${_discovery}.processFilter`,\r\n  type: String(_discoveryAct.filterForm.process),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n    // retrieve using new filter from form\r\n    const appState  = getState();\r\n    const filter    = action.domain;\r\n    const location = fassets.sel.getLocation(appState);\r\n    dispatch( _discoveryAct.retrieve({...filter, \r\n                                      loc: [location.lat, location.lng]}) );\r\n    \r\n    // show our view view\r\n    dispatch( fassets.actions.changeView(_discovery) );\r\n\r\n    // close our form filter\r\n    dispatch( _discoveryAct.filterForm.close() );\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Perform discovery retrieval.\r\n */\r\nexport const retrieve = createLogic({\r\n\r\n  name: `${_discovery}.retrieve`,\r\n  type: String(_discoveryAct.retrieve),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY GooglePlaces is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.searchDiscoveries(action.filter)\r\n       .then(discoveriesResp => { \r\n         // console.log(`xx here is our discoveriesResp: `, discoveriesResp);\r\n         dispatch( _discoveryAct.retrieve.complete(action.filter, discoveriesResp) );\r\n         done();\r\n       })\r\n       .catch(err => {\r\n         dispatch( _discoveryAct.retrieve.fail(err) );\r\n\r\n         // report unexpected error to user\r\n         discloseError({err: err.defineAttemptingToMsg('DiscoveryService.searchDiscoveries()')});\r\n\r\n         done();\r\n       });\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n/**\r\n * Perform next-page discovery retrieval.\r\n */\r\nexport const nextPage = createLogic({\r\n\r\n  name: `${_discovery}.nextPage`,\r\n  type: String(_discoveryAct.nextPage),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY GooglePlaces is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.searchDiscoveriesNextPage(action.pagetoken)\r\n       .then(discoveriesResp => {\r\n         // console.log(`xx here is our discoveriesRes: `, discoveriesResp);\r\n         dispatch( _discoveryAct.nextPage.complete(discoveriesResp) );\r\n         done();\r\n       })\r\n       .catch(err => {\r\n         dispatch( _discoveryAct.nextPage.fail(err) );\r\n\r\n         // report unexpected error to user\r\n         discloseError({err: err.defineAttemptingToMsg('DiscoveryService.searchDiscoveriesNextPage()')});\r\n\r\n         done();\r\n       });\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic (accumulated in index.js)\r\n// ... named exports (above) are used by unit tests :-)\r\nexport default expandWithFassets( (fassets) => [\r\n  ...discoveryFilterFormMeta.registrar.formLogic(), // discoveryFilter iForm logic modules\r\n  defaultFilter,\r\n  initialRetrieve(fassets),\r\n  processFilter,\r\n  retrieve,\r\n  nextPage,\r\n] );\r\n","import React             from 'react';\r\n\r\nimport Radio             from '@material-ui/core/Radio';\r\nimport RadioGroup        from '@material-ui/core/RadioGroup';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel  from '@material-ui/core/FormControlLabel';\r\nimport FormControl       from '@material-ui/core/FormControl';\r\nimport FormLabel         from '@material-ui/core/FormLabel';\r\n\r\nimport PropTypes         from 'prop-types';\r\nimport verify            from 'util/verify';\r\n\r\n/**\r\n * An IForm radio container input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * PROPS:\r\n *   - fieldName:     (a string) the iForm field name\r\n *   - iForm:         (an IFormMeta) the iFormMeta object in control\r\n *   - row:           (a boolean) to format buttons in a row (default column)\r\n *   - helperText:    (a string) to display help user text (default none)\r\n *   - children:      (<IRadioField.Op>) the radio options to select from\r\n *   - ...extraProps: (...any) injected directly into <FormControl>\r\n *                    ex: variant=\"standard\"/\"outlined\"/\"filled\" ... AI: currently doesn't work\r\n *\r\n * NOTE: Unlike text input, radios always expose validation msgs (i.e. they\r\n *       are NOT dynamically injected based on touches).\r\n *       ... HOWEVER: validation is seldomly shown \r\n *                    because of the controlled nature of the radio!\r\n *\r\n * Usage:\r\n *   const radioProps = {fieldName: 'myFieldName', iForm};\r\n *   ...\r\n *   <IRadioField {...radioProps} row helperText=\"... help text here\">\r\n *     <IRadioField.Op value=\"1\" label=\"One\" {...radioProps}/>\r\n *     <IRadioField.Op value=\"2\" label=\"Two\" {...radioProps}/>\r\n *   </IRadioField>\r\n */\r\nexport default function IRadioField({fieldName, iForm, row, helperText, children, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<IRadioField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... row\r\n  if (row) { // when supplied\r\n    check(row===true || row===false, `row must be a boolean (true/false) ... in fieldName: '${fieldName}'`);\r\n  }\r\n  const rowProp = row ? true : false; // normalize (defaulting to false)\r\n\r\n  // ... helperText (just let PropTypes validate)\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  //     NOTE: currently have NONE (commented out)\r\n  // ['have', 'none', 'for', 'now'].forEach(\r\n  //   (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  // );\r\n\r\n  // compute field success/error adornments\r\n  let   msgDom       = null; // optional DOM displaying helperText -or- field validation message\r\n  const managedProps = {};   // NOTE: currently assumed to go in <FormControl>\r\n  const fieldMsg     = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n  if (fieldMsg) { // error adornment\r\n    managedProps.error = true;\r\n    msgDom  = <FormHelperText>{fieldMsg}</FormHelperText>\r\n  }\r\n  else if (helperText) {\r\n    msgDom  = <FormHelperText>{helperText}</FormHelperText>\r\n  }\r\n\r\n  // emit IRadioField\r\n  return (\r\n    <FormControl {...extraProps} {...managedProps}>\r\n      <FormLabel>{fieldLabel}</FormLabel>\r\n      <RadioGroup name={fieldName}\r\n                  row={rowProp}\r\n                  value={iForm.getValue(fieldName)}>\r\n        {children}\r\n      </RadioGroup>\r\n      {msgDom}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nIRadioField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  row:          PropTypes.bool,\r\n  helperText:   PropTypes.string,\r\n  children:     PropTypes.node.isRequired, // IRadioField content is required (i.e. the IRadioField.Op's)\r\n};\r\n\r\n\r\n\r\nIRadioField.Op = function ({fieldName, iForm, value, label}) {\r\n  const handleFieldChanged = () => iForm.handleFieldChanged(fieldName, value);\r\n  // NOTE: <FormControlLabel> is used as a drop-in-replacement of Radio/Switch/Checkbox DISPLAYING an extra label\r\n  return (\r\n    <FormControlLabel value={value}\r\n                      control={<Radio/>}\r\n                      label={label}\r\n                      checked={value===iForm.getValue(fieldName)}\r\n                      onChange={handleFieldChanged}/>\r\n  );\r\n}\r\n\r\nIRadioField.Op.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  value:        PropTypes.string.isRequired,\r\n  label:        PropTypes.string.isRequired,\r\n};\r\n","import React                   from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}           from 'react-redux'\r\n\r\nimport {withStyles}            from '@material-ui/core/styles';\r\nimport withMobileDialog        from '@material-ui/core/withMobileDialog';\r\n\r\nimport discoveryFilterFormMeta from '../discoveryFilterFormMeta';\r\nimport ITextField              from 'util/iForms/comp/ITextField';\r\nimport IRadioField             from 'util/iForms/comp/IRadioField';\r\n\r\nimport Button                from '@material-ui/core/Button';\r\nimport CloseIcon             from '@material-ui/icons/Close';\r\nimport Dialog                from '@material-ui/core/Dialog';\r\nimport DialogContent         from '@material-ui/core/DialogContent';\r\nimport DialogContentText     from '@material-ui/core/DialogContentText';\r\nimport DialogTitle           from '@material-ui/core/DialogTitle';\r\nimport FilterIcon            from '@material-ui/icons/FilterList';\r\nimport FormHelperText        from '@material-ui/core/FormHelperText';\r\nimport Grid                  from '@material-ui/core/Grid';\r\nimport IconButton            from '@material-ui/core/IconButton';\r\nimport InProgress            from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport {TransitionSlide}     from 'util/Transition';\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n\r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n/**\r\n * DiscoveryFilterScreen: gather filter information (selection criteria) \r\n * for a discovery retrieval.\r\n */\r\nfunction DiscoveryFilterScreen({fullScreen, classes}) {\r\n\r\n  const dispatch  = useDispatch();\r\n  const formState = useSelector((appState) => discoveryFilterFormMeta.formStateSelector(appState), []);\r\n\r\n  const iForm = discoveryFilterFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel       = iForm.getLabel();\r\n  const formInProcess   = iForm.inProcess();\r\n  const priceRadioProps = {\r\n    fieldName: 'minprice',\r\n    iForm,\r\n  };\r\n\r\n  const formErrMsg = iForm.getMsg();\r\n\r\n  return (\r\n\r\n    <Dialog open={true}\r\n            onClose={iForm.handleClose}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionSlide}>\r\n\r\n      <form onSubmit={iForm.handleProcess}>\r\n\r\n        <DialogTitle disableTypography className={classes.titleBar}>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            {formLabel}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={iForm.handleClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText className={classes.entry}>\r\n            filter your discovery with these settings ...\r\n          </DialogContentText>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"searchText\"\r\n                        iForm={iForm}\r\n                        autoFocus\r\n                        type=\"string\"\r\n                        helperText=\"... suggest a restaurant or town (optional)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"distance\"\r\n                        iForm={iForm}\r\n                        placeholder=\"... enter 1-30\"\r\n                        type=\"number\"\r\n                        helperText=\"... the maximum search distance (1-30)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <IRadioField {...priceRadioProps}\r\n                         row\r\n                         helperText=\"... most affordable to most expensive\">\r\n              <IRadioField.Op value=\"0\" label=\"1\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"1\" label=\"2\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"2\" label=\"3\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"3\" label=\"4\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"4\" label=\"5\" {...priceRadioProps}/>\r\n            </IRadioField>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <FilterIcon className={classes.icon}/>\r\n                Filter Discoveries\r\n              </Button>\r\n            </CenterItems>\r\n          </div>\r\n\r\n          {formErrMsg && (\r\n            <div className={classes.entry}>\r\n              <FormHelperText error>{formErrMsg}</FormHelperText>\r\n            </div>\r\n          )}\r\n          \r\n          {formInProcess && (\r\n            <div className={classes.entry}>\r\n              <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n            </div>\r\n          )}\r\n\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst DiscoveryFilterScreenWithStyles = withStyles(styles)(DiscoveryFilterScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(DiscoveryFilterScreenWithStyles);\r\n","import React,\r\n       {useCallback} from 'react';\r\n\r\nimport {useFassets}  from 'feature-u';\r\nimport {useSelector,\r\n        useDispatch} from 'react-redux'\r\n\r\nimport withStyles    from '@material-ui/core/styles/withStyles';\r\n\r\nimport _discoveryAct      from '../actions';\r\nimport * as _discoverySel from '../state';\r\n\r\nimport Button         from '@material-ui/core/Button';\r\nimport CheckedIcon    from '@material-ui/icons/CheckCircle';\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport List           from '@material-ui/core/List';\r\nimport ListItem       from '@material-ui/core/ListItem';\r\nimport ListItemIcon   from '@material-ui/core/ListItemIcon';\r\nimport ListItemText   from '@material-ui/core/ListItemText';\r\nimport NextPageIcon   from '@material-ui/icons/FastForward';   // -or- PlaylistPlay FastForward NavigateNext ArrowForward ArrowForwardIos MoreHorizontal TrendingFlat SkipNext Redo\r\nimport Progress       from '@material-ui/core/LinearProgress'; // -or- CircularProgress\r\nimport SettingsIcon   from '@material-ui/icons/Tune';          // -or- Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\nimport Typography     from '@material-ui/core/Typography';\r\nimport UnCheckedIcon  from '@material-ui/icons/Check';\r\n\r\nconst listStyles = (theme) => ({\r\n  list: {\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n  nextPage: {\r\n    fontStyle: 'italic',\r\n  },\r\n});\r\n\r\n/**\r\n * DiscoveryListScreen displaying our discoveries.\r\n */\r\nfunction DiscoveryListScreen({classes}) {\r\n\r\n  // ***\r\n  // *** setup\r\n  // ***\r\n\r\n  const fassets    = useFassets();\r\n\r\n  const inProgress    = useSelector( (appState) => _discoverySel.getInProgress(appState),    [] );\r\n  const discoveries   = useSelector( (appState) => _discoverySel.getDiscoveries(appState),   [] );\r\n  const nextPageToken = useSelector( (appState) => _discoverySel.getNextPageToken(appState), [] );\r\n  const eateryPool    = useSelector( (appState) => fassets.sel.getEateryDbPool(appState),    [fassets] );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNextPage        = useCallback((nextPageToken) => dispatch( _discoveryAct.nextPage(nextPageToken) ), []);\r\n  const handleFilterDiscovery = useCallback(() => dispatch( _discoveryAct.filterForm.open() ),                    []);\r\n  const toggleEateryPool      = useCallback((discovery, eateryPool) => {\r\n    if (eateryPool[discovery.id]) { // in pool\r\n      // console.log(`xx delete ${discovery.name} from pool`);\r\n      dispatch( fassets.actions.removeEatery(discovery.id) );\r\n    }\r\n    else { // NOT in pool\r\n      // console.log(`xx add ${discovery.name} to pool`);\r\n      dispatch( fassets.actions.addEatery(discovery.id) );\r\n    }\r\n  }, []);\r\n\r\n\r\n  // ***\r\n  // *** define page content\r\n  // ***\r\n\r\n  let content = null;\r\n\r\n  // case for discoveries retrieval in-progress\r\n  if (discoveries===null || inProgress==='retrieve') { // just to be safe ... discoveries===null\r\n    content = [\r\n      <ListItem key=\"inProgress\">\r\n        <ListItemText>\r\n          <Typography variant=\"subtitle1\" align=\"center\" noWrap><br/><br/><br/><br/><br/>retrieval in progress</Typography>\r\n        </ListItemText>\r\n      </ListItem>,\r\n\r\n      <ListItem key=\"inProgressSpin\">\r\n        <ListItemText>\r\n          <Progress className={classes.progress} color=\"secondary\"/>\r\n        </ListItemText>\r\n      </ListItem>\r\n    ];\r\n  }\r\n\r\n  // case for NO discoveries found (in retrieval)\r\n  else if (discoveries.length === 0) {\r\n    content = [\r\n      <ListItem key=\"noEntries\">\r\n        <ListItemText>\r\n          <Typography variant=\"subtitle1\" align=\"center\" noWrap>\r\n            No entries match your filter &nbsp;&nbsp;\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleFilterDiscovery}>\r\n              <SettingsIcon/>\r\n              <Typography color=\"inherit\" variant=\"body2\">&nbsp;Adjust Filter</Typography>\r\n            </Button>\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    ];\r\n  }\r\n\r\n  // case for displaying retrieved discoveries\r\n  else {\r\n    function renderPoolButton(discovery) {\r\n      if (eateryPool[discovery.id]) { // in pool\r\n        return <CheckedIcon color=\"secondary\"/>;\r\n      }\r\n      else { // NOT in pool\r\n        return <UnCheckedIcon/>;\r\n      }\r\n    }\r\n    \r\n    // generate list content\r\n    content =\r\n      discoveries.map( discovery => (\r\n\r\n        <ListItem key={discovery.id}\r\n                  dense\r\n                  divider>\r\n          <ListItemIcon onClick={()=>toggleEateryPool(discovery, eateryPool)}>\r\n            <IconButton>\r\n              {renderPoolButton(discovery)}\r\n            </IconButton>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText \r\n              primary={\r\n                <Typography variant=\"h6\" noWrap>\r\n                  {discovery.name}\r\n                </Typography>\r\n                      }\r\n              secondary={\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {discovery.addr}\r\n                </Typography>\r\n                        }/>\r\n\r\n        </ListItem>\r\n      ));\r\n  \r\n    // provide CRUDE next page mechanism\r\n    if (nextPageToken) { // there is a next page\r\n      if (inProgress==='next') { // the next page retrieval is \"in progress\"\r\n        content.push(\r\n          <ListItem key=\"nextPage\">\r\n            <ListItemText>\r\n              <Progress className={classes.progress}  color=\"secondary\"/>\r\n            </ListItemText>\r\n          </ListItem>\r\n        );\r\n      }\r\n      else { // the next page retrieval is NOT \"in progress\" ... provide a control to retrieve it\r\n        content.push(\r\n          <ListItem key=\"nextPageCntl\"\r\n                    dense\r\n                    button\r\n                    onClick={()=>handleNextPage(nextPageToken)}>\r\n            <ListItemIcon>\r\n              <IconButton color=\"primary\">\r\n                <NextPageIcon/>\r\n              </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Typography color=\"primary\" variant=\"h6\" className={classes.nextPage}>next page ...</Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        );\r\n      }\r\n    }\r\n    // notify user when 60 entry limitation has been met (a limitation of the \"free\" Google Places API)\r\n    else if (content.length === 60) {\r\n      content.push(\r\n\r\n        <ListItem key=\"maxEntriesHit\"\r\n                  dense\r\n                  button\r\n                  onClick={handleFilterDiscovery}>\r\n          <ListItemIcon>\r\n            <IconButton color=\"primary\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"subtitle1\">\r\n              We are limited to 60 entries.\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              ... adjust filter with city or restaurant\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              <SettingsIcon/>\r\n              <Typography color=\"inherit\" variant=\"body2\">&nbsp;Adjust Filter</Typography>\r\n            </Button>\r\n          </ListItemText>\r\n        </ListItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  // ***\r\n  // *** render page\r\n  // ***\r\n\r\n  return (\r\n    <List className={classes.list}>\r\n      { content }\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default /* DiscoveryListScreenWithStyles = */ withStyles(listStyles)(DiscoveryListScreen);\r\n","import React                  from 'react';\r\nimport * as _discoverySel     from './state';\r\nimport {featureRoute, \r\n        PRIORITY}             from 'feature-router';\r\nimport featureName            from './featureName';\r\nimport DiscoveryFilterScreen  from './comp/DiscoveryFilterScreen';\r\nimport DiscoveryListScreen    from './comp/DiscoveryListScreen';\r\n\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default [\r\n\r\n  featureRoute({\r\n    priority: PRIORITY.HIGH,\r\n    content({fassets, appState}) {\r\n      // display DiscoveryFilterScreen, when form is active (accomplished by our logic)\r\n      // ... this is done as a priority route, because this screen can be used to\r\n      //     actually change the view - so we display it regardless of the state of the active view\r\n      if (_discoverySel.isFormFilterActive(appState)) {\r\n        return <DiscoveryFilterScreen/>;\r\n      }\r\n    }\r\n  }),\r\n\r\n  featureRoute({\r\n    content({fassets, appState}) {\r\n\r\n      // allow other down-stream features to route, when the active view is NOT ours\r\n      if (fassets.sel.curView(appState) !== featureName) {\r\n        return null;\r\n      }\r\n\r\n      // ***\r\n      // *** at this point we know the active view is ours\r\n      // ***\r\n\r\n      // display our DiscoveryListScreen\r\n      return <DiscoveryListScreen/>;\r\n    }\r\n  }),\r\n\r\n];\r\n","import React,\r\n       {useCallback}   from 'react';\r\n\r\nimport _discovery      from '../featureName';\r\nimport _discoveryAct   from '../actions';\r\n\r\nimport {useFassets}    from 'feature-u';\r\nimport {useDispatch}   from 'react-redux'\r\n\r\nimport withStyles      from '@material-ui/core/styles/withStyles';\r\n\r\nimport DiscoveryIcon            from '@material-ui/icons/CloudDone';\r\nimport Divider                  from '@material-ui/core/Divider';\r\nimport IconButton               from '@material-ui/core/IconButton';\r\nimport ListItem                 from '@material-ui/core/ListItem';\r\nimport ListItemIcon             from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText             from '@material-ui/core/ListItemText';\r\nimport SettingsIcon             from '@material-ui/icons/Tune';           // possibilities: Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\n\r\n/**\r\n * DiscoveryLeftNavItem: our Discovery entry into the LeftNav.\r\n */\r\nfunction DiscoveryLeftNavItem({classes}) {\r\n\r\n  const fassets      = useFassets();\r\n  const dispatch     = useDispatch();\r\n  const changeView   = useCallback(() => dispatch( fassets.actions.changeView(_discovery) ), [fassets]);\r\n  const handleFilter = useCallback(() => dispatch( _discoveryAct.filterForm.open() ),        []);\r\n\r\n  // render our menu item\r\n  return (\r\n    <>\r\n      <ListItem button\r\n                onClick={changeView}>\r\n        <ListItemIcon className={classes.major}><DiscoveryIcon/></ListItemIcon>\r\n        <ListItemText primaryTypographyProps={{className:classes.major}} primary=\"Discovery\"/>\r\n        <ListItemSecondaryAction onClick={handleFilter}>\r\n          <ListItemIcon><IconButton className={classes.minor}><SettingsIcon/></IconButton></ListItemIcon>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  major: {\r\n    color: theme.palette.secondary.main, // redish\r\n  },\r\n  minor:{\r\n    color: theme.palette.primary.dark,   // bluish\r\n  },\r\n});\r\n\r\nexport default /* DiscoveryLeftNavItemWithStyle = */  withStyles(styles)(DiscoveryLeftNavItem);\r\n","import {createFeature}       from 'feature-u';\r\nimport _discovery            from './featureName';\r\nimport                            './actions'; // _discoveryAct TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (discoveryFilterFormMeta)\r\nimport reducer               from './state';\r\nimport logic                 from './logic';\r\nimport route                 from './route';\r\nimport DiscoveryLeftNavItem  from './comp/DiscoveryLeftNavItem';\r\nimport DiscoveriesTitle      from './comp/DiscoveriesTitle';\r\nimport DiscoveriesFooter     from './comp/DiscoveriesFooter';\r\n\r\n// feature: discovery\r\n//          manage and promotes the discovery view (a list of\r\n//          \"discoveries\" from GooglePlaces).  Eateries can be\r\n//          added/removed within the pool by simply\r\n//          checking/unchecking the discoveries (full details in README)\r\nexport default createFeature({\r\n  name: _discovery,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      [`AppMotif.LeftNavItem.cc6_${_discovery}`]: DiscoveryLeftNavItem, // inject our entry into the leftNav\r\n\r\n      // auxiliary view content for the discoveries view\r\n      [`AppMotif.auxViewContent.${_discovery}`]: {\r\n        TitleComp:  DiscoveriesTitle,\r\n        FooterComp: DiscoveriesFooter,\r\n      },\r\n    },\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n});\r\n","import React          from 'react';\r\n\r\nimport {useFassets}   from 'feature-u';\r\nimport {useSelector}  from 'react-redux'\r\n\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n/**\r\n * DiscoveriesTitle displaying the discoveries title\r\n */\r\nexport default function DiscoveriesTitle() {\r\n\r\n  const fassets = useFassets();\r\n  const curUser = useSelector( (appState) => fassets.sel.curUser(appState), [fassets] );\r\n\r\n  return (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Discovery\r\n      <Typography color=\"inherit\" inline noWrap>\r\n        &nbsp;({curUser.pool})\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n}\r\n","import React        from 'react';\r\nimport CheckedIcon  from '@material-ui/icons/CheckCircle';\r\nimport Grid         from '@material-ui/core/Grid';\r\nimport Tooltip      from '@material-ui/core/Tooltip';\r\nimport Typography   from '@material-ui/core/Typography';\r\n\r\n/**\r\n * DiscoveriesFooter displaying the spin control\r\n */\r\nexport default function DiscoveriesFooter() {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Typography>&nbsp;</Typography>\r\n      <Typography color=\"inherit\" variant=\"subtitle1\">\r\n        toggle check as &nbsp;\r\n        <CheckedIcon color=\"secondary\"/>\r\n        &nbsp; to place in pool\r\n      </Typography>\r\n      <Tooltip title=\"powered by Google Places\">\r\n        <img width=\"25px\" src=\"/googleLogo.png\" alt=\"\"/>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n}\r\n","/**\r\n * DiscoveryServiceAPI is a \"pseudo\" interface specifying the\r\n * DiscoveryService API which all implementations (i.e. derivations)\r\n * must conform.\r\n *\r\n * This service retrieves restaurant information from a geographical\r\n * data source, communicating results through two related objects:\r\n * Eatery and Discovery.  Because this service defines BOTH the\r\n * Discovery and Eatery objects, they are documented here.\r\n *\r\n * - Eatery (detailed restaurant info):\r\n *\r\n *   Eatery is a detailed restaurant object (containing complete\r\n *   details), and is retrieved one at a time (via an eateryId).\r\n * \r\n *   Eatery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     phone,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *     navUrl,   ... suitable for navigation\r\n *     website,\r\n *   }\r\n *\r\n * - Discovery (summary restaurant info)\r\n *\r\n *   Discovery is a \"lighter weight\" version of Eatery (with fewer\r\n *   attributes), and is returned in search results (with multiple\r\n *   entries).\r\n *\r\n *   Discovery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *   }\r\n */\r\nexport default class DiscoveryServiceAPI {\r\n\r\n  /**\r\n   * Search/retrieve nearby restaurants, returning a set of\r\n   * Discoveries (see class description).\r\n   *\r\n   * **Please Note**: this service uses named parameters.\r\n   *\r\n   * @param {[lat,lng]} loc the geo location to base the\r\n   * nearby search on.\r\n   *\r\n   * @param {number} searchText an optional search text (ex:\r\n   * restaurant name, or town, etc.).\r\n   *\r\n   * @param {number} distance the radius distance (in miles) to\r\n   * search for (1-31), DEFAULT TO 5.\r\n   *\r\n   * @param {string} minprice the minimum price range '0'-'4'\r\n   * (from most affordable to most expensive), DEFAULT TO '1'.\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure:\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveries({loc,\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.searchDiscoveries() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch the next-page of a previous searchDiscoveries() request.\r\n   * \r\n   * @param pagetoken the next page token (supplied by prior\r\n   * searchDiscoveries() invocation).\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure (same as searchDiscoveries()):\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveriesNextPage(pagetoken) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.searchDiscoveriesNextPage() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch (i.e. retreive) the details of a fully populated eatery using the\r\n   * supplied eateryId.\r\n   * \r\n   * @param {string} eateryId the id for the detailed entry to retrieve\r\n   * (same id as returned in Discovery)\r\n   * \r\n   * @return {promise} a promise resolving the Eatery\r\n   */\r\n  fetchEateryDetail(eateryId) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.fetchEateryDetail() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature}      from 'feature-u';\r\nimport DiscoveryServiceAPI  from './DiscoveryServiceAPI';\r\n\r\n// feature: discoveryService\r\n//          promote a service API that retrieves restaurant information\r\n//          from a geographical data source, through the\r\n//          `discoveryService` use contract (full details in\r\n//          README)\r\nexport default createFeature({\r\n  name: 'discoveryService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['discoveryService', {required: true, type: objectOfTypeDiscoveryServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeDiscoveryServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof DiscoveryServiceAPI ? null : 'object of type DiscoveryServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import DiscoveryServiceAPI from '../discoveryService/DiscoveryServiceAPI';\r\nimport verify              from 'util/verify';\r\nimport isString            from 'lodash.isstring';\r\n\r\n\r\n/**\r\n * DiscoveryServiceGooglePlaces is the **real** DiscoveryServiceAPI\r\n * derivation using the GooglePlaces service APIs.\r\n *\r\n * This service retrieves restaurant information from a geographical\r\n * data source, communicating results through two related objects:\r\n * Eatery and Discovery.  Because this service defines BOTH the\r\n * Discovery and Eatery objects, they are documented here.\r\n *\r\n * - Eatery (detailed restaurant info):\r\n *\r\n *   Eatery is a detailed restaurant object (containing complete\r\n *   details), and is retrieved one at a time (via an eateryId).\r\n * \r\n *   Eatery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     phone,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *     navUrl,   ... suitable for navigation\r\n *     website,\r\n *   }\r\n *\r\n * - Discovery (summary restaurant info)\r\n *\r\n *   Discovery is a \"lighter weight\" version of Eatery (with fewer\r\n *   attributes), and is returned in search results (with multiple\r\n *   entries).\r\n *\r\n *   Discovery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *   }\r\n */\r\nexport default class DiscoveryServiceGooglePlaces extends DiscoveryServiceAPI {\r\n\r\n  /**\r\n   * Search/retrieve nearby restaurants, returning a set of\r\n   * Discoveries (see class description).\r\n   *\r\n   * **Please Note**: this service uses named parameters.\r\n   *\r\n   * @param {[lat,lng]} loc the geo location to base the\r\n   * nearby search on.\r\n   *\r\n   * @param {number} searchText an optional search text (ex:\r\n   * restaurant name, or town, etc.).\r\n   *\r\n   * @param {number} distance the radius distance (in miles) to\r\n   * search for (1-31), DEFAULT TO 5.\r\n   *\r\n   * @param {string} minprice the minimum price range '0'-'4'\r\n   * (from most affordable to most expensive), DEFAULT TO '1'.\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure:\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveries({loc,\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    \r\n    // ***\r\n    // *** validate parameters\r\n    // ***\r\n\r\n    const check = verify.prefix('DiscoveryServiceGooglePlaces.searchDiscoveries() parameter violation: ');\r\n\r\n    check(loc,                            'loc is required ... [lat,lng]'); // TODO: verify loc is array of two numbers\r\n      \r\n    check(isString(searchText),           `supplied searchText (${searchText}) must be a string`);\r\n      \r\n    check(distance,                       'distance is required ... (1-31) miles');\r\n    check(distance>=1 && distance<=31,    `supplied distance (${distance}) must be between 1-31 miles`);\r\n      \r\n    check(minprice,                       'minprice is required ... (0-4)');\r\n    check(minprice>='0' && minprice<='4', `supplied minprice (${minprice}) must be between 0-4`);\r\n      \r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,      `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n\r\n    // ***\r\n    // *** define the selection criteria used in our GooglePlaces retrieval\r\n    // ***\r\n\r\n    // a PlaceSearchRequest\r\n    const selCrit = {\r\n      // ... supplied by client (via params)\r\n      location:      {lat: loc[0], lng: loc[1]},\r\n      radius:        miles2meters(distance),\r\n      minPriceLevel: minprice,\r\n\r\n      // ... hard coded by our \"eatery\" requirements\r\n      type:     'restaurant',\r\n    };\r\n\r\n    // ... searchText is optional\r\n    if (searchText) {\r\n      selCrit.keyword = searchText;\r\n    }\r\n\r\n\r\n    // ***\r\n    // *** issue the Google PlacesService request\r\n    // ***\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // retain _resolve/_reject in an outer scope \r\n      // ... because the SAME callback function instance is used on pagination\r\n      // ... kinda hoaky (may be a better way)\r\n      _resolve = resolve;\r\n      _reject  = reject;\r\n\r\n      try {\r\n        googlePlacesService().nearbySearch(\r\n          selCrit,\r\n          (places, status, pagination) => {\r\n            // places:     PlaceResult[]\r\n            // status:     PlacesServiceStatus\r\n            // pagination: PlaceSearchPagination ... hasNextPage(): true/false ... nextPage() with same callback\r\n\r\n            const err = checkResponseStatus(status);\r\n            if (err) {\r\n              return _reject(err);\r\n            }\r\n\r\n            // retain pagination for subsequent requests\r\n            _pagination = pagination.hasNextPage ? pagination : null;\r\n\r\n            // process results\r\n            const discoveriesJson = gp2discoveries(places, pagination);\r\n            // console.log(`xx process discovery results: `, discoveriesJson);\r\n            return _resolve(discoveriesJson);\r\n          }\r\n        );\r\n      }\r\n      catch(err) { // catch/expose internal errors in Google PlacesService\r\n        // console.log('xx searchDiscoveries: ... caught unexpected error in in Google PlacesService: ', err);\r\n        return _reject(err);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch the next-page of a previous searchDiscoveries() request.\r\n   * \r\n   * @param pagetoken the next page token (supplied by prior\r\n   * searchDiscoveries() invocation).\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure (same as searchDiscoveries()):\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveriesNextPage(pagetoken) {\r\n\r\n    const check = verify.prefix('DiscoveryServiceGooglePlaces.searchDiscoveriesNextPage() parameter violation: ');\r\n    check(pagetoken, 'pagetoken is required');\r\n    check(isString(pagetoken), `supplied pagetoken (${pagetoken}) must be a string`);\r\n    \r\n    // process any pagetoken requests\r\n    if (_pagination) {\r\n      return new Promise( (resolve, reject) => {\r\n\r\n        // retain _resolve/_reject in an outer scope \r\n        // ... because the SAME callback function instance is used on pagination\r\n        // ... kinda hoaky (may be a better way)\r\n        _resolve = resolve;\r\n        _reject  = reject;\r\n\r\n        _pagination.nextPage(); // NOTE: this uses the SAME callback in the original search (kinda weird)\r\n      });\r\n    }\r\n    else {\r\n      throw new Error('*** ERROR *** DiscoveryServiceGooglePlaces - Next page requested, when there are NO additional pages');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch (i.e. retrieve) the details of a fully populated eatery using the\r\n   * supplied eateryId.\r\n   * \r\n   * @param {string} eateryId the id for the detailed entry to retrieve\r\n   * (same id as returned in Discovery)\r\n   * \r\n   * @return {promise} a promise resolving the Eatery\r\n   */\r\n  fetchEateryDetail(eateryId) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      try {\r\n        googlePlacesService().getDetails(\r\n          {\r\n            fields: [\r\n              'place_id',\r\n              'name',\r\n              'formatted_phone_number',\r\n              'geometry',\r\n              'formatted_address',\r\n              'url',\r\n              'website',\r\n            ],\r\n            placeId: eateryId,\r\n          },\r\n          (place, status) => {\r\n            // place:   PlaceResult\r\n            // status:  PlacesServiceStatus\r\n\r\n            const err = checkResponseStatus(status);\r\n            if (err) {\r\n              return reject(err);\r\n            }\r\n\r\n            // process results\r\n            const eatery = gp2eatery(place);\r\n            // console.log(`xx fetchEateryDetail: eatery result: `, eatery);\r\n            return resolve(eatery);\r\n          }\r\n        );\r\n      }\r\n      catch(err) { // catch/expose internal errors in Google PlacesService\r\n        // console.log('xx fetchEateryDetail: ... caught unexpected error in in Google PlacesService: ', err);\r\n        return reject(err);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n} // end of ... DiscoveryServiceGooglePlaces class definition\r\n\r\n\r\n// ***\r\n// *** Retained pagination controls for subsequent page requests\r\n// ***\r\n\r\nlet _pagination = null; // type: PlaceSearchPagination (null for none)\r\nlet _resolve    = null; // active promise resolution ... kinda hoaky, but pagination callback uses SAME function instance :-(\r\nlet _reject     = null; // ditto\r\n\r\n\r\n\r\nlet _googlePlacesService = null; // lazily loaded\r\n\r\n/**\r\n * Return the Google PlacesService object.\r\n */\r\nfunction googlePlacesService() {\r\n\r\n  // use previously obtained object (if any)\r\n  if (_googlePlacesService) {\r\n    return _googlePlacesService;\r\n  }\r\n\r\n  // otherwise ... lazy load\r\n  \r\n  // NOTE: we must reference windows.google, to prevent babel \"not defined\" compiler error\r\n  const google = window.google;\r\n\r\n  if (!google) {\r\n    throw new Error('*** ERROR *** DiscoveryServiceGooglePlaces - NO google object has been defined from our initialization');\r\n  }\r\n\r\n  // create/return our service\r\n  // NOTE: we swallow visual results (intended for maps) using a dummy div (i.e. no map for me)\r\n  return _googlePlacesService = new google.maps.places.PlacesService(document.createElement('div'));\r\n}\r\n\r\n\r\n/**\r\n * Convert GooglePlaces response to a list of discoveries.\r\n * \r\n * @param {PlaceResult[]} places the GooglePlaces response.\r\n * \r\n * @param {PlaceSearchPagination} pagination the GooglePlaces response.\r\n * \r\n * @return {Object} eatery-nod data structure containing discoveries.\r\n */\r\nfunction gp2discoveries(places, pagination) {\r\n  return {\r\n    pagetoken:   pagination.hasNextPage ? 'giveMeTheNextPagePlease' : null, // null for NO additional pages\r\n    discoveries: places.map( place => gp2eatery(place) )\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert GooglePlaces response to either an eatery or discovery\r\n * object (controlled by gpResp).\r\n * \r\n * @param {PlaceResult} place the GooglePlaces response from either\r\n * searchDiscoveries() or fetchEateryDetail().\r\n * \r\n * @return {Discovery|Eatery} either a Discovery or Eatery object.\r\n */\r\nfunction gp2eatery(place) {\r\n  return {\r\n    id:      place.place_id,\r\n    name:    place.name,\r\n    phone:   place.formatted_phone_number || 'not-in-search',\r\n    loc:     {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()},\r\n    addr:    place.formatted_address || place.vicinity, // eatery (i.e. detail) vs. discovery (i.e. search index)\r\n    navUrl:  place.url     || 'not-in-search',\r\n    website: place.website || 'not-in-search',\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert supplied miles to meters.\r\n */\r\nfunction miles2meters(miles) {\r\n  return miles * 1609.34;\r\n}\r\n\r\n\r\n/**\r\n * Validate response status.\r\n */\r\nfunction checkResponseStatus(status) {\r\n  // success\r\n  if (status === 'OK' || status === 'ZERO_RESULTS') {\r\n  }\r\n  // error\r\n  else {\r\n    return new Error(`*** ERROR *** DiscoveryServiceGooglePlaces - Google Places ERROR STATUS: '${status}'`);\r\n  }\r\n}\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags';\r\nimport DiscoveryServiceGooglePlaces from './DiscoveryServiceGooglePlaces';\r\n\r\n// feature: discoveryServiceGooglePlaces\r\n//          defines the real 'discoveryService' (via the GooglePlaces API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name: 'discoveryServiceGooglePlaces',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'discoveryService': new DiscoveryServiceGooglePlaces(),\r\n    },\r\n  },\r\n\r\n});\r\n","/**\r\n * EateryServiceAPI is a \"pseudo\" interface specifying the EateryService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceAPI {\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.monitorDbEateryPool() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.addEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.removeEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import geodist          from 'geodist';\r\nimport EateryServiceAPI from '../eateryService/EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceMock is the **mock** EateryServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceMock extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = { // current \"pool\" monitor (initially a placebo) ... similar concept to production\r\n    pool:      null, // type: string\r\n    monitorCB: null, // type: client CB function\r\n    eateries:  null, // the actual set of eateries in our pool\r\n  };\r\n\r\n\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) { // ... see EateryServiceAPI\r\n\r\n    // define our initial pool of eateries (a subset of eateriesMockDB)\r\n    const eateries = initialEateryPoolIds.reduce( (hash, id) => {\r\n      hash[id] = eateriesMockDB[id];\r\n      return hash;\r\n    }, {});\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      monitorCB,\r\n      eateries,\r\n    };\r\n\r\n    // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n    // ... this mock logic is similar to that of production, but we cheat and do it to our entire DB\r\n    //     as a result it doesn't have to be done again\r\n    for (const eateryId in eateriesMockDB) {\r\n      const eatery = eateriesMockDB[eateryId];\r\n      eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n    }\r\n\r\n    // notify our supplied monitorCB\r\n    // ... NOTE: the API returns void ... it truly is NOT a promise\r\n    monitorCB(eateries);\r\n\r\n  }\r\n\r\n\r\n  addEatery(eatery) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recognize the change\r\n      // console.log(`xx addEatery: `, eatery);\r\n      this.curPoolMonitor.eateries = {\r\n        ...this.curPoolMonitor.eateries,\r\n        [eatery.id]: eatery\r\n      };\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n    });\r\n  }\r\n\r\n\r\n  removeEatery(eateryId) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n\r\n      // remove the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recoginize the change\r\n      // console.log(`xx removeEatery: ${eateryId}`);\r\n      const eateries = Object.assign({}, this.curPoolMonitor.eateries);\r\n      delete eateries[eateryId];\r\n      this.curPoolMonitor.eateries = eateries;\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n\r\n    });\r\n  }\r\n\r\n};\r\n\r\n\r\n// our initial pool of eateries (a subset of eateriesMockDB)\r\nconst initialEateryPoolIds = [\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n];\r\n\r\n// our MOCK eateries DB pool\r\nexport const eateriesMockDB = {\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\": {\r\n    \"addr\": \"2000 Lakeshore Dr Uc250, New Orleans, LA 70148, USA\",\r\n    \"id\": \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n    \"loc\": {\r\n      \"lat\": 30.02439820000001,\r\n      \"lng\": -90.0684455\r\n    },\r\n    \"name\": \"Aramark\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4274750946707028490\",\r\n    \"phone\": \"(504) 280-6079\",\r\n    \"website\": \"https://www.aramark.com/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ01VeXQymIIYRI6lnasCzx3M\": {\r\n    \"addr\": \"724 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ01VeXQymIIYRI6lnasCzx3M\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543,\r\n      \"lng\": -90.0689558\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8342834473727404323\",\r\n    \"phone\": \"(504) 522-5973\",\r\n    \"website\": \"http://www.acmeoyster.com/french-quarter/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\": {\r\n    \"addr\": \"841 Iberville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9553468,\r\n      \"lng\": -90.0698063\r\n    },\r\n    \"name\": \"Deanie's Seafood Restaurant in the French Quarter\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11356230167321196953\",\r\n    \"phone\": \"(504) 581-1316\",\r\n    \"website\": \"https://www.deanies.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\": {\r\n    \"addr\": \"900 Harrison Ave, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n    \"loc\": {\r\n      \"lat\": 30.003912,\r\n      \"lng\": -90.103667\r\n    },\r\n    \"name\": \"Mondo\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15610825929174924363\",\r\n    \"phone\": \"(504) 224-2633\",\r\n    \"website\": \"http://www.mondoneworleans.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\": {\r\n    \"addr\": \"307 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n    \"loc\": {\r\n      \"lat\": 29.9544808,\r\n      \"lng\": -90.0665677\r\n    },\r\n    \"name\": \"Café Fleur-De-Lis\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17206744602484348977\",\r\n    \"phone\": \"(504) 529-9641\",\r\n    \"website\": \"http://cafefleurdelis.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6U-QewymIIYRzP5x_fdjwEw\": {\r\n    \"addr\": \"115 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ6U-QewymIIYRzP5x_fdjwEw\",\r\n    \"loc\": {\r\n      \"lat\": 29.954424,\r\n      \"lng\": -90.0695719\r\n    },\r\n    \"name\": \"Red Fish Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5530530259171147468\",\r\n    \"phone\": \"(504) 598-1200\",\r\n    \"website\": \"http://www.redfishgrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\": {\r\n    \"addr\": \"2601 Royal St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n    \"loc\": {\r\n      \"lat\": 29.96491200000001,\r\n      \"lng\": -90.051209\r\n    },\r\n    \"name\": \"Mimi's In the Marigny\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5730797042406659357\",\r\n    \"phone\": \"(504) 872-9868\",\r\n    \"website\": \"http://mimismarigny.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\": {\r\n    \"addr\": \"6100 Hamburg St Suite A, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n    \"loc\": {\r\n      \"lat\": 30.020369,\r\n      \"lng\": -90.0767649\r\n    },\r\n    \"name\": \"Yummy Sushi\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17574456342546133286\",\r\n    \"phone\": \"(504) 309-9401\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\": {\r\n    \"addr\": \"315 S Broad Ave, New Orleans, LA 70119, USA\",\r\n    \"id\": \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636662,\r\n      \"lng\": -90.0895056\r\n    },\r\n    \"name\": \"Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3275950646514275570\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\": {\r\n    \"addr\": \"1522 Robert E Lee Blvd, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n    \"loc\": {\r\n      \"lat\": 30.0207669,\r\n      \"lng\": -90.07682419999999\r\n    },\r\n    \"name\": \"The Füd Bar\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5517334805059037538\",\r\n    \"phone\": \"(504) 309-3284\",\r\n    \"website\": \"http://www.eathappynola.com/\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\": {\r\n    \"addr\": \"19130 Rogers Ln, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n    \"loc\": {\r\n      \"lat\": 30.4735482,\r\n      \"lng\": -90.0887137\r\n    },\r\n    \"name\": \"The Chimes-Covington\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2959806024213618882\",\r\n    \"phone\": \"(985) 892-5396\",\r\n    \"website\": \"http://www.thechimes.com/the-chimes-covington\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\": {\r\n    \"addr\": \"630 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\",\r\n    \"loc\": {\r\n      \"lat\": 29.9577089,\r\n      \"lng\": -90.0645131\r\n    },\r\n    \"name\": \"Gumbo Shop\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1346846763281016242\",\r\n    \"phone\": \"(504) 525-1486\",\r\n    \"website\": \"http://gumboshop.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\": {\r\n    \"addr\": \"307 Exchange Pl, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\",\r\n    \"loc\": {\r\n      \"lat\": 29.9546927,\r\n      \"lng\": -90.067018\r\n    },\r\n    \"name\": \"Green Goddess\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1629804231325561614\",\r\n    \"phone\": \"(504) 301-3347\",\r\n    \"website\": \"http://greengoddessrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8W3hFQymIIYRQObKMMNMyRo\": {\r\n    \"addr\": \"808 Bienville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ8W3hFQymIIYRQObKMMNMyRo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9555463,\r\n      \"lng\": -90.06883859999999\r\n    },\r\n    \"name\": \"GW Fins\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1930158316525905472\",\r\n    \"phone\": \"(504) 581-3467\",\r\n    \"website\": \"http://gwfins.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\": {\r\n    \"addr\": \"125 Camp St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9520226,\r\n      \"lng\": -90.0687354\r\n    },\r\n    \"name\": \"Red Gravy\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8457149674839334858\",\r\n    \"phone\": \"(504) 561-8844\",\r\n    \"website\": \"http://redgravycafe.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\": {\r\n    \"addr\": \"70456 LA-21 E, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\",\r\n    \"loc\": {\r\n      \"lat\": 30.4537876,\r\n      \"lng\": -90.1340372\r\n    },\r\n    \"name\": \"Subway Restaurants\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5023041769576045916\",\r\n    \"phone\": \"(985) 875-0624\",\r\n    \"website\": \"http://order.subway.com/Stores/Redirect.aspx?s=28364&sa=0&f=r&utm_source=google&utm_medium=local&utm_term=0&utm_content=28364&utm_campaign=fwh-local-remote-order&cid=0:0:0:0:0:0&segment_code=0\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJDVhB0w2mIIYRZVLScBsQtTo\": {\r\n    \"addr\": \"739 Conti St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDVhB0w2mIIYRZVLScBsQtTo\",\r\n    \"loc\": {\r\n      \"lat\": 29.956247,\r\n      \"lng\": -90.067626\r\n    },\r\n    \"name\": \"Oceana Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4230305135027442277\",\r\n    \"phone\": \"(504) 525-6002\",\r\n    \"website\": \"http://www.oceanagrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJDxnIrtelIIYR8sJkRU4JuTM\": {\r\n    \"addr\": \"1732 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDxnIrtelIIYR8sJkRU4JuTM\",\r\n    \"loc\": {\r\n      \"lat\": 29.9369517,\r\n      \"lng\": -90.076805\r\n    },\r\n    \"name\": \"The Avenue Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3727020398402126578\",\r\n    \"phone\": \"(504) 586-9243\",\r\n    \"website\": \"http://theavenuepub.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJDyC9Ig6mIIYRDWmrSR08N54\": {\r\n    \"addr\": \"718 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJDyC9Ig6mIIYRDWmrSR08N54\",\r\n    \"loc\": {\r\n      \"lat\": 29.9582008,\r\n      \"lng\": -90.0652973\r\n    },\r\n    \"name\": \"Pat O'Brien's\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11400647078199388429\",\r\n    \"phone\": \"(504) 525-4823\",\r\n    \"website\": \"http://www.patobriens.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\": {\r\n    \"addr\": \"3128 Magazine St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n    \"loc\": {\r\n      \"lat\": 29.924039,\r\n      \"lng\": -90.086011\r\n    },\r\n    \"name\": \"The Rum House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8966361882979169918\",\r\n    \"phone\": \"(504) 941-7560\",\r\n    \"website\": \"http://www.therumhouse.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJFYDeXQymIIYRh1Cion6Ta9I\": {\r\n    \"addr\": \"716 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJFYDeXQymIIYRh1Cion6Ta9I\",\r\n    \"loc\": {\r\n      \"lat\": 29.954206,\r\n      \"lng\": -90.068728\r\n    },\r\n    \"name\": \"Dickie Brennan's Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15162374742576615559\",\r\n    \"phone\": \"(504) 522-2467\",\r\n    \"website\": \"http://www.dickiebrennanssteakhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\": {\r\n    \"addr\": \"72011 Holly St, Abita Springs, LA 70420, USA\",\r\n    \"id\": \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\",\r\n    \"loc\": {\r\n      \"lat\": 30.47869790000001,\r\n      \"lng\": -90.0391606\r\n    },\r\n    \"name\": \"Abita Brew Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5122493854602887915\",\r\n    \"phone\": \"(985) 892-5837\",\r\n    \"website\": \"http://www.abitabrewpub.com/\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\": {\r\n    \"addr\": \"1917 Lakeshore Dr, Mandeville, LA 70448, USA\",\r\n    \"id\": \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n    \"loc\": {\r\n      \"lat\": 30.3524862,\r\n      \"lng\": -90.0674878\r\n    },\r\n    \"name\": \"Rips On the Lake\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=6022141046362073145\",\r\n    \"phone\": \"(985) 727-2829\",\r\n    \"website\": \"http://www.ripsonthelake.com/\",\r\n    \"distance\": 23\r\n  },\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\": {\r\n    \"addr\": \"200 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9510068,\r\n      \"lng\": -90.0674083\r\n    },\r\n    \"name\": \"The Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8464113530518869241\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJT4MvDBKmIIYRFjCBCX693Yc\": {\r\n    \"addr\": \"534 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJT4MvDBKmIIYRFjCBCX693Yc\",\r\n    \"loc\": {\r\n      \"lat\": 29.955558,\r\n      \"lng\": -90.065077\r\n    },\r\n    \"name\": \"NOLA Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9790189513996316694\",\r\n    \"phone\": \"(504) 522-6652\",\r\n    \"website\": \"http://emerilsrestaurants.com/nola\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJTz6VoQumIIYRAXvVrezBp-U\": {\r\n    \"addr\": \"123 Baronne St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJTz6VoQumIIYRAXvVrezBp-U\",\r\n    \"loc\": {\r\n      \"lat\": 29.9538764,\r\n      \"lng\": -90.0716274\r\n    },\r\n    \"name\": \"Domenica\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16548408578069068545\",\r\n    \"phone\": \"(504) 648-6020\",\r\n    \"website\": \"http://www.domenicarestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\": {\r\n    \"addr\": \"1403 Washington Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9287839,\r\n      \"lng\": -90.08421849999999\r\n    },\r\n    \"name\": \"Commander's Palace\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5204633771439876795\",\r\n    \"phone\": \"(504) 899-8221\",\r\n    \"website\": \"https://www.commanderspalace.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJWegGCA6mIIYRYAiMKN4T4CM\": {\r\n    \"addr\": \"713 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJWegGCA6mIIYRYAiMKN4T4CM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95674039999999,\r\n      \"lng\": -90.06639969999999\r\n    },\r\n    \"name\": \"Antoine's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2585088030994597984\",\r\n    \"phone\": \"(504) 581-4422\",\r\n    \"website\": \"http://www.antoines.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\": {\r\n    \"addr\": \"365 Canal St Suite 220, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\",\r\n    \"loc\": {\r\n      \"lat\": 29.95115109999999,\r\n      \"lng\": -90.0653869\r\n    },\r\n    \"name\": \"Morton's The Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18112840993924552501\",\r\n    \"phone\": \"(504) 566-0221\",\r\n    \"website\": \"http://www.mortons.com/neworleans/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\": {\r\n    \"addr\": \"547 St Ann St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95826729999999,\r\n      \"lng\": -90.0629094\r\n    },\r\n    \"name\": \"Stanley Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3707774413604591373\",\r\n    \"phone\": \"(504) 587-0093\",\r\n    \"website\": \"http://stanleyrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\": {\r\n    \"addr\": \"6025 Pinnacle Pkwy, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\",\r\n    \"loc\": {\r\n      \"lat\": 30.444494,\r\n      \"lng\": -90.12936499999999\r\n    },\r\n    \"name\": \"Texas Roadhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16959746449638322522\",\r\n    \"phone\": \"(985) 867-8008\",\r\n    \"website\": \"https://www.texasroadhouse.com/restaurant-locations/louisiana/covington\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJYbYLMBimIIYR_jUx5ds4Quo\": {\r\n    \"addr\": \"536 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJYbYLMBimIIYR_jUx5ds4Quo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9632722,\r\n      \"lng\": -90.0578685\r\n    },\r\n    \"name\": \"Three Muses\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16880116870432241150\",\r\n    \"phone\": \"(504) 252-4801\",\r\n    \"website\": \"http://www.3musesnola.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\": {\r\n    \"addr\": \"801 Chartres St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9583835,\r\n      \"lng\": -90.063105\r\n    },\r\n    \"name\": \"Muriel's Jackson Square\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10215526720797373261\",\r\n    \"phone\": \"(504) 568-1885\",\r\n    \"website\": \"http://www.muriels.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\": {\r\n    \"addr\": \"6300 Argonne Blvd, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n    \"loc\": {\r\n      \"lat\": 30.004869,\r\n      \"lng\": -90.102976\r\n    },\r\n    \"name\": \"The Velvet Cactus\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4934895759665864950\",\r\n    \"phone\": \"(504) 301-2083\",\r\n    \"website\": \"http://www.thevelvetcactus.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\": {\r\n    \"addr\": \"333 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\",\r\n    \"loc\": {\r\n      \"lat\": 29.950587,\r\n      \"lng\": -90.07044619999999\r\n    },\r\n    \"name\": \"Luke\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=785714925235798997\",\r\n    \"phone\": \"(504) 378-2840\",\r\n    \"website\": \"http://www.lukeneworleans.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\": {\r\n    \"addr\": \"401 Poydras St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n    \"loc\": {\r\n      \"lat\": 29.949065,\r\n      \"lng\": -90.06708809999999\r\n    },\r\n    \"name\": \"Mother's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2279995583957645892\",\r\n    \"phone\": \"(504) 523-9656\",\r\n    \"website\": \"http://www.mothersrestaurant.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\": {\r\n    \"addr\": \"613 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9575423,\r\n      \"lng\": -90.0652683\r\n    },\r\n    \"name\": \"The Court of Two Sisters\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18300891940711883251\",\r\n    \"phone\": \"(504) 522-7261\",\r\n    \"website\": \"http://www.courtoftwosisters.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJi2AxW3SmIIYRmML7jsbqtb8\": {\r\n    \"addr\": \"701 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJi2AxW3SmIIYRmML7jsbqtb8\",\r\n    \"loc\": {\r\n      \"lat\": 29.947316,\r\n      \"lng\": -90.07156100000002\r\n    },\r\n    \"name\": \"Herbsaint\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=13814205570552152728\",\r\n    \"phone\": \"(504) 524-4114\",\r\n    \"website\": \"http://www.herbsaint.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJiUWE9A2mIIYRngo31C8qPSw\": {\r\n    \"addr\": \"416 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJiUWE9A2mIIYRngo31C8qPSw\",\r\n    \"loc\": {\r\n      \"lat\": 29.955348,\r\n      \"lng\": -90.0655\r\n    },\r\n    \"name\": \"K-Paul's Louisiana Kitchen\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3187750496160385694\",\r\n    \"phone\": \"(504) 596-2530\",\r\n    \"website\": \"http://www.kpauls.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJnUfNIiOmIIYRibUzWhx-PBg\": {\r\n    \"addr\": \"2440 Chartres St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJnUfNIiOmIIYRibUzWhx-PBg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636919,\r\n      \"lng\": -90.0529387\r\n    },\r\n    \"name\": \"New Orleans Cake Café & Bakery\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1746409415750432137\",\r\n    \"phone\": \"(504) 943-0010\",\r\n    \"website\": \"http://www.nolacakes.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\": {\r\n    \"addr\": \"1202 N Hwy 190, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\",\r\n    \"loc\": {\r\n      \"lat\": 30.44807140000001,\r\n      \"lng\": -90.0815896\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5009389114364395920\",\r\n    \"phone\": \"(985) 246-6155\",\r\n    \"website\": \"http://www.acmeoyster.com/\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\": {\r\n    \"addr\": \"800 Tchoupitoulas St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\",\r\n    \"loc\": {\r\n      \"lat\": 29.944616,\r\n      \"lng\": -90.067286\r\n    },\r\n    \"name\": \"Emeril's New Orleans\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=7688214774754717053\",\r\n    \"phone\": \"(504) 528-9393\",\r\n    \"website\": \"http://emerilsrestaurants.com/emerils-new-orleans\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJpdlCODylIIYRyeE-wYHtahE\": {\r\n    \"addr\": \"626 S Carrollton Ave, New Orleans, LA 70118, USA\",\r\n    \"id\": \"ChIJpdlCODylIIYRyeE-wYHtahE\",\r\n    \"loc\": {\r\n      \"lat\": 29.94384989999999,\r\n      \"lng\": -90.1339165\r\n    },\r\n    \"name\": \"The Camellia Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1255076587724792265\",\r\n    \"phone\": \"(504) 309-2679\",\r\n    \"website\": \"https://www.facebook.com/pages/Camellia-Grill/104113072958918?rf=250301408353469\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\": {\r\n    \"addr\": \"1201 Royal St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n    \"loc\": {\r\n      \"lat\": 29.96209660000001,\r\n      \"lng\": -90.06116809999999\r\n    },\r\n    \"name\": \"Verti Marte\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1650707284474479029\",\r\n    \"phone\": \"(504) 525-4767\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\": {\r\n    \"addr\": \"144 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9545625,\r\n      \"lng\": -90.0691287\r\n    },\r\n    \"name\": \"Bourbon House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11554767571130254419\",\r\n    \"phone\": \"(504) 522-0111\",\r\n    \"website\": \"http://www.bourbonhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJt2f3WgymIIYRb1B1S_gWc3I\": {\r\n    \"addr\": \"201 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJt2f3WgymIIYRb1B1S_gWc3I\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543868,\r\n      \"lng\": -90.0683629\r\n    },\r\n    \"name\": \"Mr. B's Bistro\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8246960598319190127\",\r\n    \"phone\": \"(504) 523-2078\",\r\n    \"website\": \"http://www.mrbsbistro.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\": {\r\n    \"addr\": \"717 Orleans St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n    \"loc\": {\r\n      \"lat\": 29.95864749999999,\r\n      \"lng\": -90.0645742\r\n    },\r\n    \"name\": \"Roux on Orleans Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10507446837846879593\",\r\n    \"phone\": \"(504) 571-4604\",\r\n    \"website\": \"http://www.bourbonorleans.com/restaurant-dining.php\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJuwqeNamlIIYRiCYSjKciG5c\": {\r\n    \"addr\": \"4905 Freret St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJuwqeNamlIIYRiCYSjKciG5c\",\r\n    \"loc\": {\r\n      \"lat\": 29.935024,\r\n      \"lng\": -90.1074596\r\n    },\r\n    \"name\": \"Cure\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10888334627103188616\",\r\n    \"phone\": \"(504) 302-2357\",\r\n    \"website\": \"http://curenola.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\": {\r\n    \"addr\": \"800 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\",\r\n    \"loc\": {\r\n      \"lat\": 29.945088,\r\n      \"lng\": -90.069051\r\n    },\r\n    \"name\": \"Pêche Seafood Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9665197064724161172\",\r\n    \"phone\": \"(504) 522-1744\",\r\n    \"website\": \"https://www.pecherestaurant.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\": {\r\n    \"addr\": \"201 Julia St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9444575,\r\n      \"lng\": -90.0647824\r\n    },\r\n    \"name\": \"Mulate's | The Original Cajun Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2325907536557379240\",\r\n    \"phone\": \"(504) 522-1492\",\r\n    \"website\": \"https://www.mulates.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJzXUQJhimIIYR7wBw72LWWZs\": {\r\n    \"addr\": \"508 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJzXUQJhimIIYR7wBw72LWWZs\",\r\n    \"loc\": {\r\n      \"lat\": 29.962781,\r\n      \"lng\": -90.057801\r\n    },\r\n    \"name\": \"The Maison\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11194214069218312431\",\r\n    \"phone\": \"(504) 371-5543\",\r\n    \"website\": \"http://www.maisonfrenchmen.com/\",\r\n    \"distance\": 4\r\n  },\r\n};\r\n\r\n\r\n// our discovery list (used by DiscoveryServiceMock)\r\nexport const discoverySearchPage1 = {\r\n  pagetoken: 'THERE_IS_MORE',\r\n  discoveries: []\r\n};\r\nexport const discoverySearchPage2 = {\r\n  pagetoken: null, // no mo pages\r\n  discoveries: []\r\n};\r\nconst discoveryPagingDivision_eateryId = \"ChIJTz6VoQumIIYRAXvVrezBp-U\";\r\nlet divisionHit = false;\r\nfor (const eateryId in eateriesMockDB) {\r\n  const eatery = eateriesMockDB[eateryId];\r\n  if (eatery.id === discoveryPagingDivision_eateryId)\r\n    divisionHit = true;\r\n  if (!divisionHit) \r\n    discoverySearchPage1.discoveries.push(eatery);\r\n  else\r\n    discoverySearchPage2.discoveries.push(eatery);\r\n}\r\n","import DiscoveryServiceAPI from '../discoveryService/DiscoveryServiceAPI';\r\nimport verify              from 'util/verify';\r\nimport isString            from 'lodash.isstring';\r\n\r\nimport {discoverySearchPage1,   // NOTE: tight coupling with EateryServiceMock (IT's OK ... were a MOCK :-)\r\n        discoverySearchPage2,\r\n        eateriesMockDB}    from '../../../eateries/subFeatures/eateryServiceMock/EateryServiceMock';\r\n\r\n/**\r\n * DiscoveryServiceMock is the **mock** DiscoveryServiceAPI\r\n * derivation.\r\n *\r\n * ... see DiscoveryServiceAPI for complete description\r\n */\r\nexport default class DiscoveryServiceMock extends DiscoveryServiceAPI {\r\n\r\n  searchDiscoveries({loc,           // ... see DiscoveryServiceAPI\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    \r\n    // ***\r\n    // *** validate parameters\r\n    // ***\r\n\r\n    // NOTE: same as production\r\n    const check = verify.prefix('DiscoveryServiceMock.searchDiscoveries() parameter violation: ');\r\n\r\n    check(loc,                            'loc is required ... [lat,lng]'); // TODO: verify loc is array of two numbers\r\n      \r\n    check(isString(searchText),           `supplied searchText (${searchText}) must be a string`);\r\n      \r\n    check(distance,                       'distance is required ... (1-31) miles');\r\n    check(distance>=1 && distance<=31,    `supplied distance (${distance}) must be between 1-31 miles`);\r\n      \r\n    check(minprice,                       'minprice is required ... (0-4)');\r\n    check(minprice>='0' && minprice<='4', `supplied minprice (${minprice}) must be between 0-4`);\r\n      \r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,      `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx RETURNING following discoverySearch: `, discoverySearchPage1);\r\n      return resolve(discoverySearchPage1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  searchDiscoveriesNextPage(pagetoken) { // ... see DiscoveryServiceAPI\r\n\r\n    // NOTE: same as production\r\n    const check = verify.prefix('DiscoveryServiceMock.searchDiscoveriesNextPage() parameter violation: ');\r\n    check(pagetoken, 'pagetoken is required');\r\n    check(isString(pagetoken), `supplied pagetoken (${pagetoken}) must be a string`);\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx RETURNING following discoverySearch: `, discoverySearchPage2);\r\n      return resolve(discoverySearchPage2);\r\n    });\r\n  }\r\n\r\n\r\n  fetchEateryDetail(eateryId) { // ... see DiscoveryServiceAPI\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx fetchEateryDetail(${eateryId}) ... returning: `, eateriesMockDB[eateryId]);\r\n      return resolve(eateriesMockDB[eateryId]);\r\n    });\r\n\r\n  }\r\n\r\n} // end of ... DiscoveryServiceMock class definition\r\n","import {createFeature}      from 'feature-u';\r\nimport featureFlags         from 'featureFlags';\r\nimport DiscoveryServiceMock from './DiscoveryServiceMock';\r\n\r\n// feature: discoveryServiceMock\r\n//          defines the mock 'discoveryService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name: 'discoveryServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'discoveryService': new DiscoveryServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'eateries';\r\n","import {combineReducers}     from 'redux';\r\nimport {reducerHash}         from 'astx-redux-util';\r\nimport {expandWithFassets}   from 'feature-u';\r\nimport {slicedReducer}       from 'feature-redux';\r\nimport {createSelector}      from 'reselect';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\nimport _eateriesAct          from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our eateries process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is used NOT for app injection,\r\n//       but RATHER to delay expansion (avoiding circular dependencies\r\n//       in selector access from eateryFilterFormMeta.js)\r\n//       >>> subsequently, fassets is now used to access fassets.actions.signOut action\r\nconst reducer = slicedReducer(`view.${_eateries}`, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // raw eatery entries synced from our realtime DB\r\n  dbPool: reducerHash({\r\n    [_eateriesAct.dbPool.changed]: (state, action) => action.eateries,\r\n    [fassets.actions.signOut]:     (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n  listView: combineReducers({\r\n\r\n    // standard iForm for our EateryFilterForm\r\n    filterForm: eateryFilterFormMeta.registrar.formReducer(),\r\n\r\n    // filter used in visualizing listView\r\n    filter: reducerHash({\r\n      [_eateriesAct.filterForm.process]: (state, action) => action.domain,\r\n      [fassets.actions.signOut]:         (state, action) => ({distance: null, sortOrder: 'name'}), // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n    }, { // initialState\r\n      distance: null,    // distance in miles (default: null - for any distance)\r\n      sortOrder: 'name', // sortOrder: 'name'/'distance'\r\n    }),\r\n\r\n  }),\r\n\r\n  // selectedEateryId: eateryId ... id of selected eatery to \"display details for\" (null for none)\r\n  selectedEateryId: reducerHash({\r\n    [_eateriesAct.viewDetail]:       (state, action) => action.eateryId,\r\n    [_eateriesAct.viewDetail.close]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n  // spin: string ... msg to display when spin operation is in place, null for spin NOT in place\r\n  spin: reducerHash({\r\n    [_eateriesAct.spin]:          (state, action) => action.spinMsg,\r\n    [_eateriesAct.spin.complete]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                   /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState            = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;       // ... concise alias (used internally)\r\n\r\nexport const getDbPool           = (appState) => gfs(appState).dbPool;\r\n\r\nexport const isFormFilterActive  = (appState) => gfs(appState).listView.filterForm ? true : false;\r\nexport const getFormFilter       = (appState) => gfs(appState).listView.filterForm;\r\n\r\nexport const getListViewFilter   = (appState) => gfs(appState).listView.filter;\r\n\r\nexport const getFilteredEateries  = createSelector(\r\n  getDbPool,\r\n  getListViewFilter,\r\n  (dbPool, filter) => {\r\n\r\n    if (!dbPool) {\r\n      return null; // NO dbPool yet ... waiting for pool entries\r\n    }\r\n\r\n    // apply filter to dbPool\r\n    // filteredEateries: Eatery[]\r\n    const entries = Object.values(dbPool)\r\n                          .filter(entry => { // filter entries\r\n                            // apply distance (when supplied in filter)\r\n                            return filter.distance ? entry.distance <= filter.distance : true;\r\n                          })\r\n                          .sort((e1, e2) => ( // sort entries ... order by:\r\n                            filter.sortOrder==='distance' ? e1.distance-e2.distance : 0 || // distance (when requested)\r\n                            e1.name.localeCompare(e2.name) // name - either secondary (within distance), or primary (when no distance)\r\n                          ));\r\n\r\n    return entries;\r\n  }\r\n);\r\n\r\nexport const getSelectedEatery   = (appState) => {\r\n  const  selectedEateryId = gfs(appState).selectedEateryId;\r\n  return selectedEateryId ? gfs(appState).dbPool[selectedEateryId] : null;\r\n};\r\n\r\nexport const getSpinMsg          = (appState) => gfs(appState).spin;\r\n","import * as Yup          from 'yup';\r\nimport IFormMeta         from 'util/iForms/IFormMeta';\r\nimport _eateriesAct      from './actions';\r\nimport * as _eateriesSel from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nconst distanceMsg  = 'Miles should be a positive number (when supplied)';\r\nconst sortOrderMsg = \"Sort order should be either 'name' or 'distance'\";\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Pool Filter',\r\n  formSchema: Yup.object().shape({\r\n    // distance is an optional positive number (or null for any distance)\r\n    // NOTE: could NOT get default() to work, but transform() to null, works in conjunction with .nullable()\r\n    distance:   Yup.number().label('Miles').typeError(distanceMsg)  .nullable() .transform(val => val || null) .positive(distanceMsg),\r\n    sortOrder:  Yup.string().label('Sort') .typeError(sortOrderMsg) .required() .matches(/(name|distance)/, sortOrderMsg),\r\n\r\n  }),\r\n  formActionsAccessor: ()         => _eateriesAct.filterForm,\r\n  formStateSelector:   (appState) => _eateriesSel.getFormFilter(appState),\r\n});\r\n","import {generateActions}     from 'action-u';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\n\r\nexport default generateActions.root({\r\n\r\n  [_eateries]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n\r\n    dbPool: {\r\n\r\n      changed: { // actions.dbPool.changed(eateries): Action\r\n                 // > eateries changed: eateries: { eateryKey1: {id, name, addr, phone, loc, navUrl, website}, eateryKey2: {...}}\r\n                 actionMeta: {\r\n                   traits: ['eateries'],\r\n                 },\r\n      },\r\n\r\n\r\n      add: { // actions.dbPool.add(eateryId): Action\r\n             // > add eatery (from eateryId) to pool\r\n             actionMeta: {\r\n               traits: ['eateryId'],\r\n             },\r\n      \r\n        eateryDetail: { // actions.dbPool.add.eateryDetail(eatery): Action\r\n                        // > add supplied eatery to our pool\r\n                        actionMeta: {\r\n                          traits: ['eatery'],\r\n                        },\r\n      \r\n          fail: { // actions.dbPool.add.eateryDetail.fail(eateryId, err): Action\r\n                  // > in process of adding eatery, detail retrieval failed\r\n                  actionMeta: {\r\n                    traits: ['eateryId', 'err'],\r\n                  },\r\n          },\r\n        },\r\n      \r\n      },\r\n\r\n      \r\n      remove: { // actions.dbPool.remove(eateryId): Action\r\n                // > remove eatery (from eateryId) to pool\r\n                actionMeta: {\r\n                  traits: ['eateryId'],\r\n                },\r\n      },\r\n\r\n    },\r\n\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    filterForm: eateryFilterFormMeta.registrar.formActionGenesis(),\r\n\r\n    viewDetail: { // actions.viewDetail(eateryId): Action\r\n                  // > view eatery details (from supplied eateryId)\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n\r\n      close: { // actions.viewDetail.close(): Action\r\n               // > close eatery details\r\n               actionMeta: {},\r\n      },\r\n\r\n    },\r\n\r\n\r\n    spin: { // actions.spin(): Action\r\n            // > randomly select a date night eatery\r\n            actionMeta: {},\r\n\r\n      complete: { // actions.spin.complete(eateryId): Action\r\n                  // > spin complete, with supplied eateryId selected\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n      },\r\n\r\n    },\r\n\r\n\r\n  },\r\n});\r\n","import {createLogic}        from 'redux-logic';\r\nimport eateryFilterFormMeta from './eateryFilterFormMeta';\r\nimport _eateries            from './featureName';\r\nimport * as _eateriesSel    from './state';\r\nimport _eateriesAct         from './actions';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport discloseError        from 'util/discloseError';\r\nimport {toast}              from 'util/notify';\r\nimport EateryServiceMock    from './subFeatures/eateryServiceMock/EateryServiceMock';\r\n\r\n\r\n/**\r\n * Our persistent monitor that manages various aspects of a given pool.\r\n */\r\nlet curPoolMonitor = {   // current \"pool\" monitor (initially a placebo)\r\n  pool:   null,          // type: string\r\n  wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n};\r\n\r\nlet   originalEateryService = null;\r\nconst mockEateryService     = new EateryServiceMock();\r\n\r\n\r\n/**\r\n * Setup any \"guest\" user to use a \"mocked\" eatery service backed by\r\n * an in-memory DB.\r\n */\r\nexport const setupGuestUser = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.setupGuestUser`,\r\n  type: String(fassets.actions.signIn.complete),\r\n\r\n  transform({getState, action, fassets}, next) { // transform() so as to swap out service quickly (before it is needed)\r\n\r\n    if (action.user.isGuest()) {\r\n\r\n      // swap out our eatery service with a mocked in-memory source\r\n      originalEateryService = fassets.eateryService;\r\n      fassets.eateryService = mockEateryService; // AI: we are mutating fassets ... may be a  code smell\r\n\r\n      // inform user of what is going on\r\n      toast({ msg:'as a \"guest\" user, your Eatery pool is a \"mocked\" in-memory data source'});\r\n    }\r\n\r\n    next(action);\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Tear-down any \"guest\" user, reverting to the original eatery\r\n * service.\r\n */\r\nexport const tearDownGuestUser = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.tearDownGuestUser`,\r\n  type: String(fassets.actions.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) { // process() so as to allow the action to be supplemented with user\r\n    if (action.user.isGuest()) {\r\n      // revert our eatery service to the original service\r\n      fassets.eateryService = originalEateryService; // AI: we are mutating fassets ... may be a  code smell\r\n    }\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * This is the primary logic module, which initially loads (and\r\n * monitors changes) in the real-time DB for the pool eateries of our\r\n * active user.\r\n *\r\n * The key that drives this is the active User.pool identifier.\r\n * Therefore, we trigger the process off of the 'userProfileChanged'\r\n * action (where the User.pool is obtained).  This action is emitted:\r\n *  - on initial startup of our app\r\n *  - and when the User profile changes (TODO: a future enhancement of the app)\r\n */\r\nexport const monitorDbPool = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name:        `${_eateries}.monitorDbPool`,\r\n  type:        String(fassets.actions.userProfileChanged), // NOTE: action contains: User object (where we obtain the pool)\r\n  warnTimeout: 0, // long-running logic\r\n\r\n  validate({getState, action, fassets}, allow, reject) {\r\n\r\n    // no-op if we are already monitoring this same pool\r\n    if (action.user.pool === curPoolMonitor.pool) {\r\n      reject(action); // other-logic/middleware/reducers: YES, self's process(): NO\r\n      return;\r\n    }\r\n\r\n    // allow self's process()\r\n    allow(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // close prior monitor\r\n    curPoolMonitor.wrapUp();\r\n\r\n    // create new monitor (retaining needed info for subsequent visibility)\r\n    curPoolMonitor = {\r\n      pool:   action.user.pool,\r\n      wrapUp() {\r\n        done();\r\n      }\r\n    };\r\n\r\n    // register our real-time DB listener for the set of eateries in our pool\r\n    fassets.eateryService.monitorDbEateryPool(\r\n      action.user.pool,\r\n      fassets.sel.getLocation(getState()),\r\n      (eateries) => {\r\n\r\n        // broadcast a notification of a change in our eateries (or the initial population)\r\n        dispatch( _eateriesAct.dbPool.changed(eateries) );\r\n\r\n      });\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Close down any real-time monitor of our real-time DB pool (at sign-out time).\r\n */\r\nexport const closeDbPool = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.closeDbPool`,\r\n  type: String(fassets.actions.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // close prior monitor\r\n    curPoolMonitor.wrapUp();\r\n\r\n    // create new placebo monitor\r\n    curPoolMonitor = {\r\n      pool:   null,          // type: string\r\n      wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n    };\r\n\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Default the actions.filterForm.open() domain param from the\r\n * appState filter.\r\n */\r\nexport const defaultFilter = createLogic({\r\n\r\n  name: `${_eateries}.defaultFilter`,\r\n  type: String(_eateriesAct.filterForm.open),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    if (!action.domain) {\r\n      action.domain = _eateriesSel.getListViewFilter(getState());\r\n    }\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Process eatery filter.\r\n */\r\nexport const processFilter = createLogic({\r\n\r\n  name: `${_eateries}.processFilter`,\r\n  type: String(_eateriesAct.filterForm.process),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // console.log(`xx logic: eatery.processFilter, action is: `, action);\r\n    //   action: {\r\n    //     \"domain\": {\r\n    //       \"distance\":  6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //     \"type\": \"eateries.filter.process\",\r\n    //     \"values\": {\r\n    //       \"distance\": 6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //   }\r\n    \r\n    // show our view\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n\r\n    // close eatery form filter\r\n    dispatch( _eateriesAct.filterForm.close() );\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const spin = createLogic({\r\n\r\n  name: `${_eateries}.spin`,\r\n  type: String(_eateriesAct.spin),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    const appState         = getState();\r\n    const filteredEateries = _eateriesSel.getFilteredEateries(appState);\r\n\r\n    // supplement action with spinMsg\r\n    action.spinMsg = `... selecting your eatery from ${filteredEateries.length} entries!`;\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    setTimeout( () => {\r\n\r\n      const appState = getState();\r\n      const filteredEateries  = _eateriesSel.getFilteredEateries(appState);\r\n\r\n      // algorithm from MDN ... https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\n      const min      = Math.ceil(0);                        // min is inclusive (in usage below)\r\n      const max      = Math.floor(filteredEateries.length); // max is exclusive (in usage below)\r\n      const randIndx = Math.floor(Math.random() * (max - min)) + min;\r\n      \r\n      const randomEateryId = filteredEateries[randIndx].id;\r\n\r\n      dispatch( _eateriesAct.spin.complete(randomEateryId) );\r\n      done();\r\n\r\n    }, 1200);\r\n\r\n  },\r\n\r\n});\r\n\r\nexport const spinComplete = createLogic({\r\n\r\n  name: `${_eateries}.spinComplete`,\r\n  type: String(_eateriesAct.spin.complete),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    dispatch( _eateriesAct.viewDetail(action.eateryId) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const addToPoolPrep = createLogic({\r\n\r\n  name: `${_eateries}.addToPoolPrep`,\r\n  type: String(_eateriesAct.dbPool.add),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.fetchEateryDetail(action.eateryId)\r\n      .then(eatery => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail(eatery) );\r\n        done();\r\n      })\r\n      .catch(err => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail.fail(action.eateryId, err) );\r\n        done();\r\n      });\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\nexport const addToPool = createLogic({\r\n\r\n  name: `${_eateries}.addToPool`,\r\n  type: String(_eateriesAct.dbPool.add.eateryDetail),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // add the new eatery\r\n    fassets.eateryService.addEatery(action.eatery)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const removeFromPool = createLogic({\r\n\r\n  name: `${_eateries}.removeFromPool`,\r\n  type: String(_eateriesAct.dbPool.remove),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // remove the supplied eatery\r\n    fassets.eateryService.removeEatery(action.eateryId)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic (accumulated in index.js)\r\n// ... named exports (above) are used by unit tests :-)\r\nexport default expandWithFassets( (fassets) => [\r\n  setupGuestUser(fassets),\r\n  tearDownGuestUser(fassets),\r\n  monitorDbPool(fassets),\r\n  closeDbPool(fassets),\r\n  ...eateryFilterFormMeta.registrar.formLogic(), // inject the standard eatery filter form-based logic modules\r\n  defaultFilter,\r\n  processFilter,\r\n  spin,\r\n  spinComplete,\r\n  addToPoolPrep,\r\n  addToPool,\r\n  removeFromPool,\r\n] );\r\n","import React,\r\n       {useCallback}    from 'react';\r\nimport PropTypes        from 'prop-types';\r\n\r\nimport {useFassets}   from 'feature-u';\r\nimport {useSelector,\r\n        useDispatch}  from 'react-redux'\r\n\r\nimport {withStyles}     from '@material-ui/core/styles';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\n\r\nimport _eateriesAct     from '../actions';\r\n\r\nimport CloseIcon        from '@material-ui/icons/Close';\r\nimport Dialog           from '@material-ui/core/Dialog';\r\nimport DialogActions    from '@material-ui/core/DialogActions';\r\nimport DialogContent    from '@material-ui/core/DialogContent';\r\nimport DialogTitle      from '@material-ui/core/DialogTitle';\r\nimport IconButton       from '@material-ui/core/IconButton';\r\nimport Link             from '@material-ui/core/Link';\r\nimport LinkIcon         from '@material-ui/icons/Link';\r\nimport List             from '@material-ui/core/List';\r\nimport ListItem         from '@material-ui/core/ListItem';\r\nimport ListItemIcon     from '@material-ui/core/ListItemIcon';\r\nimport ListItemText     from '@material-ui/core/ListItemText';\r\nimport NavigationIcon   from '@material-ui/icons/Navigation';\r\nimport PhoneIcon        from '@material-ui/icons/Phone';\r\nimport SpinIcon         from '@material-ui/icons/SwapCalls';\r\nimport Typography       from '@material-ui/core/Typography';\r\nimport {TransitionZoom} from 'util/Transition';\r\n\r\nconst styles = theme => ({\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  bottomBar: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * EateryDetailScreen displaying the details of a given eatery.\r\n */\r\nfunction EateryDetailScreen({eatery, fullScreen, classes}) {\r\n\r\n  const fassets = useFassets();\r\n  const curUser = useSelector((appState) => fassets.sel.curUser(appState), [fassets]);\r\n\r\n  const dispatch    = useDispatch();\r\n  const handleClose = useCallback(() => dispatch( _eateriesAct.viewDetail.close() ), []);\r\n  const handleSpin  = useCallback(() => dispatch( _eateriesAct.spin() ),             []);\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={handleClose}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        \r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery\r\n          <Typography color=\"inherit\" inline noWrap>\r\n            &nbsp;({curUser.pool})\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <IconButton color=\"inherit\" onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <List>\r\n\r\n          <ListItem>\r\n            <ListItemText \r\n                primary={<Typography variant=\"h6\">{eatery.name}</Typography>}/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <NavigationIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.navUrl}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.addr}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <PhoneIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={`tel:${eatery.phone}`}\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.phone}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n          {eatery.website !== 'not-in-search' &&\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <LinkIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.website}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    Web Site\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n          }\r\n\r\n        </List>\r\n      </DialogContent>\r\n\r\n      <DialogActions className={classes.bottomBar}>\r\n        <IconButton color=\"inherit\" onClick={handleSpin}>\r\n          <SpinIcon/>\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin Again</Typography>\r\n        </IconButton>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nEateryDetailScreen.propTypes = {\r\n  eatery:     PropTypes.object.isRequired,\r\n};\r\n\r\nconst EateryDetailScreenWithStyles = withStyles(styles)(EateryDetailScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(EateryDetailScreenWithStyles);\r\n","import React,\r\n       {useCallback}       from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}       from 'react-redux'\r\n\r\nimport _eateriesAct        from '../actions';\r\nimport * as _eateriesSel   from '../state';\r\n\r\nimport Typography          from '@material-ui/core/Typography';\r\nimport ListItemIcon        from '@material-ui/core/ListItemIcon';\r\nimport RestaurantIcon      from '@material-ui/icons/Restaurant';\r\nimport List                from '@material-ui/core/List';\r\nimport ListItem            from '@material-ui/core/ListItem';\r\nimport ListItemText        from '@material-ui/core/ListItemText';\r\n\r\nimport EateryDetailScreen  from './EateryDetailScreen';\r\nimport SplashScreen        from 'util/SplashScreen';\r\n\r\n\r\n/**\r\n * EateriesListScreen displaying a set of eateries (possibly filtered).\r\n */\r\nexport default function EateriesListScreen({classes}) {\r\n\r\n  const filteredEateries = useSelector((appState) => _eateriesSel.getFilteredEateries(appState), []);\r\n  const filter           = useSelector((appState) => _eateriesSel.getListViewFilter(appState),   []);\r\n  const selectedEatery   = useSelector((appState) => _eateriesSel.getSelectedEatery(appState),   []);\r\n  const spinMsg          = useSelector((appState) => _eateriesSel.getSpinMsg(appState),          []);\r\n\r\n  const dispatch    = useDispatch();\r\n  const showDetail  = useCallback((eateryId) => {\r\n    //console.log(`xx showDetail for ${eateryId}`);\r\n    dispatch( _eateriesAct.viewDetail(eateryId) );\r\n  }, []);\r\n\r\n  if (!filteredEateries) {\r\n    return <SplashScreen msg=\"... waiting for pool entries\"/>;\r\n  }\r\n\r\n  let currentDistance = -1;\r\n\r\n  function listContent() {\r\n    const content = [];\r\n    filteredEateries.forEach( eatery => {\r\n      // optionally supply sub-header when ordered by distance\r\n      if (filter.sortOrder === 'distance' && eatery.distance !== currentDistance) {\r\n        currentDistance = eatery.distance;\r\n        // ?? additional style: ... NOTE have not yet seen this rendering\r\n        //    - ? red color (or secondary\r\n        //    - ? format \"(as the crow flies)\" on second line -and- smaller\r\n        const subTxt = `${currentDistance} mile${currentDistance===1?'':'s'} (as the crow flies)`;\r\n        content.push((\r\n          <ListItem key={`subheader${currentDistance}`}\r\n                    dense\r\n                    button\r\n                    divider>\r\n            <ListItemText primary={subTxt}/>\r\n          </ListItem>\r\n        ));\r\n      }\r\n      // supply our primary entry content\r\n      content.push((\r\n        <ListItem key={eatery.id}\r\n                  dense\r\n                  button\r\n                  divider\r\n                  onClick={()=>showDetail(eatery.id)}>\r\n          <ListItemIcon>\r\n            <RestaurantIcon/>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText \r\n              primary={\r\n                <Typography variant=\"h6\"\r\n                  noWrap>\r\n                  {eatery.name}\r\n                  <Typography inline noWrap>\r\n                    &nbsp;({`${eatery.distance} mile${currentDistance===1?'':'s'}`})\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {eatery.addr}\r\n                </Typography>\r\n              }/>\r\n        </ListItem>\r\n      ));\r\n    });\r\n    return content;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        { listContent() }\r\n      </List>\r\n      {spinMsg        && <SplashScreen msg={spinMsg}/>}\r\n      {selectedEatery && <EateryDetailScreen eatery={selectedEatery}/>}\r\n    </>\r\n  );\r\n}\r\n","import React                 from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}         from 'react-redux'\r\n\r\nimport {withStyles}          from '@material-ui/core/styles';\r\nimport withMobileDialog      from '@material-ui/core/withMobileDialog';\r\n\r\nimport eateryFilterFormMeta  from '../eateryFilterFormMeta';\r\nimport ITextField            from 'util/iForms/comp/ITextField';\r\nimport IRadioField           from 'util/iForms/comp/IRadioField';\r\n\r\nimport Button                from '@material-ui/core/Button';\r\nimport CloseIcon             from '@material-ui/icons/Close';\r\nimport Dialog                from '@material-ui/core/Dialog';\r\nimport DialogContent         from '@material-ui/core/DialogContent';\r\nimport DialogContentText     from '@material-ui/core/DialogContentText';\r\nimport DialogTitle           from '@material-ui/core/DialogTitle';\r\nimport FilterIcon            from '@material-ui/icons/FilterList';\r\nimport FormHelperText        from '@material-ui/core/FormHelperText';\r\nimport Grid                  from '@material-ui/core/Grid';\r\nimport IconButton            from '@material-ui/core/IconButton';\r\nimport InProgress            from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport {TransitionSlide}     from 'util/Transition';\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n\r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * EateryFilterScreen: gather filter information (selection criteria) \r\n * for our eatery pool view.\r\n */\r\nfunction EateryFilterScreen({fullScreen, classes}) {\r\n\r\n  const dispatch  = useDispatch();\r\n  const formState = useSelector((appState) => eateryFilterFormMeta.formStateSelector(appState), []);\r\n\r\n  const iForm = eateryFilterFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel       = iForm.getLabel();\r\n  const formInProcess   = iForm.inProcess();\r\n  const sortOrderRadioProps = {\r\n    fieldName: 'sortOrder',\r\n    iForm,\r\n  };\r\n\r\n  const formErrMsg = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={iForm.handleClose}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionSlide}>\r\n\r\n      <form onSubmit={iForm.handleProcess}>\r\n\r\n        <DialogTitle disableTypography className={classes.titleBar}>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            {formLabel}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={iForm.handleClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText className={classes.entry}>\r\n            filter your pool with these settings ...\r\n          </DialogContentText>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"distance\"\r\n                        iForm={iForm}\r\n                        autoFocus\r\n                        type=\"number\"\r\n                        helperText=\"prune entries within this distance (leave blank to view entire pool)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <IRadioField {...sortOrderRadioProps}\r\n                         row\r\n                         helperText=\"sort entries by Restaurant (name) or Distance\">\r\n              <IRadioField.Op value=\"name\"     label=\"Restaurant\" {...sortOrderRadioProps}/>\r\n              <IRadioField.Op value=\"distance\" label=\"Distance\" {...sortOrderRadioProps}/>\r\n            </IRadioField>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <FilterIcon className={classes.icon}/>\r\n                Filter Pool\r\n              </Button>\r\n            </CenterItems>\r\n          </div>\r\n\r\n          {formErrMsg && (\r\n             <div className={classes.entry}>\r\n               <FormHelperText error>{formErrMsg}</FormHelperText>\r\n             </div>\r\n           )}\r\n\r\n          {formInProcess && (\r\n             <div className={classes.entry}>\r\n               <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n             </div>\r\n           )}\r\n\r\n        </DialogContent>\r\n\r\n      </form>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst EateryFilterScreenWithStyles = withStyles(styles)(EateryFilterScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(EateryFilterScreenWithStyles);\r\n","import React               from 'react';\r\nimport * as _eateriesSel   from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\nimport featureName         from './featureName';\r\nimport EateriesListScreen  from './comp/EateriesListScreen';\r\nimport EateryFilterScreen  from './comp/EateryFilterScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default [\r\n\r\n  featureRoute({\r\n    priority: PRIORITY.HIGH,\r\n    content({fassets, appState}) {\r\n      // display EateryFilterScreen, when form is active (accomplished by our logic)\r\n      // ... this is done as a priority route, because this screen can be used to\r\n      //     actually change the view - so we display it regarless of the state of the active view\r\n      if (_eateriesSel.isFormFilterActive(appState)) {\r\n        return <EateryFilterScreen/>;\r\n      }\r\n    }\r\n  }),\r\n\r\n  featureRoute({\r\n    content({fassets, appState}) {\r\n\r\n      // allow other down-stream features to route, when the active view is NOT ours\r\n      if (fassets.sel.curView(appState) !== featureName) {\r\n        return null;\r\n      }\r\n      \r\n      // ***\r\n      // *** at this point we know the active view is ours\r\n      // ***\r\n      \r\n      // display our EateriesListScreen\r\n      return <EateriesListScreen/>;\r\n    }\r\n  }),\r\n\r\n];\r\n","import React,\r\n       {useCallback} from 'react';\r\n\r\nimport {useFassets}  from 'feature-u';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport _eateries     from '../featureName';\r\nimport _eateriesAct  from '../actions';\r\n\r\nimport withStyles    from '@material-ui/core/styles/withStyles';\r\n\r\nimport Divider                  from '@material-ui/core/Divider';\r\nimport ListItem                 from '@material-ui/core/ListItem';\r\nimport ListItemIcon             from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText             from '@material-ui/core/ListItemText';\r\nimport PoolIcon                 from '@material-ui/icons/RestaurantMenu'; // possibilities: Restaurant RestaurantMenu Star StarRate Stars BlurOn AllOut DragIndicator GroupWork Reorder Apps Whatshot\r\nimport SettingsIcon             from '@material-ui/icons/Tune';           // possibilities: Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\nimport IconButton               from '@material-ui/core/IconButton';\r\n\r\n/**\r\n * EateryLeftNavItem: our Eatery entry into the LeftNav.\r\n */\r\nfunction EateryLeftNavItem({classes}) {\r\n\r\n  const fassets      = useFassets();\r\n  const dispatch     = useDispatch();\r\n  const changeView   = useCallback(() => dispatch( fassets.actions.changeView(_eateries) ), [fassets]);\r\n  const handleFilter = useCallback(() => dispatch( _eateriesAct.filterForm.open() ),        [fassets]);\r\n\r\n  // render our menu item\r\n  return (\r\n    <>\r\n      <ListItem button\r\n                onClick={changeView}>\r\n        <ListItemIcon className={classes.major}><PoolIcon/></ListItemIcon>\r\n        <ListItemText primaryTypographyProps={{className:classes.major}} primary=\"Pool\"/>\r\n        <ListItemSecondaryAction onClick={handleFilter}>\r\n          <ListItemIcon><IconButton className={classes.minor}><SettingsIcon/></IconButton></ListItemIcon>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  major: {\r\n    color: theme.palette.grey.A200, // light grey (or redish: theme.palette.secondary.main\r\n  },\r\n  minor:{\r\n    color: theme.palette.primary.dark,   // bluish\r\n  },\r\n});\r\n\r\nexport default /* EateryLeftNavItemWithStyle = */  withStyles(styles)(EateryLeftNavItem);\r\n","import {createFeature}    from 'feature-u';\r\nimport _eateries          from './featureName';\r\nimport _eateriesAct       from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (eateryFilterFormMeta)\r\nimport reducer            from './state';\r\nimport * as _eateriesSel  from './state';\r\nimport logic              from './logic';\r\nimport route              from './route';\r\nimport EateryLeftNavItem  from './comp/EateryLeftNavItem';\r\nimport EateriesTitle      from './comp/EateriesTitle';\r\nimport EateriesFooter     from './comp/EateriesFooter';\r\n\r\n\r\n// feature: eateries\r\n//          manage and promotes the eateries view (a list of pooled\r\n//          and filtered) restaurants, with the ability to select an\r\n//          eatery through a random spin.  Selected eateries provides\r\n//          the ability to phone, visit their web site, and navigate\r\n//          to them (full details in README)\r\nexport default createFeature({\r\n  name: _eateries,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      'actions.addEatery':     _eateriesAct.dbPool.add,      // addEatery(eateryId)    ... slight naming variation to original action\r\n      'actions.removeEatery':  _eateriesAct.dbPool.remove,   // removeEatery(eateryId) ... slight naming variation to original action\r\n\r\n      'sel.getEateryDbPool':   _eateriesSel.getDbPool, // ... slight naming variation to original selector\r\n    },\r\n\r\n    defineUse: {\r\n      [`AppMotif.LeftNavItem.cc4_${_eateries}`]: EateryLeftNavItem, // inject our entry into the leftNav\r\n\r\n      // auxiliary view content for the eateries view\r\n      [`AppMotif.auxViewContent.${_eateries}`]: {\r\n        TitleComp:  EateriesTitle,\r\n        FooterComp: EateriesFooter,\r\n      },\r\n    }\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // default the app view to be self\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n  },\r\n});\r\n","import React             from 'react';\r\n\r\nimport {useFassets}      from 'feature-u';\r\nimport {useSelector}     from 'react-redux'\r\n\r\nimport * as _eateriesSel from '../state';\r\nimport Typography        from '@material-ui/core/Typography';\r\n\r\n/**\r\n * EateriesTitle displaying the eateries pool title\r\n */\r\nexport default function EateriesTitle() {\r\n\r\n  const fassets = useFassets();\r\n\r\n  const curUser = useSelector((appState) => fassets.sel.curUser(appState),            [fassets]);\r\n  const filter  = useSelector((appState) => _eateriesSel.getListViewFilter(appState), []);\r\n\r\n  return (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Pool\r\n      <Typography color=\"inherit\" inline noWrap>\r\n        &nbsp;({curUser.pool})\r\n      </Typography>\r\n\r\n      {filter.distance && \r\n       <Typography color=\"inherit\"\r\n                   noWrap>\r\n         ... within {filter.distance} mile{filter.distance===1?'':'s'}\r\n       </Typography>}\r\n    </Typography>\r\n  );\r\n}\r\n","import React,\r\n       {useCallback}     from 'react';\r\nimport {useDispatch}     from 'react-redux'\r\n\r\nimport _eateriesAct      from '../actions';\r\n\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport IconButton        from '@material-ui/core/IconButton';\r\nimport SpinIcon          from '@material-ui/icons/SwapCalls'; // ... -OR-  loop, swap_vert, vertical_align_center, done, playlist_add_check, check_box, check, swap_calls, present_to_all \r\nimport Tooltip           from '@material-ui/core/Tooltip';\r\nimport Typography        from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * EateriesFooter displaying the spin control\r\n */\r\nexport default function EateriesFooter() {\r\n\r\n  const dispatch   = useDispatch();\r\n  const handleSpin = useCallback(() => dispatch( _eateriesAct.spin() ), []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Typography>&nbsp;</Typography>\r\n      <IconButton color=\"inherit\" onClick={handleSpin}>\r\n        <SpinIcon/>\r\n        <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin</Typography>\r\n      </IconButton>\r\n      <Tooltip title=\"powered by Google Firebase\">\r\n        <img width=\"50px\" src=\"/firebaseLogo.png\" alt=\"\"/>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n}\r\n","import {createFeature}   from 'feature-u';\r\nimport EateryServiceAPI  from './EateryServiceAPI';\r\n\r\n// feature: eateryService\r\n//          promote a service API that manages a real-time persistent\r\n//          \"Eateries\" DB, through the `eateryService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'eateryService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['eateryService', {required: true, type: objectOfTypeEateryServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeEateryServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof EateryServiceAPI ? null : 'object of type EateryServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import firebase         from 'firebase/app';\r\nimport                       'firebase/database';\r\nimport geodist          from 'geodist';\r\nimport EateryServiceAPI from '../eateryService/EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceFirebase is the **real** EateryServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceFirebase extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = {       // current \"pool\" monitor (initially a placebo)\r\n    pool:   null,          // type: string\r\n    dbRef:  null,          // type: firebase.database.Reference\r\n    wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n  };\r\n\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n\r\n    // close prior monitor (if any)\r\n    this.curPoolMonitor.wrapUp();\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      dbRef: firebase.database().ref(`/pools/${pool}`),\r\n      wrapUp() {\r\n        this.dbRef.off('value');\r\n      }\r\n    };\r\n\r\n    // listen for eatery data changes in the specified pool\r\n    this.curPoolMonitor.dbRef.on('value', (snapshot) => {\r\n\r\n      // conditional logic accommodates an empty pool\r\n      // ... a firebase DB philosophy is that it will NOT store empty data (or collections)\r\n      const eateries = snapshot.val() !== null ? snapshot.val() : {};\r\n\r\n      // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n      for (const eateryId in eateries) {\r\n        const eatery = eateries[eateryId];\r\n        eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n      }\r\n\r\n      // notify our supplied monitorCB\r\n      // console.log(`xx EateryServiceFirebase.monitorDbEateryPool() -and- MOCK RECORDING ... eateries changed for pool '${this.curPoolMonitor.pool}': ${JSON.stringify(eateries)}`);\r\n      monitorCB(eateries);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.addEatery() adding eatery: /pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n      dbRef.set(eatery)\r\n           .then( () => { // a void resolve indicates the add is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`add eatery (${eatery.id}) to pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n      // remove the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.removeEatery() removeing eatery: /pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n      dbRef.set(null)\r\n           .then( () => { // a void resolve indicates the remove is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`remove eatery (${eateryId}) from pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}       from 'feature-u';\r\nimport featureFlags          from 'featureFlags';\r\nimport EateryServiceFirebase from './EateryServiceFirebase';\r\n\r\n// feature: eateryServiceFirebase\r\n//          defines the real 'eateryService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceFirebase(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {createFeature}    from 'feature-u';\r\nimport featureFlags       from 'featureFlags';\r\nimport EateryServiceMock  from './EateryServiceMock';\r\n\r\n// feature: eateryServiceMock\r\n//          defines the mock 'eateryService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {createFeature}   from 'feature-u';\r\nimport featureFlags      from 'featureFlags';\r\nimport firebase          from 'firebase/app';\r\nimport {decode}          from 'util/encoder';\r\nimport firebaseAppConfig from './config/firebaseAppConfig';\r\n\r\n// feature: initFirebase\r\n//          initialize the Google Firebase service for the eatery-nod app (when needed)\r\nexport default createFeature({\r\n  name: 'initFirebase',\r\n\r\n  // firebase is only required when we are using real services (i.e. when WIFI enabled)\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // initialize firebase using eatery-nod's embedded configuration\r\n  appWillStart({fassets, curRootAppElm}) {\r\n    const appConfig = decode(firebaseAppConfig);\r\n    firebase.initializeApp(appConfig);\r\n  },\r\n\r\n});\r\n","// The eatery-nod FireBase App Configuration (a PRIVATE RESOURCE in a gitignored resource)\r\n// NOTE: We encode sensitive credential keys to alleviate exposure on deployment site!\r\nexport default 'afesab2JqMnN0cjp7ImFwaUtleSI6IkFJemFTeUNmak8xc29QMUE5OEtWeWxDYnJELXUzZE5UbHVlZ2EzRSIsImF1dGhEb21haW4iOiJlYXRlcnktbm9kLmZpcmViYXNlYXBwLmNvbSIsImRhdGFiYXNlVVJMIjoiaHR0cHM6Ly9lYXRlcnktbm9kLmZpcmViYXNlaW8uY29tIiwicHJvamVjdElkIjoiZWF0ZXJ5LW5vZCIsInN0b3JhZ2VCdWNrZXQiOiJlYXRlcnktbm9kLmFwcHNwb3QuY29tIiwibWVzc2FnaW5nU2VuZGVySWQiOiIxMjM2ODc4NDM3MzYifQ==';\r\n","import {createFeature}     from 'feature-u';\r\nimport featureFlags        from 'featureFlags';\r\nimport {decode}            from 'util/encoder';\r\nimport googlePlacesApiKey  from './config/googlePlacesApiKey';\r\n\r\n// feature: initGooglePlaces\r\n//          initialize the Google Places service for the eatery-nod app (when needed)\r\nexport default createFeature({\r\n  name: 'initGooglePlaces',\r\n\r\n  // Google Places is only required when we are using real services (i.e. when WIFI enabled)\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // initialize Google Places using eatery-nod's embedded configuration\r\n  appWillStart({fassets, curRootAppElm}) {\r\n\r\n    const apiKey = decode(googlePlacesApiKey);\r\n\r\n    // bootstrap the script tag required by Google Places API\r\n    const scriptTag = document.createElement('script');\r\n    scriptTag.type = 'text/javascript';\r\n    scriptTag.src  = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places`;\r\n    document.body.appendChild(scriptTag);\r\n  },\r\n\r\n});\r\n","// The eatery-nod Google Places API Key (a PRIVATE RESOURCE in a gitignored resource)\r\n// NOTE: We encode sensitive credential keys to alleviate exposure on deployment site!\r\nexport default 'afesaQUl6YVN5RHZiNlBiXzV0RjVHN01jNTQ1QnFiQ1g4SmtXWk9LQlVz';\r\n","import {generateActions} from 'action-u';\r\nimport _baseUI           from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_baseUI]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    toggleUITheme: { // actions.toggleUITheme(): Action\r\n                     // > toggle the UI Theme ('light'/'dark')\r\n                     actionMeta: {},\r\n    },\r\n\r\n    changeView: {  // actions.changeView(viewName): Action\r\n                   // > change the curView to the supplied viewName\r\n                   actionMeta: {\r\n                     traits: ['viewName'],\r\n                   },\r\n    },\r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'baseUI';\r\n","import {storeItem,\r\n        fetchItem,\r\n        removeItem}   from 'util/deviceStorage';\r\n\r\n/**\r\n * Store uiTheme on local device.\r\n * \r\n * @param {string} uiTheme the UI Theme to store.\r\n */\r\nexport function storeUITheme(uiTheme) {\r\n  storeItem(uiThemeKey, uiTheme);\r\n}\r\n\r\n/**\r\n * Fetch uiTheme stored on local device (if any).\r\n * \r\n * @return {string} the persisted UI Theme (null for none).\r\n */\r\nexport function fetchUITheme() {\r\n  return fetchItem(uiThemeKey);\r\n}\r\n\r\n/**\r\n * Remove uiTheme from local device.\r\n */\r\nexport function removeUITheme() {\r\n  removeItem(uiThemeKey);\r\n}\r\n\r\nconst uiThemeKey = 'uiTheme';\r\n","import {expandWithFassets} from 'feature-u';\r\nimport {combineReducers}   from 'redux';\r\nimport {reducerHash}       from 'astx-redux-util';\r\nimport {slicedReducer}     from 'feature-redux';\r\nimport _baseUI             from './featureName';\r\nimport _baseUIAct          from './actions';\r\nimport {fetchUITheme}      from './uiThemeStorage';\r\n\r\n\r\n// ***\r\n// *** Our feature reducer, managing our state.\r\n// ***\r\n\r\nconst reducer = slicedReducer(_baseUI, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // uiTheme: 'light'/'dark'\r\n  uiTheme: reducerHash({\r\n    [_baseUIAct.toggleUITheme]: (state, action) => state==='dark' ? 'light' : 'dark',\r\n  }, fetchUITheme() ), // initialState (default to a persistent state)\r\n\r\n  // loc: {lat, lng} ... device GPS location\r\n  curView: reducerHash({\r\n    [_baseUIAct.changeView]:   (state, action) => action.viewName,\r\n    [fassets.actions.signOut]: (state, action) => 'eateries', // AI: Innappropriate app knowledge dependancy (really part of an @@INIT app payload) ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, 'uninitialized'), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n/** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState           = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;      // ... concise alias (used internally)\r\n\r\n                                  /** UI Theme: 'light'/'dark' */\r\nexport const getUITheme         = (appState) => gfs(appState).uiTheme || 'light'; // default to 'light' (on first occurrence -or- deviceStorage() NOT supported)\r\n\r\n                                  /** current view (ex: 'eateries') */\r\nexport const curView            = (appState) => gfs(appState).curView;\r\n","import {createLogic}        from 'redux-logic';\r\nimport _baseUI              from './featureName';\r\nimport _baseUIAct           from './actions';\r\nimport {getUITheme}         from './state';\r\nimport {storeUITheme}       from './uiThemeStorage';\r\n\r\n/**\r\n * Monitor UI Theme changes, persisting the latest theme in our device storage.\r\n */\r\nexport const persistUITheme = createLogic({\r\n\r\n  name: `${_baseUI}.persistUITheme`,\r\n  type: String(_baseUIAct.toggleUITheme),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    storeUITheme( getUITheme(getState()) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  persistUITheme,\r\n];\r\n","import React,\r\n       {useCallback,\r\n        useMemo}       from 'react';\r\n\r\nimport {useFassets}    from 'feature-u';\r\nimport withStyles      from '@material-ui/core/styles/withStyles';\r\n\r\nimport AppBar          from '@material-ui/core/AppBar';\r\nimport Drawer          from '@material-ui/core/Drawer';\r\nimport List            from '@material-ui/core/List';\r\nimport Toolbar         from '@material-ui/core/Toolbar';\r\nimport Typography      from '@material-ui/core/Typography';\r\n\r\n\r\nconst leftNavStyles = (theme) => ({\r\n  leftNav: {\r\n    width: 250, // make width significant enough to space out our secondary menu icons\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * LeftNav: our LeftNav component that accumulates menu items via use contract.\r\n */\r\nfunction LeftNav({classes}) {\r\n\r\n  const [leftNavVisible, setLeftNavVisible] = React.useState(false);\r\n\r\n  _openLeftNav       = useCallback(() => setLeftNavVisible(true),  []);\r\n  const closeLeftNav = useCallback(() => setLeftNavVisible(false), []);\r\n\r\n  const leftNavItems        = useFassets('AppMotif.LeftNavItem.*@withKeys');\r\n  const orderedLeftNavItems = useMemo(() => (\r\n    [...leftNavItems].sort(([item1Key], [item2Key]) => item1Key.localeCompare(item2Key))\r\n  ), [leftNavItems]);\r\n\r\n  // AI: have seen some usage of tabIndex in <div> under <Drawer> (unsure if needed)\r\n  //     tabIndex={0} ... should be focus-able in sequential keyboard navigation, but its order is defined by the document's source order */}\r\n  return (\r\n    <Drawer open={leftNavVisible}\r\n            onClose={closeLeftNav}>\r\n      <div className={classes.leftNav}\r\n           onClick={closeLeftNav}\r\n           onKeyDown={closeLeftNav}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Select a view\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          {orderedLeftNavItems.map( ([fassetsKey, LeftNavItem]) => <LeftNavItem key={fassetsKey}/> )}\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default /* LeftNavWithStyles = */  withStyles(leftNavStyles)(LeftNav);\r\n\r\n\r\n\r\n/**\r\n * Utility function that opens our left-nav menu.\r\n */\r\nexport function openLeftNav() { // exported for use by our own: AppMotif\r\n  if (_openLeftNav) {\r\n    _openLeftNav();\r\n  }\r\n}\r\nlet _openLeftNav = null; // expose our inner function\r\n\r\n","import React,\r\n       {useMemo}      from 'react';\r\nimport PropTypes      from 'prop-types';\r\n\r\nimport {useFassets}   from 'feature-u';\r\nimport {useSelector}  from 'react-redux'\r\n\r\nimport withStyles     from '@material-ui/core/styles/withStyles';\r\n\r\nimport LeftNav        from './LeftNav';\r\nimport {openLeftNav}  from './LeftNav';\r\nimport UserMenu       from './UserMenu';\r\n\r\nimport AppBar         from '@material-ui/core/AppBar';\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport MenuIcon       from '@material-ui/icons/Menu';\r\nimport Toolbar        from '@material-ui/core/Toolbar';\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * AppMotif is a re-usable top-level component that establishes\r\n * the following application characteristics:\r\n * \r\n * - a **Left Nav** menu\r\n * - a **User Menu** menu\r\n * - a **Current View** state _(orchestrating which application view is active)_\r\n * - a **Tool Bar** with various artifacts (ex: title bar and footer)\r\n * \r\n * While these controls are promoted through AppMotif, it's content\r\n * is accumulated from external features through various **Use\r\n * Contracts**.\r\n\r\n * AppMotif is auto injected through the MainLayout component,\r\n * however, it is only active when an active user is **signed-in**.\r\n * \r\n * The main page content is rendered as children of this component\r\n * (like eateries, discovery, etc.).\r\n *\r\n * USAGE:\r\n * ```\r\n *   <AppMotif>\r\n *     ... app page content here\r\n *   </AppMotif>\r\n * ```\r\n * \r\n * Please refer to the **`baseUI` README** for more information.\r\n */\r\n\r\nconst appStyles = (theme) => ({\r\n\r\n  app: {\r\n    display: 'flex', // KJB: does not seem to be doing anything\r\n  },\r\n\r\n  appBar: {\r\n    //? ***Dashboard Sample***\r\n    //? zIndex:     theme.zIndex.drawer + 1,\r\n    //? transition: theme.transitions.create(['width', 'margin'], {\r\n    //?   easing:   theme.transitions.easing.sharp,\r\n    //?   duration: theme.transitions.duration.leavingScreen,\r\n    //? }),\r\n  },\r\n\r\n  bottomBar: {\r\n    top:        'auto',\r\n    bottom:     0,\r\n  },\r\n\r\n  toolbar: {\r\n    //? ***Dashboard Sample***\r\n    //? paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n\r\n  menuButton: {\r\n    //? marginLeft:  12, //? ...more ***Dashboard Sample***\r\n    marginRight: 36, // proper spacing between menu button and title\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',                 // content window is height is same as our viewport (100%)\r\n    overflow: 'auto',                // add scrollbar ONLY when necessary\r\n\r\n    paddingTop:    '4em', // HACK: so ToolBar doesn't cover up ... must be a better way\r\n    paddingBottom: '4em', // HACK: so BottomBar doesn't cover up ... must be a better way\r\n    // padding: theme.spacing.unit * 3, // ... from sample content ... sample: 8 * 3\r\n  },\r\n\r\n});\r\n\r\n\r\nfunction AppMotif({classes, children}) {\r\n\r\n  const fassets = useFassets();\r\n\r\n  const curUser = useSelector( (appState) => fassets.sel.curUser(appState), [fassets] );\r\n  const curView = useSelector( (appState) => fassets.sel.curView(appState), [fassets] );\r\n\r\n  // define our auxiliary view content\r\n  const viewAuxiliaryContent    = fassets.get('AppMotif.auxViewContent.*@withKeys');\r\n  const curViewAuxiliaryContent = useMemo(() => resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent), [curView, viewAuxiliaryContent]);\r\n  const {TitleComp, FooterComp} = curViewAuxiliaryContent;\r\n\r\n  // no-op when no user is signed-in\r\n  if (!curUser.isUserSignedIn()) {\r\n    return (\r\n      <>\r\n        {children}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n\r\n      {/* Title Bar */}\r\n      <AppBar className={classes.appBar}\r\n              position=\"absolute\">\r\n        <Toolbar className={classes.toolbar}\r\n                 disableGutters={false}>\r\n\r\n          {/* Left Nav Activation Button openLeftNav */}\r\n          <IconButton className={classes.menuButton}\r\n                      color=\"inherit\"\r\n                      onClick={openLeftNav}>\r\n            <MenuIcon/>\r\n          </IconButton>\r\n\r\n          {/* Title */}\r\n          <div className={classes.title}>\r\n            <TitleComp/>\r\n          </div>\r\n\r\n          {/* User Profile Menu */}\r\n          <UserMenu curUser={curUser}/>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Left Nav */}\r\n      <LeftNav/>\r\n\r\n      {/* Page Content */}\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n\r\n      {/* Optional Bottom Bar */}\r\n      {FooterComp && (\r\n         <AppBar className={classes.bottomBar}\r\n                 position=\"absolute\">\r\n           <Toolbar className={classes.toolbar}\r\n                    disableGutters={false}>\r\n             <FooterComp/>\r\n           </Toolbar>\r\n         </AppBar>\r\n       )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nAppMotif.propTypes = {\r\n  children: PropTypes.node.isRequired, // main page content (like eateries and discovery)\r\n};\r\n\r\nexport default /* AppMotifWithStyles = */ withStyles(appStyles)(AppMotif);\r\n\r\n\r\n\r\nfunction resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent) {\r\n  const matchKey = `AppMotif.auxViewContent.${curView}`;\r\n  const [, curViewAuxiliaryContent] = viewAuxiliaryContent.find( ([key]) => key === matchKey ) || fallbackViewAuxiliaryContent;\r\n  return curViewAuxiliaryContent;\r\n}\r\n\r\nconst fallbackViewAuxiliaryContent = ['AppMotif.auxViewContent.FALLBACK', {\r\n  TitleComp: () => (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      App Motif\r\n    </Typography>\r\n  ),\r\n}];\r\n","import React,\r\n       {useMemo}          from 'react';\r\nimport {useSelector}      from 'react-redux'\r\nimport PropTypes          from 'prop-types';\r\nimport withStyles         from '@material-ui/core/styles/withStyles';\r\nimport {MuiThemeProvider,      // NOTE: MuiThemeProvider **SHOULD** be at the root of ALL visible components\r\n        createMuiTheme}   from '@material-ui/core/styles';\r\nimport CssBaseline        from '@material-ui/core/CssBaseline';\r\nimport AppMotif           from './AppMotif';\r\nimport Notify             from 'util/notify';\r\nimport {getUITheme}       from '../state';\r\n\r\n\r\n/**\r\n * MainLayout is a re-usable top-level component that promotes the\r\n * proper Material-UI (MUI) theming/styling WITH a responsive layout.\r\n * \r\n * The following items are provided through this component:\r\n *\r\n * - a **Responsive Design** that auto adjusts for desktops, cell\r\n *   phones, and portable devices\r\n *\r\n * - a **UI Theme** allowing the user to choose from light/dark\r\n *   renditions\r\n *\r\n * - an **About Dialog** is promoted from information gleaned from the\r\n *   `package.json`\r\n *\r\n * - the **Notify** utility is activated, supporting programmatic\r\n *   **toasts, alerts, and confirmations**\r\n * \r\n * Please refer to the **`baseUI` README** for more information.\r\n */\r\n\r\nconst lightTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n\r\n  palette: {\r\n    type: 'light',\r\n    // AI: More theming to consider\r\n    // primary: {\r\n    //   main: '#37b44e',\r\n    // },\r\n    // secondary: {\r\n    //   main: '#000',\r\n    // },\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst mainStyles = (theme) => ({\r\n  main: {\r\n    width:        'auto',\r\n    display:      'block', // Fix IE 11 issue.\r\n    //marginLeft:   theme.spacing.unit * 3, // AI: ?? bad news for the overall layout\r\n    //marginRight:  theme.spacing.unit * 3,\r\n\r\n    // reactive design // AI: ?? THIS IS CAUSING HAVOC on my main content container overall width\r\n    //? [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n    //?   width:       400,\r\n    //?   marginLeft:  'auto',\r\n    //?   marginRight: 'auto',\r\n    //? },\r\n  },\r\n});\r\n\r\nfunction MainLayout({classes, children}) {\r\n\r\n  const uiTheme    = useSelector((appState) => getUITheme(appState), []);\r\n  const themeInUse = useMemo(() => uiTheme==='dark' ? darkTheme : lightTheme, [uiTheme]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeInUse}>\r\n      <CssBaseline/>\r\n      <Notify/>\r\n      <main className={classes.main}>\r\n        <AppMotif>\r\n          {children}\r\n        </AppMotif>\r\n      </main>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nMainLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default /* MainLayoutWithStyles = */ withStyles(mainStyles)(MainLayout);\r\n","import React         from 'react';\r\n\r\nimport {alert}       from 'util/notify';\r\n\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\n\r\n\r\n/**\r\n * About: display info about this app (gleaned from package.json)\r\n */\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <Divider/>\r\n      <UserMenuItem onClick={showAbout}>About ...</UserMenuItem>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction showAbout() {\r\n  const name    = process.env.REACT_APP_NAME        || 'UNKNOWN name (from package.json: name)';\r\n  const desc    = process.env.REACT_APP_DESCRIPTION || 'UNKNOWN desc (from package.json: description)';\r\n  const ver     = process.env.REACT_APP_VERSION     || 'UNKNOWN (from package.json: version)';\r\n  const docsUrl = process.env.REACT_APP_ABOUT_DOCS;\r\n  const histUrl = process.env.REACT_APP_ABOUT_HIST;\r\n\r\n  const msg = `${name}\\n\\n${desc}\\n\\nversion: ${ver}`;\r\n\r\n  const actions = [];\r\n  if (docsUrl)\r\n    actions.push({ txt: 'Docs',    action: () => window.open(docsUrl, '_blank') });\r\n  if (histUrl)\r\n    actions.push({ txt: 'History', action: () => window.open(histUrl, '_blank') });\r\n  actions.push({ txt: 'Close' });\r\n\r\n  alert.success({msg, actions});\r\n}\r\n","import React                from 'react';\r\nimport {createFeature,\r\n        fassetValidations}  from 'feature-u';\r\n\r\nimport _baseUI              from './featureName';\r\nimport _baseUIAct           from './actions';\r\nimport reducer              from './state';\r\nimport * as _baseUISel      from './state';\r\nimport logic                from './logic';\r\n\r\nimport MainLayout           from './comp/MainLayout';\r\nimport ToggleUITheme        from './comp/ToggleUITheme';\r\nimport About                from './comp/About';\r\n\r\n// feature: baseUI <<< full details in README\r\n//          Provides a UI foundation for an entire application.\r\n//          It manages the following characteristics:\r\n//          - a Responsive Design that auto adjusts for desktops, cell phones, and\r\n//            portable devices.\r\n//          - a UI Theme allowing the user to choose from light/dark renditions\r\n//          - when an active user is signed-in, the following items are also\r\n//            manifest:\r\n//            - a \"Left Nav\" menu\r\n//            - a \"User Menu\" menu\r\n//            - a \"Current View\" state (orchestrating which application view is active)\r\n//            - a \"Tool Bar\" with various artifacts (ex: title bar and footer)\r\nexport default createFeature({\r\n  name: _baseUI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    define: {\r\n      'actions.changeView': _baseUIAct.changeView, // changeView(viewName)\r\n      'sel.curView':        _baseUISel.curView,    // curView(appState): string\r\n    },\r\n\r\n    defineUse: {\r\n      // inject User Menu entries\r\n      // ... to ToggleUITheme ('light'/'dark')\r\n      'AppMotif.UserMenuItem.aa2_UIThemeToggle': ToggleUITheme,\r\n      // ... to display About info (gleaned from package.json)\r\n      'AppMotif.UserMenuItem.zz8_About': About,\r\n    },\r\n\r\n    use: [\r\n      // full details in README\r\n      ['AppMotif.UserMenuItem.*',   {required: true,  type: fassetValidations.comp}],\r\n      ['AppMotif.LeftNavItem.*',    {required: true,  type: fassetValidations.comp}],\r\n      ['AppMotif.auxViewContent.*', {required: false, type: fassetValidations.any}],\r\n    ],\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n\r\n  // inject our baseUI components into the root of our app\r\n  appWillStart({fassets, curRootAppElm}) {\r\n    return (\r\n      <MainLayout>\r\n        {curRootAppElm}\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n});\r\n","import React,\r\n       {useMemo,\r\n        useCallback} from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch} from 'react-redux'\r\n\r\nimport _baseUIAct    from '../actions';\r\nimport {getUITheme}  from '../state';\r\n\r\nimport Chip          from '@material-ui/core/Chip';\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport MoonIcon      from '@material-ui/icons/Brightness3';\r\nimport SunIcon       from '@material-ui/icons/WbSunny';\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\n\r\n\r\n/**\r\n * ToggleUITheme: our user-profile menu items (in the App Header)\r\n */\r\nexport default function ToggleUITheme() {\r\n  \r\n  const uiTheme = useSelector((appState) => getUITheme(appState), []);\r\n\r\n  const ChipIcon = useMemo(() => uiTheme==='light' ? MoonIcon  : SunIcon,    [uiTheme]);\r\n  const label    = useMemo(() => uiTheme==='light' ? 'to dark' : 'to light', [uiTheme]);\r\n\r\n  const dispatch      = useDispatch();\r\n  const toggleUITheme = useCallback(() => dispatch( _baseUIAct.toggleUITheme() ), []);\r\n\r\n  return (\r\n    <>\r\n      <UserMenuItem onClick={toggleUITheme}>\r\n        <Chip label={label}\r\n              icon={<ChipIcon/>}/>\r\n      </UserMenuItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n","import {generateActions} from 'action-u';\r\nimport _location         from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_location]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    setLocation: { // actions.setLocation(loc): Action\r\n                   // > set current GPS location\r\n                   actionMeta: {\r\n                     traits: ['loc'],\r\n                   },\r\n    },            \r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'location';\r\n","import {reducerHash}        from 'astx-redux-util';\r\nimport {slicedReducer}      from 'feature-redux';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport _location            from './featureName';\r\nimport _locationAct         from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our location.\r\n// ***\r\n\r\n// location: {lat, lng} ... GPS location\r\nconst reducer = slicedReducer(_location, expandWithFassets( (fassets) => reducerHash({\r\n\r\n  // standard location location retention\r\n  [_locationAct.setLocation]: (state, action) => action.loc,\r\n\r\n  // setup guest user\r\n  // ... for \"guest\" user signIn, force location to the \"guest\" loc (matching loc of mock data)\r\n  [fassets.actions.signIn.complete]: (state, action) => action.user.guestLoc || state,\r\n\r\n  // tear down guest user\r\n  // ... for \"guest\" user signOut, reset back to original \"real\" location (for subsequent \"real\" signin)\r\n  [fassets.actions.signOut]: (state, action) => action.user.originalLoc,\r\n\r\n}, null))); // initialState\r\n\r\nexport default reducer;\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n\r\n// NOTE: in this case, our feature state root IS our location (very simple)!\r\n//       ... we use slicedReducer as a single-source-of-truth\r\nexport const getLocation = (appState) => reducer.getSlicedState(appState);\r\n","import featureFlags  from 'featureFlags';\r\n\r\n/**\r\n * Return the current device location asynchronously (via a promise).\r\n * \r\n * NOTE: This service method can be mocked via: featureFlags.mockGPS\r\n *\r\n * @returns {Promise} the current device location {lat, lng}\r\n */\r\nexport const getCurPos = featureFlags.mockGPS ? getCurPos_mock : getCurPos_real;\r\n\r\n\r\n//***\r\n//*** our REAL implementation\r\n//***\r\n\r\nfunction getCurPos_real() {\r\n\r\n  return new Promise( (resolve, reject) => {\r\n\r\n    // insure geolocation is available in this browser\r\n    if ( !('geolocation' in navigator)) {\r\n      // NOTE: reject() passes error into .catch(), throw does NOT\r\n      return reject(new Error('geolocation is NOT available in this browser'));\r\n    }\r\n\r\n    // issue the location request\r\n    navigator.geolocation.getCurrentPosition(\r\n\r\n      // success callback\r\n      (position) => {\r\n        // communicate device location\r\n        // console.log(`xx getCurPos_real() returning: (${position.coords.latitude}, ${position.coords.longitude}) ... full structure: `, position);\r\n        return resolve({lat: position.coords.latitude, \r\n                        lng: position.coords.longitude});\r\n      },\r\n\r\n      // error callback\r\n      (geoErr) => {\r\n\r\n        // NOTE: this geoErr object is NOT a derivation of JS Error\r\n        //       Therefore we throw our own error.\r\n        //       ... allowing downstream processes to do value-added adornment\r\n        //           via: util/ErrorExtensionPolyfill.js\r\n        //           ex:  err.defineAttemptingToMsg('...')\r\n        // console.log('xx getCurPos_real() geoErr: ', geoErr)\r\n        const err = new Error(geoErr.message);  // ex: \"User denied Geolocation\" -or- \"Timeout expired\" ... etc.\r\n\r\n        // hold onto the internals of geoErr (code -and- constants)\r\n        err.code                 = geoErr.code;\r\n        err.PERMISSION_DENIED    = geoErr.PERMISSION_DENIED;    // user denied the request for Geolocation\r\n        err.POSITION_UNAVAILABLE = geoErr.POSITION_UNAVAILABLE; // position information is unavailable\r\n        err.TIMEOUT              = geoErr.TIMEOUT;              // the geo location request timed out\r\n\r\n        // that's all we can do :-)\r\n        return reject(err);\r\n      },\r\n\r\n      // geolocation options\r\n      {\r\n        enableHighAccuracy: true, // obtain the best possible result      ... DEFAULT: false\r\n        //timeout:          5000, // timeout                              ... DEFAULT: wait FOREVER\r\n        //maximumAge:       0,    // acceptable age of cached loc (mills) ... DEFAULT: 0 - do NOT use cached position\r\n      });\r\n  });\r\n}\r\n\r\n\r\n\r\n//***\r\n//*** our MOCK implementation\r\n//***\r\n\r\nfunction getCurPos_mock() {\r\n\r\n  const GlenCarbonIL = {lat: 38.752209, lng: -89.986610};\r\n  const defaultLoc   = GlenCarbonIL;\r\n  const mockLoc      = featureFlags.mockGPS.lat ? featureFlags.mockGPS : defaultLoc;\r\n\r\n  // console.log(`xx getCurPos_mock() request ... mocked to: `, mockLoc);\r\n  return new Promise( (resolve, reject) => {\r\n    // setTimeout(() => { // TEMPORARY: for testing delay just a bit\r\n\r\n    // TEMPORARY: for testing, simulate error condition\r\n    //            ... NOTE: reject() passes error into .catch(), throw does NOT\r\n    // return reject(new Error('Simulated Error in Expo GPS Location acquisition') );\r\n\r\n    // communicate device location\r\n    return resolve(mockLoc);\r\n    // }, 10000); // TEMPORARY: for testing delay just a bit\r\n  });\r\n\r\n}\r\n","import {createFeature}     from 'feature-u';\r\nimport {createBootstrapFn} from 'features/common/bootstrap/bootstrapFn';\r\nimport _location           from './featureName';\r\nimport _locationAct        from './actions';\r\nimport reducer,\r\n       {getLocation}       from './state';\r\nimport {getCurPos}         from 'util/deviceLocation';\r\n\r\n// feature: location\r\n//          initialize the GPS location for use by the app (full details in README)\r\nexport default createFeature({\r\n  name: _location,\r\n\r\n  reducer,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    defineUse: {\r\n      'bootstrap.location': createBootstrapFn('Waiting for GPS Location',\r\n                                              ({dispatch, fassets}) => {\r\n                                                return getCurPos()\r\n                                                  .then( (location) => {\r\n                                                    // set the current location\r\n                                                    dispatch( _locationAct.setLocation(location) );\r\n                                                  })\r\n                                                  .catch( (err) => {\r\n                                                    // set a fallback location ... Glen Carbon IL\r\n                                                    dispatch( _locationAct.setLocation({lat: 38.752209, lng: -89.986610}) );\r\n                                                                \r\n                                                    // alter the error to be an expected condition\r\n                                                    // ... allowing the bootstrap to: complete -and- disclose to user\r\n                                                    //     NOTE: we also expose the real error (via err.message) so as to identify various conditions\r\n                                                    throw err.defineUserMsg(`Unable to get your GPS location (${err.message}) ... falling back to our base location (Glen Carbon)`);\r\n                                                  })\r\n                                              }),\r\n    },\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      //*** public selectors ***\r\n                          // GPS location {lat, lng}\r\n      'sel.getLocation': getLocation,\r\n\r\n    }\r\n  },\r\n\r\n});\r\n","import {createLogic}      from 'redux-logic';\r\nimport _logActions        from './featureName';\r\nimport featureFlags       from 'featureFlags';\r\n\r\nlet lastState = null;\r\n\r\n/**\r\n * Log all dispatched actions.\r\n *\r\n * TODO: retrofit to use real logger:\r\n *       using the following Log levels:\r\n *         - TRACE:   see dispatched actions\r\n *         - VERBOSE: see dispatched actions INCLUDING action content (CAUTION: action content can be BIG)\r\n */\r\nexport const actionLogger = createLogic({\r\n\r\n  name: `${_logActions}.actionLogger`,\r\n  type: '*', // monitor ALL action types\r\n\r\n  transform({getState, action}, next) {\r\n\r\n    if (featureFlags.log === 'verbose') { // group action/state together\r\n      console.group(`Action: ${action.type}`);\r\n    }\r\n\r\n    console.log('Dispatched Action: ', action);\r\n\r\n    // TODO: retrofit to use log-u:\r\n    // // log dispatched action\r\n    // if (log.isVerboseEnabled()) {\r\n    //   log.verbose(()=> `Dispatched Action: ${FMT(action.type)} with content:\\n${FMT(action)}`);\r\n    // }\r\n    // else {\r\n    //   log.trace(()=>   `Dispatched Action: ${FMT(action.type)}`);\r\n    // }\r\n\r\n    // continue processing\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    if (featureFlags.log === 'verbose') { // state can be big ... log conditionally\r\n\r\n      const curState = getState();\r\n      if (curState === lastState) {\r\n        console.log('Current State: UNCHANGED');\r\n      }\r\n      else {\r\n        console.log('Current State: ', curState);\r\n      }\r\n      lastState = curState;\r\n\r\n      console.groupEnd();\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  actionLogger,\r\n];\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'logActions';\r\n","import {createFeature}  from 'feature-u';\r\nimport _logActions      from './featureName';\r\nimport logic            from './logic';\r\nimport featureFlags     from 'featureFlags';\r\n\r\n// feature: logActions\r\n//          log all dispatched actions and resulting state (full details in README)\r\nexport default createFeature({\r\n  name:    _logActions,\r\n  enabled: featureFlags.log ? true : false, // NOTE: feature-u requires boolean, but featureFlags.log can be a string (e.g. 'verbose')\r\n  logic,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createFeature}    from 'feature-u';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// feature: pwa\r\n//          orchestrates the Progressive Web App hooks (as defined by Create React App)\r\nexport default createFeature({\r\n  name:    'pwa',\r\n\r\n  appDidStart() {\r\n    // FROM: CRA (Create React App):\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: http://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n  }\r\n});\r\n","import React         from 'react';\r\n\r\nimport {notify,\r\n        toast,\r\n        alert,\r\n        confirm}     from 'util/notify';\r\n\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport ListItem      from '@material-ui/core/ListItem';\r\nimport ListItemIcon  from '@material-ui/core/ListItemIcon';\r\nimport ListItemText  from '@material-ui/core/ListItemText';\r\nimport MsgIcon       from '@material-ui/icons/LowPriority';\r\n\r\n\r\n/**\r\n * SandboxLeftNavItem: our Sandbox entry into the LeftNav.\r\n */\r\nexport default function SandboxLeftNavItem() {\r\n\r\n  // render our menu item\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* Sandbox \"toast\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox toasts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>toast.success({msg: 'success toast'}) )}\r\n    {doTest(\"info\",    ()=>toast.info   ({msg: 'info toast'}) )}\r\n    {doTest(\"warn\",    ()=>toast.warn   ({msg: 'warn toast'}) )}\r\n    {doTest(\"error\",   ()=>toast.error  ({\r\n       msg: 'error toast',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: error toast CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: error toast CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"alert\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox alerts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>alert.success({msg: 'success alert'}) )}\r\n    {doTest(\"info\",    ()=>alert.info   ({msg: 'info alert'}) )}\r\n    {doTest(\"warn\",    ()=>alert.warn   ({msg: 'warn alert'}) )}\r\n    {doTest(\"error\",   ()=>alert.error  ({\r\n       msg: 'error alert',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => alert.success({msg: 'WowZee: error alert CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => alert.success({msg: 'WooWoo: error alert CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"confirm\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox confirms ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>confirm.success({msg: 'success confirm', actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"info\",    ()=>confirm.info   ({msg: 'info confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"warn\",    ()=>confirm.warn   ({msg: 'warn confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"error\",   ()=>confirm.error  ({msg: 'error confirm'  , actions:[{txt:'Okey Dokey'}] }) )}\r\n\r\n\r\n\r\n    {/* Sandbox \"notify\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox raw notifies ... \"/>\r\n    </ListItem>\r\n    {doTest(\"notify\",   ()=> notify({\r\n       msg: 'my notify\\nNow is the time for every good man to come to the aid of his country ... I really hope this works for a really long line\\nnext next line',\r\n       position: 'top-center',\r\n       duration: null, // do this to keep it up (requiring user acknowledgment)\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: notify CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: notify CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst doTest = (label, cb) => (\r\n  <ListItem button\r\n            onClick={cb}>\r\n    <ListItemIcon><MsgIcon/></ListItemIcon>\r\n    <ListItemText primary={label}/>\r\n  </ListItem>\r\n);\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags'\r\nimport SandboxLeftNavItem  from './comp/SandboxLeftNavItem';\r\n\r\n// feature: sandbox\r\n//          promote interactive tests (full details in README)\r\nexport default createFeature({\r\n  name:    'sandbox',\r\n\r\n  enabled: featureFlags.sandbox,\r\n\r\n  fassets: {\r\n    defineUse: {\r\n      'AppMotif.LeftNavItem.zz5_sandbox': SandboxLeftNavItem, // inject our entries into the LeftNav\r\n    },\r\n  },\r\n});\r\n","import auth                          from './common/auth/feature';\r\nimport authService                   from './common/auth/subFeatures/authService/feature';\r\nimport authServiceFirebase           from './common/auth/subFeatures/authServiceFirebase/feature';\r\nimport authServiceMock               from './common/auth/subFeatures/authServiceMock/feature';\r\nimport bootstrap                     from './common/bootstrap/feature';\r\nimport discovery                     from './discovery/feature';\r\nimport discoveryService              from './discovery/subFeatures/discoveryService/feature';\r\nimport discoveryServiceGooglePlaces  from './discovery/subFeatures/discoveryServiceGooglePlaces/feature';\r\nimport discoveryServiceMock          from './discovery/subFeatures/discoveryServiceMock/feature';\r\nimport eateries                      from './eateries/feature';\r\nimport eateryService                 from './eateries/subFeatures/eateryService/feature';\r\nimport eateryServiceFirebase         from './eateries/subFeatures/eateryServiceFirebase/feature';\r\nimport eateryServiceMock             from './eateries/subFeatures/eateryServiceMock/feature';\r\nimport initFirebase                  from './common/initFirebase/feature';\r\nimport initGooglePlaces              from './common/initGooglePlaces/feature';\r\nimport baseUI                        from './common/baseUI/feature';\r\nimport location                      from './common/location/feature';\r\nimport logActions                    from './common/diagnostic/logActions/feature';\r\nimport pwa                           from './common/pwa/feature';\r\nimport sandbox                       from './common/diagnostic/sandbox/feature';\r\n\r\n// accumulate/promote ALL features that make up our app\r\nexport default [\r\n\r\n\r\n  //***\r\n  //*** app-specific features\r\n  //***\r\n\r\n  eateries,\r\n  eateryService,\r\n  eateryServiceFirebase,\r\n  eateryServiceMock,\r\n\r\n  discovery,\r\n  discoveryService,\r\n  discoveryServiceGooglePlaces,\r\n  discoveryServiceMock,\r\n\r\n\r\n  //***\r\n  //*** common app-neutral features\r\n  //***\r\n\r\n  baseUI,\r\n  \r\n  auth,\r\n  authService,\r\n  authServiceFirebase,\r\n  authServiceMock,\r\n  \r\n  bootstrap,\r\n  \r\n  initFirebase,\r\n  initGooglePlaces,\r\n  \r\n  location,\r\n  \r\n  pwa,\r\n\r\n  // diagnostic features ...\r\n  logActions,\r\n  sandbox,\r\n];\r\n","import noOp from 'util/noOp';\r\n\r\n/**\r\n * A set of diagnostic conditional functions:\r\n *   - that logs a description of the activity\r\n *   - and enables/disables logic (an alternative to commenting out code)\r\n *\r\n * @param {string} desc - a description used to log activity (WHEN\r\n * enabled).\r\n *\r\n * @param {function} doThis - the logic to execute (WHEN enabled).\r\n * \r\n * @private\r\n */\r\n\r\n// ... do$/skip$ ... nice in that you can find ALL directives pretty fast (both enabled/disabled)\r\n\r\nexport function do$(desc, doThis=noOp) {\r\n  console.log(`***DIAGNOSTIC*** ${desc}`);\r\n  return doThis();\r\n}\r\n\r\nexport function skip$(desc, doThis) {\r\n  // no-op\r\n  return null;\r\n}\r\n\r\n//***\r\n//*** various aliases\r\n//***\r\n\r\n// ... diag$ / diag$.skip ... nice in that the semantics are better for LOG only\r\nexport const diag$ = do$;\r\ndiag$.skip = skip$;\r\n\r\n// ... YES$ / NO$ ... hmmm\r\nexport const YES$ = do$;\r\nexport const NO$  = skip$;\r\n","import React                   from 'react';\r\nimport {launchApp}             from 'feature-u';\r\nimport features                from 'features';\r\nimport {applyMiddleware,\r\n        compose,\r\n        createStore}           from 'redux';\r\nimport {createLogicMiddleware} from 'redux-logic';\r\nimport {featureRoute, \r\n        PRIORITY}              from 'feature-router';\r\nimport SplashScreen            from 'util/SplashScreen';\r\nimport {diag$}                 from 'util/diagnosticUtil';\r\n\r\n\r\n// ***\r\n// *** feature-u Ingegration Tests ---------------------------------------------\r\n// ***\r\n\r\nexport default function configureFeatureUIntegrationTests(reducerAspect, logicAspect, routeAspect) {\r\n\r\n  // NOTE: run following tests mutually exclusive\r\n\r\n  // --- feature-redux -----------------------------------------------------------\r\n\r\n  diag$.skip('feature-redux plugin: test PUBLIC allowNoReducers$', () => {\r\n    test_allowNoReducers$();\r\n  });\r\n\r\n  diag$.skip('feature-redux plugin: test HIDDEN createReduxStore$', () => {\r\n    // override reducerAspect's creation of redux store (showing default implementation -WITH- our log)\r\n    reducerAspect.config.createReduxStore$ = function (appReducer, middlewareArr) {\r\n      console.log('OVERRIDING createReduxStore$ ... LOOK FOR THIS LOG');\r\n      return  middlewareArr.length === 0\r\n               ? createStore(appReducer)\r\n               : createStore(appReducer,\r\n                             compose(applyMiddleware(...middlewareArr)));\r\n    };\r\n  });\r\n\r\n  // --- feature-redux-logic -----------------------------------------------------\r\n\r\n  diag$.skip('feature-redux-logic plugin: test PUBLIC allowNoLogic$', () => {\r\n    test_allowNoLogic$();\r\n  });\r\n  \r\n  diag$.skip('feature-redux-logic plugin: test HIDDEN createLogicMiddleware$', () => {\r\n    // override logicAspect's creation of redux-logic middleware (showing default implementation)\r\n    logicAspect.config.createLogicMiddleware$ = function(app, appLogic) {\r\n      console.log('OVERRIDING createLogicMiddleware$ ... LOOK FOR THIS LOG');\r\n      return createLogicMiddleware(appLogic,\r\n                                   { // inject our app as a redux-logic dependancy\r\n                                     app,\r\n                                   });\r\n    };\r\n  });\r\n\r\n  // --- feature-router ----------------------------------------------------------\r\n\r\n  // NOTE: PUBLIC routeAspect.config.fallbackElm$: reactElm ... fallback when NO routes are in effect (REQUIRED CONFIGURATION)\r\n  //       is tested by eatery-nod directly\r\n\r\n  // NOTE: PUBLIC routeAspect.config.componentWillUpdateHook$: void ... invoked during react componentWillUpdate() life-cycle (OPTIONAL)\r\n  //       is tested by eatery-nod directly\r\n\r\n  diag$.skip('feature-router plugin: test PUBLIC allowNoRoutes$', () => {\r\n    test_allowNoRoutes$();\r\n  });\r\n\r\n  // --- rename Aspect.name ----------------------------------------------------------\r\n\r\n  diag$.skip('TEST ability to rename Aspect.name (on various plugin projects)', () => {\r\n    test_renameAspectName();\r\n  });\r\n\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoReducers$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoReducers$() {\r\n\r\n    diag$('test_allowNoReducers$() test PUBLIC allowNoReducers$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllReducers() {\r\n      features.forEach( (feature) => {\r\n        if (feature.reducer)\r\n          delete feature.reducer;\r\n      });\r\n    };\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoReducers$() 1st: insure allowNoReducers$ is NOT referenced when our features HAVE reducers ... should run normally', () => {\r\n      reducerAspect.config.allowNoReducers$ = (s) => \"MY REDUCER\";\r\n    });\r\n    // expecting app to run normally!\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO reducers ... expecting: thrown exception', () => {\r\n      removeAllReducers();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-redux found NO reducers within your features\r\n    //               ... did you forget to register Feature.reducer aspects in your features?\r\n    //               (please refer to the feature-redux docs to see how to override this behavior).\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 3rd: test allowNoReducers$ = true ... when our features HAVE NO reducers ... expecting: forced log', () => {\r\n      removeAllReducers();\r\n      reducerAspect.config.allowNoReducers$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux*** reducerAspect: \r\n    //                     WARNING: NO reducers were found in your features (i.e. Feature.reducer),\r\n    //                              but client override (reducerAspect.config.allowNoReducers$=truthy;)\r\n    //                              directed a continuation WITH the identity reducer.\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 4th: test allowNoReducers$ = reducerFn ... when our features HAVE NO reducers ... expecting: forced log', () => {\r\n      removeAllReducers();\r\n      reducerAspect.config.allowNoReducers$ = (s) => 'MY REDUCER';\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux*** reducerAspect: \r\n    //                     WARNING: NO reducers were found in your features (i.e. Feature.reducer),\r\n    //                              but client override (reducerAspect.config.allowNoReducers$=reducerFn;)\r\n    //                              directed a continuation WITH the specified reducer.\r\n\r\n  } // end of ... test_allowNoReducers$\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoLogic$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoLogic$() {\r\n\r\n    diag$('test_allowNoLogic$() test PUBLIC allowNoLogic$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllLogic() {\r\n      features.forEach( (feature) => {\r\n        if (feature.logic)\r\n          delete feature.logic;\r\n      });\r\n    };\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoLogic$() 1st: insure allowNoLogic$ is NOT referenced when our features HAVE logic ... should run normally', () => {\r\n      logicAspect.config.allowNoLogic$ = ['simulatedLogicNotSoWell'];\r\n    });\r\n    // expecting app to run normally!\r\n\r\n\r\n    diag$.skip('test_allowNoLogic$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO logic ... expecting: thrown exception', () => {\r\n      removeAllLogic();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-redux-logic found NO logic modules within your features\r\n    //               ... did you forget to register Feature.logic aspects in your features?\r\n    //               (please refer to the feature-redux-logic docs to see how to override this behavior).\r\n\r\n    diag$.skip('test_allowNoLogic$() 3rd: test allowNoLogic$ = true ... when our features HAVE NO logic ... expecting: forced log', () => {\r\n      removeAllLogic();\r\n      logicAspect.config.allowNoLogic$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux-logic*** logicAspect: \r\n    //                     WARNING: NO logic modules were found in your Features (i.e. Feature.logic),\r\n    //                              but client override (logicAspect.config.allowNoLogic$=truthy;)\r\n    //                              directed a continuation WITHOUT redux-logic.\r\n\r\n    diag$.skip('test_allowNoLogic$() 4th: test allowNoLogic$ = [myLogic] ... when our features HAVE NO logic ... expecting: forced log', () => {\r\n      removeAllLogic();\r\n      logicAspect.config.allowNoLogic$ = ['simulatedLogicNotSoWell'];\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux-logic*** logicAspect:\r\n    //                     WARNING: NO logic modules were found in your Features (i.e. Feature.logic),\r\n    //                              but client override (logicAspect.config.allowNoLogic$=[{logicModules}];)\r\n    //                              directed a continuation WITH specified logic modules.\r\n\r\n  } // end of ... test_allowNoLogic$\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoRoutes$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoRoutes$() {\r\n\r\n    diag$('test_allowNoRoutes$() test PUBLIC allowNoRoutes$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllRoutes() {\r\n      features.forEach( (feature) => {\r\n        if (feature.route)\r\n          delete feature.route;\r\n      });\r\n    };\r\n\r\n    const fallbackRoute = featureRoute({\r\n      priority: PRIORITY.HIGH,\r\n      content({app, appState}) {\r\n        return <SplashScreen msg=\"KOOL: This is a route supplied by routeAspect.config.allowNoRoutes$ !!!\"/>;\r\n      },\r\n    });\r\n\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoRoutes$() 1st: insure allowNoRoutes$ is NOT referenced when our features HAVE routes ... should run normally', () => {\r\n      routeAspect.config.allowNoRoutes$ = [fallbackRoute];\r\n    });\r\n    // expecting app to run normally!\r\n\r\n    diag$.skip('test_allowNoRoutes$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO routes ... expecting: thrown exception', () => {\r\n      removeAllRoutes();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-router found NO routes within your features\r\n    //               ... did you forget to register Feature.route aspects in your features?\r\n    //               (please refer to the feature-router docs to see how to override this behavior).\r\n\r\n    diag$.skip('test_allowNoRoutes$() 3rd: test allowNoRoutes$ = true ... when our features HAVE NO routes ... expecting: forced log', () => {\r\n      removeAllRoutes();\r\n      routeAspect.config.allowNoRoutes$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-router*** routeAspect: \r\n    //                     WARNING: NO routes were found in your Features (i.e. Feature.route),\r\n    //                              but client override (routeAspect.config.allowNoRoutes$=truthy;)\r\n    //                              directed a continuation WITHOUT feature-router.\r\n\r\n    diag$.skip('test_allowNoRoutes$() 4th: test allowNoRoutes$ = [routes] ... when our features HAVE NO routes ... expecting: forced log', () => {\r\n      removeAllRoutes();\r\n      routeAspect.config.allowNoRoutes$ = [fallbackRoute];\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-router*** routeAspect: \r\n    //                     WARNING: NO routes were found in your Features (i.e. Feature.route),\r\n    //                              but client override (routeAspect.config.allowNoRoutes$=[{routes}];)\r\n    //                              directed a continuation WITH specified routes.\r\n\r\n  } // end of ... test_allowNoRoutes$\r\n\r\n\r\n  // ***\r\n  // *** test_renameAspectName() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_renameAspectName() {\r\n\r\n    diag$('test_renameAspectName() TEST ability to rename Aspect.name ... enable feature-u logging, so as to see the fun', () => {\r\n      launchApp.diag.logf.enable();\r\n    });\r\n\r\n    // NOTE: you may run following sub-tests together if you like\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:reducer TO: Aspect.name:reducerX', () => {\r\n\r\n      // rename Aspect.name:reducer\r\n      reducerAspect.name = 'reducerX';         \r\n\r\n      // rename all feature usage of Feature.reducer TO Feature.reducerX\r\n      features.forEach( (feature) => {\r\n        if (feature.reducer) {\r\n          feature.reducerX = feature.reducer;\r\n          delete feature.reducer;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .reducer   ... 11\r\n      //     .reducerX  ... 11\r\n      // >>> :reducer   ... 22\r\n      //     :reducerX  ... 22\r\n    });\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:logic TO: Aspect.name:logicX', () => {\r\n\r\n      // rename Aspect.name:logic\r\n      logicAspect.name = 'logicX';         \r\n\r\n      // rename all feature usage of Feature.logic TO Feature.logicX\r\n      features.forEach( (feature) => {\r\n        if (feature.logic) {\r\n          feature.logicX = feature.logic;\r\n          delete feature.logic;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .logic   ...  8\r\n      //     .logicX  ...  8\r\n      // >>> :logic   ... 15\r\n      //     :logicX  ... 15\r\n    });\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:route TO: Aspect.name:routeX', () => {\r\n\r\n      // rename Aspect.name:route\r\n      routeAspect.name = 'routeX';         \r\n\r\n      // rename all feature usage of Feature.route TO Feature.routeX\r\n      features.forEach( (feature) => {\r\n        if (feature.route) {\r\n          feature.routeX = feature.route;\r\n          delete feature.route;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .route   ...  4\r\n      //     .routeX  ...  4\r\n      // >>> :route   ... 17\r\n      //     :routeX  ... 17\r\n    });\r\n\r\n  } // end of ... test_renameAspectName\r\n\r\n} // end of ... configureFeatureUIntegrationTests\r\n\r\n\r\n","import 'util/ErrorExtensionPolyfill';\r\nimport React                 from 'react';\r\nimport ReactDOM              from 'react-dom';\r\nimport {launchApp}           from 'feature-u';\r\nimport {createReducerAspect} from 'feature-redux';\r\nimport {createLogicAspect}   from 'feature-redux-logic';\r\nimport {createRouteAspect}   from 'feature-router';\r\nimport features              from 'features';\r\nimport SplashScreen          from 'util/SplashScreen';\r\nimport configureEateryNodDiagnostics  from 'util/configureEateryNodDiagnostics';\r\n\r\n// launch our application, exposing the feature-u Fassets object (facilitating cross-feature-communication)!\r\nexport default launchApp({\r\n  aspects: appAspects(),\r\n  features,\r\n  registerRootAppElm(rootAppElm) {\r\n    ReactDOM.render(rootAppElm,\r\n                    document.getElementById('root'));\r\n  }\r\n});\r\n\r\n\r\n// accumulate/configure the Aspect plugins matching our app's run-time stack\r\nfunction appAspects() {\r\n\r\n  // define our framework run-time stack\r\n  const reducerAspect = createReducerAspect();\r\n  const logicAspect   = createLogicAspect();\r\n  const routeAspect   = createRouteAspect();\r\n  const aspects = [\r\n    reducerAspect, // redux          ... extending: Feature.reducer\r\n    logicAspect,   // redux-logic    ... extending: Feature.logic\r\n    routeAspect,   // Feature Routes ... extending: Feature.route\r\n  ];\r\n\r\n  // configure Aspects (as needed)\r\n  // ... StateRouter fallback screen (when no routes are in effect)\r\n  routeAspect.config.fallbackElm$ = <SplashScreen msg=\"I'm trying to think but it hurts!\"/>;\r\n\r\n  // configure our app's overall diagnostics (non-production code)\r\n  configureEateryNodDiagnostics(reducerAspect, logicAspect, routeAspect);\r\n\r\n  // beam me up Scotty :-)\r\n  return aspects;\r\n}\r\n","import ReactDOMServer from 'react-dom/server';\r\nimport {launchApp}    from 'feature-u';\r\nimport {diag$}        from 'util/diagnosticUtil';\r\nimport logActions     from 'features/common/diagnostic/logActions/feature'; // enable eatery-nod \"logActions\" feature\r\nimport sandbox        from 'features/common/diagnostic/sandbox/feature';    // enable eatery-nod \"sandbox\" feature (in left-nav)\r\nimport configureFeatureUIntegrationTests  from 'util/configureFeatureUIntegrationTests';\r\n\r\n\r\n/**\r\n * Configure eatery-nod diagnostics (non-production code).\r\n */\r\nexport default function configureEateryNodDiagnostics(reducerAspect, logicAspect, routeAspect) {\r\n\r\n  // --- eatery-nod sandbox ... ------------------------------------------\r\n  diag$.skip('enable eatery-nod \"sandbox\" feature (in left-nav)', () => {\r\n    sandbox.enabled = true;\r\n  });\r\n\r\n  // --- eatery-nod logging ... ------------------------------------------\r\n  diag$.skip('enable eatery-nod \"logActions\" feature', () => {\r\n    logActions.enabled = true;\r\n  });\r\n\r\n  // --- feature-u logging probes of eatery-nod app ... ------------------\r\n  diag$.skip('enable feature-u logging', () => {\r\n    launchApp.diag.logf.enable();\r\n  });\r\n  diag$.skip('show feature-u react elms as object blobs', () => {\r\n    launchApp.diag.logf.elm2html = (elm) => elm;\r\n  });\r\n  diag$.skip('show feature-u react elms as html markup', () => {\r\n    // NOTE: UNTESTED: react-native / expo had issues resolving this in node\r\n    launchApp.diag.logf.elm2html = (elm) => ReactDOMServer.renderToStaticMarkup(elm);\r\n  });\r\n\r\n  // --- feature-u integration tests ... ---------------------------------\r\n  diag$.skip('perform feature-u integration tests', () => {\r\n    configureFeatureUIntegrationTests(reducerAspect, logicAspect, routeAspect);\r\n  });\r\n}\r\n","export {default} from 'app'; // redirect to app.js\r\n"],"sourceRoot":""}