{"version":3,"sources":["util/ErrorExtensionPolyfill.js","util/verify.js","util/iForms/IFormMeta.js","features/common/auth/subFeatures/authService/User.js","features/common/auth/state.js","features/common/auth/featureName.js","features/common/auth/signInFormMeta.js","features/common/auth/actions.js","util/notify.js","util/discloseError.js","util/noOp.js","util/encoder.js","util/deviceStorage.js","features/common/auth/credentialsStorage.js","features/common/auth/logic.js","features/common/baseUI/actions.js","features/common/baseUI/featureName.js","features/common/baseUI/uiThemeStorage.js","features/common/baseUI/responsiveModeStorage.js","features/common/baseUI/state.js","util/responsiveBreakpoints.js","util/Transition.js","util/CenterItems.js","features/common/auth/comp/SignInVerifyScreen.js","util/iForms/comp/ITextField.js","features/common/auth/comp/SignInScreen.js","util/SplashScreen.js","features/common/auth/route.js","features/common/baseUI/comp/UserMenu.js","features/common/baseUI/comp/UserMenuItem.js","features/common/auth/comp/AuthUserMenu.js","features/common/auth/feature.js","features/common/auth/subFeatures/authService/AuthServiceAPI.js","features/common/auth/subFeatures/authService/feature.js","featureFlags.js","features/common/auth/subFeatures/authServiceFirebase/AuthServiceFirebase.js","features/common/auth/subFeatures/authServiceFirebase/feature.js","features/common/auth/subFeatures/authServiceMock/AuthServiceMock.js","features/common/auth/subFeatures/authServiceMock/feature.js","features/common/bootstrap/bootstrapFn.js","features/common/bootstrap/actions.js","features/common/bootstrap/featureName.js","features/common/bootstrap/logic.js","features/common/bootstrap/state.js","features/common/bootstrap/route.js","features/common/bootstrap/feature.js","features/discovery/featureName.js","features/discovery/state.js","features/discovery/discoveryFilterFormMeta.js","features/discovery/actions.js","features/discovery/logic.js","util/iForms/comp/IRadioField.js","features/discovery/comp/DiscoveryFilterScreen.js","features/discovery/comp/DiscoveryListScreen.js","features/discovery/route.js","features/discovery/comp/DiscoveryLeftNavItem.js","features/discovery/feature.js","features/discovery/comp/DiscoveriesTitle.js","features/discovery/comp/DiscoveriesFooter.js","features/discovery/subFeatures/discoveryService/DiscoveryServiceAPI.js","features/discovery/subFeatures/discoveryService/feature.js","features/discovery/subFeatures/discoveryServiceGooglePlaces/DiscoveryServiceGooglePlaces.js","features/discovery/subFeatures/discoveryServiceGooglePlaces/feature.js","features/eateries/subFeatures/eateryService/EateryServiceAPI.js","features/eateries/subFeatures/eateryServiceMock/EateryServiceMock.js","features/discovery/subFeatures/discoveryServiceMock/DiscoveryServiceMock.js","features/discovery/subFeatures/discoveryServiceMock/feature.js","features/eateries/featureName.js","features/eateries/state.js","features/eateries/eateryFilterFormMeta.js","features/eateries/actions.js","features/eateries/logic.js","features/eateries/comp/EateryDetailScreen.js","features/eateries/comp/EateriesListScreen.js","features/eateries/comp/EateryFilterScreen.js","features/eateries/route.js","features/eateries/comp/EateryLeftNavItem.js","features/eateries/feature.js","features/eateries/comp/EateriesTitle.js","features/eateries/comp/EateriesFooter.js","features/eateries/subFeatures/eateryService/feature.js","features/eateries/subFeatures/eateryServiceFirebase/EateryServiceFirebase.js","features/eateries/subFeatures/eateryServiceFirebase/feature.js","features/eateries/subFeatures/eateryServiceMock/feature.js","features/common/initFirebase/feature.js","features/common/initFirebase/initializeFirebase.js","features/common/initGooglePlaces/feature.js","features/common/initGooglePlaces/initializeGooglePlaces.js","features/common/baseUI/logic.js","features/common/baseUI/comp/LeftNav.js","features/common/baseUI/comp/AppMotif.js","features/common/baseUI/comp/MainLayout.js","features/common/baseUI/comp/ToggleUITheme.js","features/common/baseUI/comp/MaintainResponsiveMode.js","features/common/baseUI/comp/About.js","features/common/baseUI/feature.js","features/common/location/actions.js","features/common/location/featureName.js","features/common/location/state.js","util/deviceLocation.js","features/common/location/feature.js","features/common/diagnostic/logActions/logic.js","features/common/diagnostic/logActions/featureName.js","features/common/diagnostic/logActions/feature.js","features/common/pwa/serviceWorker.js","features/common/pwa/feature.js","features/common/diagnostic/sandbox/comp/SandboxLeftNavItem.js","features/common/diagnostic/sandbox/feature.js","features/index.js","util/diagnosticUtil.js","util/configureFeatureUIntegrationTests.js","app.js","util/configureEateryNodDiagnostics.js","index.js"],"names":["Error","prototype","defineUserMsg","userMsg","this","expected","isExpected","isUnexpected","defineAttemptingToMsg","attemptingToMsg","concat","formatUserMsg","prior_toString","toString","call","verify","condition","msg","IFormMeta","_ref","arguments","length","undefined","formDesc","formSchema","formActionsAccessor","formStateSelector","mapDomain2Form","mapForm2Domain","unknownArgs","Object","objectWithoutProperties","check","prefix","isString","validate","isFunction","unknownArgKeys","keys","fieldNames","fields","labels","reduce","fieldName","describe","label","FORM","domain","values","castValues","validationOptions","abortEarly","asyncValidate","then","catch","yupErrs","msgs","inner","forEach","yupErr","path","message","registrar","formActionGenesis","appInjectedFormActions","myFormActions","open","actionMeta","traits","ratify","fieldChanged","fieldTouched","process","reject","close","action","formLogic","formActions","createLogic","name","type","String","_ref2","allow","getState","formState","api","inProcess","objectSpread","defineProperty","value","_ref3","cast","formReducer","_reducerHash","reducerHash","state","normalizedFieldNames","sort","normalizedValueProps","isEqual","formMsg","validating","newState","IForm","dispatch","isValidationExposed","getLabel","getValue","isValid","getMsg","getExposedMsg","handleFieldChanged","handleFieldTouched","handleProcess","event","preventDefault","handleClose","msgPrefix","User","_ref$name","_ref$email","email","_ref$emailVerified","emailVerified","_ref$pool","pool","_ref$guestLoc","guestLoc","_ref$originalLoc","originalLoc","classCallCheck","toStruct","reducer","slicedReducer","expandWithFassets","fassets","combineReducers","user","_authAct","signIn","complete","checkEmailVerified","userProfileChanged","signOut","signInForm","signInFormMeta","gfs","appState","getSlicedState","curUser","createSelector","curUserStruct","Yup","shape","required","pass","min","max","_authSel","generateActions","root","autoSignIn","haveDeviceCredentials","noDeviceCredentials","resendEmailVerification","Notify","props","classes","useStyles","react_default","a","createElement","build","maxSnack","dense","className","variantSuccess","NotifyAPI_withSnackBar","children","makeStyles","theme","whiteSpace","variantInfo","variantWarning","variantError","_singleton","NotifyAPI","_getPrototypeOf2","_this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","assertThisInitialized","_this2","_ref$duration","duration","_ref$level","level","_ref$position","position","_ref$modal","modal","_ref$actions","actions","levelVariant","anchorOrigin","isArray","indx","txt","autoHideDuration","actionsCbMap","map","identityFn","actionButtons","Button","key","color","size","snackbarKey","enqueueSnackbar","variant","onClickAction","e","closeSnackbar","clientAction","target","textContent","setTimeout","Fragment","React","Component","success","info","warn","error","top-left","vertical","horizontal","top-center","top-right","bottom-left","bottom-center","bottom-right","p","withSnackbar","notify","directive","display","toastBase","_ref2$duration","funcQual","toast","alertBase","alert","confirmBase","_ref4","confirm","displayName","DYNAMIC_DEFAULT","discloseError","err","_ref$showUser","showUser","_ref$logIt","logIt","console","log","noOp","encode","ref","safeguard","isPlainObject","encoding","demarkObjEncoding","JSON","stringify","demarkSafeguard","str","window","btoa","obfuscate","decode","result","indexOf","atob","deobfuscate","substring","parse","storeItem","deviceStorage","setItem","fetchItem","getItem","removeItem","_localStorageAvailable","storage","x","DOMException","code","storageAvailable","keyName","keyValue","localStorage","credentialsKey","startAuthorization","bootstrapComplete","done","checkDeviceCredentials","credentials","_action$credentials","manualSignIn","processSignIn","_ref5","warnTimeout","_ref6","authService","supplementSignedInUserLoc","transform","_ref7","next","sel","getLocation","supplementSignInComplete","_ref8","signInCleanup","_ref9","_ref10","refreshUser","_ref11","supplementSignOutUser","_ref12","_ref13","toConsumableArray","toggleUITheme","setResponsiveMode","changeView","uiThemeKey","responsiveModeKey","_reducerHash3","uiTheme","_baseUIAct","responsiveMode","curView","viewName","getUITheme","getResponsiveMode","useForCellPhone","useTheme","useMediaQuery","breakpoints","down","TransitionSlide","forwardRef","Fade","assign","timeout","Slide","direction","TransitionZoom","Zoom","CenterItems","Grid","container","justify","alignItems","SignInVerifyScreen","useSelector","useDispatch","useCallback","isCellPhone","Dialog","fullScreen","TransitionComponent","DialogTitle","disableTypography","titleBar","Typography","title","noWrap","DialogContent","Avatar","lockAvatar","LockOpen_default","DialogContentText","entry","onClick","Check_default","icon","Mail_default","ExitToApp_default","padding","palette","common","white","backgroundColor","primary","main","flexGrow","margin","spacing","marginRight","inProgress","ITextField","iForm","extraProps","fieldLabel","prop","managedProps","fieldMsg","helperText","TextField","disabled","onChange","onBlur","SignInScreen","formLabel","formInProcess","formErrMsg","onSubmit","invisible","autoFocus","fullWidth","placeholder","FormHelperText","LinearProgress","border","SplashScreen","width","src","alt","progress","defaultProps","featureRoute","priority","PRIORITY","HIGH","content","isUserSignedIn","isUserSignedInUnverified","getAuthStatus","UserMenu","_useState","useState","_useState2","slicedToArray","anchorUserMenu","setAnchorUserMenu","userMenuOpen","useMemo","Boolean","openUserMenu","currentTarget","_closeUserMenu","userMenuItems","useFassets","orderedUserMenuItems","item1Key","item2Key","localeCompare","IconButton","AccountCircle_default","Menu","anchorEl","transformOrigin","onClose","closeUserMenu","fassetsKey","UserMenuItem","MenuItem","doL8tr","createFeature","define","actions.userProfileChanged","actions.signOut","actions.signIn.complete","sel.curUser","defineUse","AppMotif.UserMenuItem.cc5_AuthUserMenu","UserMenuItem_UserMenuItem","logic","route","AuthServiceAPI","constructor","use","fassetsValue","featureFlags","useWIFI","mockGPS","sandbox","AuthServiceFirebase","currentAppUser","Promise","resolve","lat","lng","firebase","auth","signInWithEmailAndPassword","fbUser","database","uid","once","snapshot","userProfile","val","_this3","currentUser","reload","sendEmailVerification","_this4","enabled","AuthServiceMock","clone","createBootstrapFn","what","fn","bootstrapWhat","setStatus","bootstrap_logic","_bootstrapAct","bootstrapFns","get","wrapup","bootstrapFnFinished","bootstrapFn","nextBootstrapFn","find","status","statusMsg","getBootstrapStatusMsg","isBootstrapComplete","actions.bootstrapComplete","appDidStart","discovery_featureName","_discovery","_reducerHash2","_reducerHash4","_discoveryAct","retrieve","fail","nextPage","filterForm","discoveryFilterFormMeta","filter","searchText","distance","minprice","nextPageToken","discoveriesResp","pagetoken","discoveries","getInProgress","getFilter","getNextPageToken","getDiscoveries","distanceMsg","minpriceMsg","typeError","matches","_discoverySel","initialRetrieve","location","loc","defaultFilter","processFilter","discoveryService","searchDiscoveries","searchDiscoveriesNextPage","IRadioField","row","rowProp","msgDom","FormControl","FormLabel","RadioGroup","Op","FormControlLabel","control","Radio","checked","propTypes","PropTypes","string","isRequired","any","DiscoveryFilterScreen","priceRadioProps","Close_default","FilterList_default","DiscoveryListScreen","eateryPool","getEateryDbPool","handleNextPage","handleFilterDiscovery","toggleEateryPool","discovery","id","removeEatery","addEatery","ListItem","ListItemText","align","Tune_default","divider","ListItemIcon","CheckCircle_default","renderPoolButton","secondary","addr","push","button","FastForward_default","List","list","fontStyle","discovery_route","featureName","major","minor","dark","_defineUse","handleFilter","CloudDone_default","primaryTypographyProps","ListItemSecondaryAction","Divider","TitleComp","FooterComp","Tooltip","DiscoveryServiceAPI","eateryId","DiscoveryServiceGooglePlaces","_ref$searchText","_ref$distance","_ref$minprice","miles","selCrit","radius","minPriceLevel","keyword","_resolve","_reject","googlePlacesService","nearbySearch","places","pagination","checkResponseStatus","_pagination","hasNextPage","discoveriesJson","place","gp2eatery","gp2discoveries","getDetails","placeId","eatery","_googlePlacesService","google","maps","PlacesService","document","place_id","phone","formatted_phone_number","geometry","formatted_address","vicinity","navUrl","url","website","EateryServiceAPI","baseLoc","monitorCB","EateryServiceMock","curPoolMonitor","eateries","initialEateryPoolIds","hash","eateriesMockDB","geodist","ChIJ-6rxFimpIIYRCrq8YVb3Ujs","ChIJ01VeXQymIIYRI6lnasCzx3M","ChIJ28cfCwymIIYRmTnBVitvmZ0","ChIJ2_bmEw6vIIYRS7ztDnnLpNg","ChIJ2ybOvA2mIIYRMRjz-wyjyu4","ChIJ6U-QewymIIYRzP5x_fdjwEw","ChIJ6b-WfSOmIIYRHRWCCIzhh08","ChIJ6yNtftWuIIYRJrESGu4C5fM","ChIJ6yVNhImlIIYR8tQxm8GDdi0","ChIJ6zsQedWuIIYRYmlx6sWCkUw","ChIJ76kBGjFcJ4YRwmBQteVXEyk","ChIJ7SpQ6RGmIIYRsuU_zP71sBI","ChIJ8VL0ug2mIIYRDrOWNVA6nhY","ChIJ8W3hFQymIIYRQObKMMNMyRo","ChIJ8dWgxgymIIYRyt8bRdLUXXU","ChIJ9Uw1l75cJ4YRXJ2HT-BttUU","ChIJDVhB0w2mIIYRZVLScBsQtTo","ChIJDxnIrtelIIYR8sJkRU4JuTM","ChIJDyC9Ig6mIIYRDWmrSR08N54","ChIJETttTjKkIIYRfnaTcqDqbnw","ChIJFYDeXQymIIYRh1Cion6Ta9I","ChIJG_d8TP5eJ4YR6wK6RwXBFkc","ChIJO8UE__pZJ4YROei1_1_xklM","ChIJRQDMLA2mIIYR-ZQnRWmSdnU","ChIJT4MvDBKmIIYRFjCBCX693Yc","ChIJTz6VoQumIIYRAXvVrezBp-U","ChIJW3d2Wc2lIIYRu-qs_NaSOkg","ChIJWegGCA6mIIYRYAiMKN4T4CM","ChIJX0qVUw2mIIYRNZcBBOu8Xfs","ChIJXUB3oBGmIIYRDRcvPi-pdDM","ChIJXXjcfZhcJ4YRWnFiE4ofXes","ChIJYbYLMBimIIYR_jUx5ds4Quo","ChIJaS5FoBGmIIYRTXOjqm3XxI0","ChIJaVmoJg6vIIYR9iB3FoxFfEQ","ChIJf-CSq3SmIIYR1QNnxY9r5wo","ChIJfV2h73KmIIYRRDpBV-crpB8","ChIJgTgvHA6mIIYR8-Hw_kHU-f0","ChIJi2AxW3SmIIYRmML7jsbqtb8","ChIJiUWE9A2mIIYRngo31C8qPSw","ChIJnUfNIiOmIIYRibUzWhx-PBg","ChIJnYiUJxtcJ4YRkAFmz9vshEU","ChIJp6mGj3GmIIYRfS0qjpoGsmo","ChIJpdlCODylIIYRyeE-wYHtahE","ChIJryxqrxCmIIYRtUFAh4d96BY","ChIJs_quaAymIIYRUwRs2-LHWqA","ChIJt2f3WgymIIYRb1B1S_gWc3I","ChIJu2hvxRGmIIYRaS0qajrz0ZE","ChIJuwqeNamlIIYRiCYSjKciG5c","ChIJv2VvX3GmIIYRlCIIn4WtIYY","ChIJvTnAEW6mIIYRqA7o0JRIRyA","ChIJzXUQJhimIIYR7wBw72LWWZs","discoverySearchPage1","discoverySearchPage2","divisionHit","DiscoveryServiceMock","eateries_featureName","_eateries","dbPool","_eateriesAct","changed","listView","eateryFilterFormMeta","sortOrder","selectedEateryId","viewDetail","spin","spinMsg","getDbPool","getListViewFilter","getFilteredEateries","e1","e2","getSelectedEatery","getSpinMsg","sortOrderMsg","nullable","positive","_eateriesSel","add","eateryDetail","remove","wrapUp","originalEateryService","mockEateryService","setupGuestUser","isGuest","eateryService","tearDownGuestUser","monitorDbPool","monitorDbEateryPool","closeDbPool","filteredEateries","Math","ceil","floor","randomEateryId","random","spinComplete","addToPoolPrep","fetchEateryDetail","addToPool","removeFromPool","EateryDetailScreen","handleSpin","Navigation_default","Link","href","underline","Phone_default","Link_default","DialogActions","bottomBar","SwapCalls_default","EateriesListScreen","selectedEatery","showDetail","isWiderDevice","up","useForWiderDevice","orderByDistance","currentDistance","Table","table","TableHead","TableRow","TableCell","tableHeader","TableBody","hover","subTxt","Restaurant_default","contentAsList","marginTop","top","background","verticalAlign","EateryFilterScreen","sortOrderRadioProps","eateries_route","grey","A200","actions.addEatery","actions.removeEatery","sel.getEateryDbPool","feature_defineUse","RestaurantMenu_default","EateryServiceFirebase","dbRef","off","on","set","bootstrap.initFirebase","fetch","resp","ok","text","includes","firebaseAppConfig","initializeApp","bootstrap.initGooglePlaces","googlePlacesApiKey","scriptTag","body","appendChild","baseUI_logic","LeftNav","leftNavVisible","setLeftNavVisible","_openLeftNav","closeLeftNav","leftNavItems","orderedLeftNavItems","Drawer","leftNav","onKeyDown","AppBar","Toolbar","LeftNavItem","openLeftNav","AppMotif","viewAuxiliaryContent","curViewAuxiliaryContent","matchKey","fallbackViewAuxiliaryContent","resolveCurViewAuxiliaryContent","app","appBar","toolbar","disableGutters","menuButton","Menu_default","bottom","height","overflow","paddingTop","paddingBottom","MainLayout","themeInUse","darkTheme","lightTheme","MuiThemeProvider","CssBaseline","createMuiTheme","typography","useNextVariants","ToggleUITheme","ChipIcon","MoonIcon","SunIcon","Chip","MaintainResponsiveMode","CheckedIcon","maintainResponsiveMode","defineActions","curResponsiveMode","breakpoint","About","showAbout","docsUrl","histUrl","actions.changeView","sel.curView","AppMotif.UserMenuItem.aa1_UIThemeToggle","AppMotif.UserMenuItem.aa2_MaintainResponsiveMode","AppMotif.UserMenuItem.zz8_About","fassetValidations","comp","appWillStart","curRootAppElm","setLocation","_locationAct","getCurPos","defaultLoc","mockLoc","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","geoErr","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","bootstrap.location","sel.getLocation","lastState","logActions_logic","group","curState","groupEnd","hostname","match","serviceWorker","ready","registration","unregister","doTest","cb","LowPriority_default","AppMotif.LeftNavItem.zz5_sandbox","features","eateryServiceFirebase","eateryServiceMock","discoveryServiceGooglePlaces","discoveryServiceMock","baseUI","authServiceFirebase","authServiceMock","bootstrap","initFirebase","initGooglePlaces","pwa","logActions","do$","desc","doThis","skip$","diag$","skip","configureFeatureUIntegrationTests","reducerAspect","logicAspect","routeAspect","removeAllReducers","feature","launchApp","diag","logf","disable","config","allowNoReducers$","s","test_allowNoReducers$","createReduxStore$","appReducer","middlewareArr","createStore","compose","applyMiddleware","removeAllLogic","allowNoLogic$","test_allowNoLogic$","createLogicMiddleware$","appLogic","createLogicMiddleware","removeAllRoutes","fallbackRoute","allowNoRoutes$","test_allowNoRoutes$","enable","reducerX","logicX","routeX","aspects","createReducerAspect","createLogicAspect","createRouteAspect","fallbackElm$","elm2html","elm","ReactDOMServer","renderToStaticMarkup","configureEateryNodDiagnostics","appAspects","registerRootAppElm","rootAppElm","ReactDOM","render","getElementById","__webpack_require__","d","__webpack_exports__","src_app"],"mappings":"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","file":"static/js/main.9881fced.chunk.js","sourcesContent":["/**\r\n * Standardize the ability to handle ALL errors more generically, by\r\n * adding these value-added extensions to ALL Error objects (via this\r\n * Error class polyfill - a monkey patch).\r\n * \r\n * All Error instances (created anywhere) are extended to include the\r\n * following characteristics:\r\n * \r\n * - A new error.userMsg property is defined.\r\n * \r\n *   This message is intended to be seen by users, so it should be\r\n *   suitable for human consumption:\r\n *     - both in meaning, \r\n *     - and in sanitation (so as to not reveal any internal\r\n *       architecture)\r\n * \r\n *   By default, error.userMsg = 'Unexpected Condition'\r\n *   and can be changed by: \r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n * - There is a delineation of expected vs. unexpected conditions.  For\r\n *   example:\r\n * \r\n *     - An error communicating \"invalid password\" is an expected\r\n *       condition, because it is stimulated by user input.\r\n * \r\n *     - Contrast that with an error communicating \"DB is down\", which is\r\n *       an unexpected condition, because this is outside the user's\r\n *       control.\r\n * \r\n *   This distinction is controlled by whether an error.userMsg has\r\n *   been defined (expected) or not (unexpected).\r\n * \r\n *   In other words, all errors start out as unexpected, and can be\r\n *   changed to expected by simply invoking:\r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n *   This distinction may be programmatically delineated through one of\r\n *   the following methods:\r\n *     + error.isExpected(): boolean\r\n *     + error.isUnexpected(): boolean\r\n * \r\n * - A new error.attemptingToMsg property is defined.\r\n * \r\n *   This message is also intended to be seen by users, and provides\r\n *   additional detail of what was being attempted (over and above the\r\n *   error.userMsg).\r\n * \r\n *   By default, error.attemptingToMsg = ''\r\n *   and can be changed by: \r\n *     + error.defineAttemptingToMsg(attemptingToMsg): error\r\n * \r\n * - A new error.formatUserMsg() is provided that combines all\r\n *   user-specific messages (userMsg and attemptingToMsg).\r\n * \r\n *     + error.formatUserMsg(): string\r\n * \r\n * - The toString() method has been extended to suffix the base\r\n *   toString() with user-specific messages.\r\n * \r\n * - All of the new \"defining\" methods return the receiving error,\r\n *   so as to allow them to be conveniently chained.  For example:\r\n * \r\n *     throw new Error('catastrophic details here').defineAttemptingToMsg('sign in');\r\n * \r\n * **Usage Scenarios** are as follows:\r\n * \r\n * - Error Origination\r\n * \r\n *   In throwing a new Error, you can:\r\n *     throw new Error('internal technical error details')\r\n *                 .defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                 .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n * \r\n * - Error Pass Through\r\n * \r\n *   Within a mid-level service, you may capture an error from a lower\r\n *   point and supplement it as follows:\r\n * \r\n *     catch(err) {\r\n *       throw err.defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n *     }\r\n * \r\n * - Error Consumption (by client)\r\n * \r\n *   Using these enhancements, the client can abstractly apply various\r\n *   heuristics, such as:\r\n *\r\n *     - if logging is necessary\r\n *       * if so, reveal complete context (internal details and user context)\r\n *     - if user notification necessary\r\n *       * if so supply info suitable for human consumption\r\n * \r\n *   For more usage scenarios, please refer to the discloseError.js utility.\r\n */\r\n\r\n/* eslint-disable no-extend-native */  // we are very careful NOT to break native behavior of the Error object\r\n\r\nif (!Error.prototype.defineUserMsg) { // key off of one of several extension points\r\n\r\n  /**\r\n   * Define a user-specific message, that is applicable for human\r\n   * consumption:\r\n   *  - both in meaning, \r\n   *  - and in sanitization (so as to not reveal any internal architecture).\r\n   *\r\n   * This method also delineates the error as an expected condition.\r\n   *\r\n   * @param {String} userMsg the user message to define\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineUserMsg = function(userMsg) {\r\n    this.userMsg  = userMsg;\r\n    this.expected = true;\r\n    return this;\r\n  };\r\n  Error.prototype.userMsg = \"Unexpected Condition\"; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * expected (say user input error),\r\n   * or not (say a catestrophic error).\r\n   *\r\n   * @return {boolean} error expected (true) or not (false).\r\n   */\r\n  Error.prototype.isExpected = function() {\r\n    return this.expected;\r\n  };\r\n  Error.prototype.expected = false; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * unexpected (say a catestrophic error),\r\n   * or not (say user input error).\r\n   *\r\n   * @return {boolean} error unexpected (true) or not (false).\r\n   */\r\n  Error.prototype.isUnexpected = function() {\r\n    return !this.expected;\r\n  };\r\n\r\n\r\n  /**\r\n   * Define a user-specific 'attempting to' message, that provides\r\n   * additional details of what was being attempted.\r\n   *\r\n   * Errors with this context are prefixed with ' ... attempting to: ',\r\n   * so word your phrasing appropriatly.\r\n   * \r\n   * Multiple attempting-to phrases can be used, which will be\r\n   * combined with the ', -and- ' phrase.\r\n   *\r\n   * @param {String} attemptingToMsg the user-specific attempting\r\n   * to' message.\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineAttemptingToMsg = function(attemptingToMsg) {\r\n    if (this.attemptingToMsg) // append multiples\r\n      this.attemptingToMsg += `, -and- ${attemptingToMsg}`;\r\n    else                      // initial definition\r\n      this.attemptingToMsg += ` ... attempting to: ${attemptingToMsg}`;\r\n    return this;\r\n  };\r\n  Error.prototype.attemptingToMsg = ''; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Format a user-specific message, combining all user-specific contexts.\r\n   *\r\n   * @return {string} formatted user message.\r\n   */\r\n  Error.prototype.formatUserMsg = function() {\r\n    return this.userMsg + this.attemptingToMsg;\r\n  };\r\n\r\n\r\n  /**\r\n   * Extend the Error toString() to prefix user-specfic context.\r\n   */\r\n  const prior_toString = Error.prototype.toString; // monkey patch\r\n  Error.prototype.toString = function() {\r\n    return prior_toString.call(this) + '\\n\\nUser Msg: ' + this.formatUserMsg();\r\n  };\r\n\r\n\r\n  // L8TR:\r\n  // /**\r\n  //  * Define an indicator as to the cause of this error ... used to apply\r\n  //  * various heuristics, such as whether logging is necessary.\r\n  //  *\r\n  //  * The following indicators are available:\r\n  //  *   Error.Cause {\r\n  //  *     UNEXPECTED_CONDITION        [default]\r\n  //  *     RECOGNIZED_USER_ERROR\r\n  //  *   }\r\n  //  *\r\n  //  * @param {String} cause one of Error.Cause.\r\n  //  *\r\n  //  * @return {Error} self, supporting convenient Error method chaining.\r\n  //  */\r\n  // Error.prototype.defineCause = function(cause) {\r\n  //   this.cause = cause;\r\n  //   return this;\r\n  // };\r\n  // \r\n  // Error.Cause = {\r\n  //   UNEXPECTED_CONDITION:    'UNEXPECTED_CONDITION',\r\n  //   RECOGNIZED_USER_ERROR: 'RECOGNIZED_USER_ERROR'\r\n  // };\r\n  // \r\n  // Error.prototype.cause = Error.Cause.UNEXPECTED_CONDITION; // prototype provides the default\r\n\r\n}\r\n","/**\r\n * A convenience assertion utility, typically used to validate\r\n * pre-conditions of a routine.\r\n *\r\n * **Advanced**: verify.prefix(msgPrefix) returns a higher-order\r\n *               verify() function where all messages are prefixed.\r\n *\r\n * @param {truthy} condition - a \"truthy\" condition which\r\n * must be satisfied.\r\n *\r\n * @param {string} msg - a message clarifying the condition being\r\n * checked.\r\n * \r\n * @throws {Error} an Error is thrown when the supplied condition is\r\n * NOT met.\r\n * \r\n * @private\r\n */\r\nexport default function verify(condition, msg) {\r\n  if (!condition) {\r\n    // TODO: don't think there is any benefit in logging this console.error \r\n    // console.error(`verify() constraint issue: ${msg}`); // supplement exception with error log (for react-native exposure)\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nverify.prefix = function(msgPrefix) {\r\n  return (condition, msg) => verify(condition, msgPrefix+msg);\r\n};\r\n","import {reducerHash}  from 'astx-redux-util';\r\nimport {createLogic}  from 'redux-logic';\r\nimport isEqual        from 'lodash.isequal';\r\nimport isString       from 'lodash.isstring';\r\nimport isFunction     from 'lodash.isfunction';\r\nimport verify         from 'util/verify';\r\n\r\n/**\r\n * Define the characteristics of an Intelligent Form - a reusable forms\r\n * utility that is logic-based (using redux-logic).\r\n * \r\n * A form schema provides the details about the form fields (field names,\r\n * labels, validation, etc.).  This schema is driven by Yup (a\r\n * light-weight Joi), so it is declarative and dead simple!\r\n * \r\n * Complete aspects of the form is auto generated, including actions,\r\n * logic, and reducers.  These auto-generated items implement the hard\r\n * work related to dynamically determining when field validation should\r\n * be exposed to the user (based on user touches, and form submission).\r\n * \r\n * **Bottom line**: iForms promotes **painless re-usability!** As a\r\n * **bonus**, it is logic-based, so it is **extremely simple to inject\r\n * **app-specific logic** to manipulate various business-related\r\n * **items.\r\n *\r\n *\r\n * Form Input/Output Boundaries (via App Domains)\r\n * ==============================================\r\n *\r\n * When a form is initiated, the `open` action is optionally\r\n * supplied a domain object, to initialize the form (when not\r\n * supplied all form fields start out as empty strings).\r\n *\r\n * We use the term \"domain\" in a generic way, that can\r\n * manifest itself in a variety of different things.  It can\r\n * be a real application domain object (say from an API\r\n * call), or another part of your state tree, or any\r\n * number of other things.\r\n *\r\n * Likewise, when the form is processed (via the `process`\r\n * action), the form values will be mapped back to the domain\r\n * representation (retained in the `process` action).\r\n *\r\n * This makes it convenient for your logic to operate using\r\n * app-specific structures.\r\n *\r\n * You can easily define the mapping between your domain and the form\r\n * values structure, through the optional\r\n * mapDomain2Form/mapPropsToValues parameters.  By default (when not\r\n * supplied), the domain structure is assumed to be \"one in the same\"\r\n * as the form values structure (through a straight mapping of the\r\n * well known iForm fields).\r\n *\r\n * @param {string} namedArgs.formDesc a human-interpretable description for\r\n * this form (ex: 'Sign In').\r\n *\r\n * @param {ObjectSchema} namedArgs.formSchema the Yup Schema object defining\r\n * form fields, labels, and validation characteristics.\r\n *\r\n * @param {function} namedArgs.formActionsAccessor an accessor\r\n * function that promotes our specific formActions.  A function is\r\n * used to avoid cyclic dependencies in the startup bootstrap process\r\n * (because BOTH actions and IFormMeta instances are created in-line).\r\n * API: () => formActions\r\n *\r\n * @param {function} namedArgs.formStateSelector a selector function\r\n * that promotes our specific formState, given the top-level appState.\r\n * API: (appState) => formState\r\n *\r\n * @param {function} [namedArgs.mapDomain2Form] optionally define a\r\n * mapping between an app domain object and the form values (employed\r\n * through the `open` action).  When not specified, a straight mapping\r\n * of any iForm fields is used.\r\n * API: (domain) => values\r\n *\r\n * EX:\r\n * ```\r\n *   mapDomain2Form: (domain) => ({\r\n *     id:        domain.id,\r\n *     email:     domain.email,\r\n *     firstName: domain.name.first,\r\n *     lastName:  domain.name.last\r\n *   })\r\n * ```\r\n *\r\n * @param {function} [namedArgs.mapForm2Domain] optionally define a\r\n * mapping between form values and the app domain object (employed\r\n * through the `process` action).  When not specified, a straight\r\n * mapping of the iForm values is used (i.e. domain is same as\r\n * values).\r\n * API: (castValues) => domain // NOTE: castValues have been \"cast\" to the appropriate type\r\n *\r\n * EX:\r\n * ```\r\n *   mapForm2Domain: (castValues) => ({\r\n *     id:       castValues.id,\r\n *     email:    castValues.email,\r\n *     name:  {\r\n *       first:  castValues.firstName,\r\n *       last:   castValues.lastName\r\n *     }\r\n *   })\r\n * ```\r\n *\r\n * @return {Object} IFormMeta object exposing various aspects of an\r\n * Intelligent Form ...\r\n * ```\r\n *  {\r\n *    registrar: { // auto-generated items to be externally registered\r\n *      // iForm action creators to be injected into action-u generateActions()\r\n *      formActionGenesis([appInjectedFormActions]): ActionGenesis\r\n *      \r\n *      // iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n *      formLogic(): logic[]\r\n *      \r\n *      // iForm reducer to be registered in the redux state management process\r\n *      formReducer(): function\r\n *    }\r\n * \r\n *    // the selector that promotes self's specific formState, given the top-level appState\r\n *    formStateSelector(appState): formState\r\n *\r\n *    // create an IForm helper object, providing convenience accessors/handlers, avoiding direct formState interpretation\r\n *    IForm(formState, dispatch): IForm\r\n *  }\r\n * ```\r\n */\r\nexport default function IFormMeta({formDesc,\r\n                                   formSchema,\r\n                                   formActionsAccessor,\r\n                                   formStateSelector,\r\n                                   mapDomain2Form,\r\n                                   mapForm2Domain,\r\n                                   ...unknownArgs}={}) {\r\n\r\n  // ***\r\n  // *** validate parameters\r\n  // ***\r\n\r\n  const check = verify.prefix('IFormMeta() parameter violation: ');\r\n\r\n  check(formDesc,            'formDesc is required');\r\n  check(isString(formDesc),  'invalid formDesc (expecting a string)');\r\n\r\n  check(formSchema,          'formSchema is required');\r\n  check(formSchema.validate, 'invalid formSchema (expecting a Yup Schema)'); // duck type check\r\n\r\n  check(formActionsAccessor,             'formActionsAccessor is required');\r\n  check(isFunction(formActionsAccessor), 'invalid formActionsAccessor (expecting a function)');\r\n\r\n  check(formStateSelector,             'formStateSelector is required');\r\n  check(isFunction(formStateSelector), 'invalid formStateSelector (expecting a function)');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n\r\n  // ***\r\n  // *** decompose meta info from the supplied Yup Schema (like fieldNames and labels)\r\n  // ***\r\n\r\n  // fieldNames: String[]\r\n  const fieldNames = Object.keys(formSchema.fields);\r\n\r\n  // labels: { ... fallback to fieldName when NO schema label supplied\r\n  //   fieldName1: string,\r\n  //   fieldName2: string\r\n  // }\r\n  const labels = fieldNames.reduce( (labels, fieldName) => {\r\n    labels[fieldName] = formSchema.fields[fieldName].describe().label || fieldName;\r\n    return labels;\r\n  }, {FORM: formDesc}); // initial value contains our formDesc\r\n\r\n\r\n\r\n  // ***\r\n  // *** default domain mapping functions with ones that have knowledge of our contextual fieldNames\r\n  // ***\r\n\r\n  if (!mapDomain2Form) {\r\n    mapDomain2Form = (domain) => {\r\n      return fieldNames.reduce( (values, fieldName) => {\r\n        values[fieldName] = domain[fieldName] || '';\r\n        values[fieldName] = values[fieldName].toString(); // insure string representation\r\n        return values;\r\n      }, {} );\r\n    };\r\n  }\r\n  check(isFunction(mapDomain2Form), 'invalid mapDomain2Form (expecting a function)');\r\n\r\n  if (!mapForm2Domain) {\r\n    mapForm2Domain = (castValues) => castValues;\r\n  }\r\n  check(isFunction(mapForm2Domain), 'invalid mapForm2Domain (expecting a function)');\r\n\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm action creators to be injected into action-u generateActions()\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated action creators required by self's\r\n   * iForm.\r\n   *\r\n   * @param {ActionGenesis} [appInjectedFormActions] optionally\r\n   * specify additional app-specific action creators to supplement the\r\n   * auto-generated formActions.  This is typically used to introduce\r\n   * fail/complete actions that are spawned out of app-specific logic\r\n   * modules.  NOTE: the formAction root can even become an action\r\n   * creator by promoting a top-level actionMeta node in this\r\n   * structure.\r\n   * \r\n   * @return {ActionGenesis} the auto-generated action creators\r\n   * required by self's iForm.  This is an action-u ActionGenesis\r\n   * sub-structure that is to be injected into the action-u\r\n   * generateActions() process.  The following standard iForm actions\r\n   * are defined:\r\n   * ```\r\n   *    ${formActionGenesis}: {\r\n   *      open([domain] [,formMsg])      ... activate the form state, initiating form processing\r\n   *      fieldChanged(fieldName, value) ... maintain controlled field state change (with validation)\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      fieldTouched(fieldName)        ... maintain field touched status, impacting validation dynamic exposure\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      process()                      ... process this form\r\n   *                                         NOTE 1: IForm logic will reject this action, when the form is invalid\r\n   *                                         NOTE 2: IForm logic supplements action with values (of appropriate\r\n   *                                                 data types) and domain (in app-specific structure)\r\n   *        reject(msgs)                 ... reject process action with supplied validation msgs\r\n   *      close()                        ... close this form\r\n   *\r\n   *      ...appSpecificActions()        ... app-specific action creators supplementing the auto-generated formActions\r\n   *    }\r\n   * ```\r\n   */\r\n  function formActionGenesis(appInjectedFormActions={}) {\r\n\r\n    // NOTE: As an optimization, we bypass detailed action creator validation\r\n    //       because it is a controlled invocation (by IForm components).\r\n    //       ... Even though fieldName is in the developer realm, the fieldName is validated by our IFormElm components\r\n    //       ... Here is an example ratify() for the fieldChanged() action creator:\r\n    //             ratify(fieldName, value) {\r\n    //               verify(isString(fieldName), `'${formDesc}' form fieldChanged() action creator ... fieldName param is NOT a string: ${fieldName}`);\r\n    //               verify(labels[fieldName],   `'${formDesc}' form fieldChanged() action creator ... fieldName: '${fieldName}' is NOT one of the expected fields: ${fieldNames}`);\r\n    //               verify(isString(value),     `'${formDesc}' form fieldChanged() action creator ... value param is NOT a string: ${value}`);\r\n    //               return [fieldName, value];\r\n    //             },\r\n\r\n    // define our base auto-generated action creators\r\n    const myFormActions = {\r\n\r\n      open: {         // open([domain] [,formMsg]): Action\r\n                      // > activate the form state, initiating form processing\r\n                      actionMeta: {\r\n                        traits: ['domain', 'formMsg'],\r\n                        ratify: (domain=null, formMsg=null) => [domain, formMsg],\r\n                      },\r\n      },\r\n\r\n      fieldChanged: { // fieldChanged(fieldName, value): Action\r\n                      // > maintain controlled field state change (with validation)\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName', 'value'],\r\n                      },\r\n      },\r\n\r\n      fieldTouched: { // fieldTouched(fieldName): Action\r\n                      // > maintain field touched status, impacting validation dynamic exposure\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName'],\r\n                      },\r\n      },\r\n\r\n      process: {      // process(): Action\r\n                      // > process this form\r\n                      //   NOTE 1: IForm logic will reject this action, when the form is invalid\r\n                      //   NOTE 2: IForm logic supplements action with values (of appropriate\r\n                      //           data types) and domain (in app-specific structure)\r\n                      actionMeta: {\r\n                      },\r\n\r\n        reject: {     // reject(msgs): Action\r\n                      // > reject process action with supplied validation msgs\r\n                      actionMeta: {\r\n                        traits: ['msgs'],\r\n                      },\r\n        },\r\n\r\n      },\r\n\r\n      close: {        // close(): Action\r\n                      // > close this form\r\n                      actionMeta: {\r\n                      },\r\n      },\r\n\r\n    };\r\n\r\n    // inject any app-specific actions creators\r\n    const check = verify.prefix('IFormMeta.formActionGenesis(): invalid appInjectedFormActions parameter ... ');\r\n    for (const action in appInjectedFormActions) {\r\n      check(!myFormActions[action], `${action} action is reserved as one of the auto-generated iForm actions.`);\r\n      myFormActions[action] = appInjectedFormActions[action];\r\n    }\r\n\r\n    // beam me up Scotty!\r\n    return myFormActions;\r\n  }\r\n\r\n\r\n  const validationOptions = {\r\n    abortEarly: false, // return ALL errors\r\n  };\r\n\r\n  /**\r\n   * Validate the supplied values against our schema.\r\n   *\r\n   * @param {Object} values the set of values to validate (keyed by\r\n   * fieldName).\r\n   * \r\n   * @return {promise} the async promise that resolves to msgs object\r\n   * (keyed by fieldName) containing validation messages for all\r\n   * fields.\r\n   */\r\n  function asyncValidate(values) {\r\n    return formSchema.validate(values, validationOptions)\r\n    .then( () => ({}) )  // empty msgs\r\n    .catch( yupErrs => { // transform all Yup errors into our msgs\r\n      const msgs = {};\r\n      yupErrs.inner.forEach(yupErr => {\r\n        msgs[yupErr.path] = yupErr.message;\r\n      });\r\n      return msgs;\r\n    });\r\n  }\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n  // ***\r\n\r\n  /**\r\n   * Promote the redux-logic modules that orchestrates various iForm\r\n   * characteristics, such as validation.\r\n   *\r\n   * @return {logic[]} the redux-logic modules that perform low-level\r\n   * iForm business logic (such as validation).  This should be\r\n   * registered to the app's redux-logic process.\r\n   */\r\n  function formLogic() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // promote our iForm logic[]\r\n    return [\r\n\r\n      createLogic({\r\n        name: `validateFields for '${formDesc}' form`,\r\n        type: [String(formActions.fieldChanged),\r\n               String(formActions.fieldTouched)], // if fields have initial value (i.e. never changed) this will be the first time fields are validated\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform field validation\r\n          // ... fieldChanged action has an updated value in action\r\n          const values = action.type === String(formActions.fieldChanged)\r\n                          ? {...formState.values, [action.fieldName]: action.value}\r\n                          : formState.values;\r\n          asyncValidate(values)\r\n          .then(msgs => {\r\n\r\n            // retain overall form msg if any\r\n            if (formState.msgs.FORM) {\r\n              msgs.FORM = formState.msgs.FORM;\r\n            }\r\n\r\n            // supplement our action with validation msgs\r\n            action.msgs = msgs;\r\n\r\n            // continue processing, supporting field updates, and visualizing any validation errors\r\n            allow(action);\r\n          });\r\n\r\n        },\r\n      }),\r\n\r\n\r\n      createLogic({\r\n        name: `process validation for '${formDesc}' form`,\r\n        type: String(formActions.process),\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform validation\r\n          asyncValidate(formState.values)\r\n            .then( msgs => {\r\n\r\n              // reject validation problems (via new action)\r\n              if (Object.keys(msgs).length > 0) {\r\n\r\n                // inject form msg to further highlight validation issues\r\n                msgs.FORM = 'Please resolve the highlighted issues, and try again.';\r\n\r\n                // reject current process action by re-issuing a different process.reject action\r\n                allow( formActions.process.reject(msgs) );\r\n              }\r\n\r\n              // allow clean validation (supplementing action with values/domain)\r\n              else {\r\n\r\n                // supplement our action with values/domain\r\n                const castValues = formSchema.cast(formState.values);\r\n                const domain     = mapForm2Domain(castValues);\r\n                action.values = castValues;\r\n                action.domain = domain;\r\n\r\n                allow(action);\r\n              }\r\n            });\r\n\r\n        },\r\n      }),\r\n\r\n    ];\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm reducer to be registered in the redux state management process\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated reducer required by self's iForm, that\r\n   * maintains our form's redux state.\r\n   * \r\n   * @return {function} the reducer that maintains our iForm redux\r\n   * state.  This reducer is to be registered in the redux state\r\n   * management process.  The following state shape is maintained:\r\n   * ```\r\n   *    ${formState}: { // ex: appState.auth.signInForm (null for inactive form)\r\n   *\r\n   *      labels: {       // field labels (UI promotion and validation msg content)\r\n   *        FORM:         string, // form desc\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      values: {       // field values\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      msgs: {          // validation msgs (if any) ... initial: {}\r\n   *        FORM:          string, // msg spanning entire form ... non-exist for valid\r\n   *        <fieldName1>:  string, // non-exist for valid\r\n   *        <fieldName2>:  string, // non-exist for valid\r\n   *      },\r\n   *\r\n   *      validating: {    // demarks which fields are being validated ... based on whether it has been touched by user (internal use only)\r\n   *        FORM:          boolean, // ALL fields validated (takes precedence)\r\n   *        <fieldName1>:  boolean,\r\n   *        <fieldName2>:  boolean,\r\n   *      },\r\n   *\r\n   *      inProcess: boolean, // is form being processed?\r\n   *    }\r\n   * ```\r\n   */\r\n  function formReducer() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // generate our reducer function\r\n    const myFormReducer = reducerHash({\r\n\r\n      [formActions.open]: (state, action) => {\r\n        // define our initial form values\r\n        // ... interpret optional action props\r\n        const values = action.domain\r\n                           // ... either from our supplied domain (if any)\r\n                           //     INTERPRETED by mapDomain2Form(), which can be\r\n                           //     either client supplied or our own default\r\n                         ? mapDomain2Form(action.domain)\r\n                           // ... or inject empty string for each field\r\n                           //     NOTE: we prefer to NOT handle this in mapDomain2Form,\r\n                           //           so as to NOT rely on client logic \"to do the right thing\"\r\n                         : fieldNames.reduce( (values, fieldName) => { \r\n                             values[fieldName] = '';\r\n                             return values;\r\n                           }, {});\r\n        // ... insure no miss-matched field introduced in mapDomain2Form()\r\n        //     - comparing our known fields: fieldNames: string[]\r\n        //     - to the generated object:    values:     {field1, field2, etc}\r\n        const normalizedFieldNames = fieldNames.sort();\r\n        const normalizedValueProps = Object.keys(values).sort();\r\n        verify(isEqual(normalizedFieldNames, normalizedValueProps),\r\n               `'${formDesc}' form open reducer ... miss-matched field(s) introduced in app-supplied mapDomain2Form ... generated fields: ${normalizedValueProps} ... expected fields: ${normalizedFieldNames}`);\r\n\r\n        const msgs = {};\r\n        if (action.formMsg) { // ... interpret optional action.formMsg\r\n          msgs.FORM = action.formMsg;\r\n        }\r\n\r\n        // expand a completely new formState\r\n        return {\r\n          labels,\r\n          values,\r\n          msgs,\r\n          validating: {},\r\n          inProcess: false,\r\n        };\r\n      },\r\n\r\n      [formActions.fieldChanged]: (state, action) => {\r\n\r\n        // carve out new container (supporting immutable state)\r\n        const newState = {...state};\r\n\r\n        // merge new field value\r\n        newState.values = {...state.values, [action.fieldName]: action.value};\r\n\r\n        // retain logic-injected validation msgs (within action)\r\n        newState.msgs = action.msgs;\r\n\r\n        // that's all folks\r\n        return newState;\r\n      },\r\n\r\n      [formActions.fieldTouched]: (state, action) => {\r\n        if (state.validating[action.fieldName]) {\r\n          return state; // validating indicator already set\r\n        }\r\n        else {          // set our field validating indicator to true\r\n          const newState      = {...state};\r\n          newState.validating = {...state.validating, [action.fieldName]: true};\r\n          newState.msgs       = action.msgs; // also retain validation logic-injected msgs\r\n          return newState;\r\n        }\r\n      },\r\n\r\n      [formActions.process]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.inProcess  = true; // mark form as being processed\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = {}; // clear validation msgs (form is clean)\r\n        return newState;\r\n      },\r\n\r\n      [formActions.process.reject]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = action.msgs; // retain validation logic-injected msgs\r\n        return newState;\r\n      },\r\n\r\n      [formActions.close]: (state, action) => null,\r\n\r\n    }, null); // initialState\r\n\r\n    // promote our iForm reducer function\r\n    return myFormReducer;\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define our IForm helper object\r\n  // ***\r\n\r\n  /**\r\n   * Create an IForm helper object, providing convenience\r\n   * accessors/handlers, avoiding direct formState interpretation.\r\n   *\r\n   * @param {ReduxState} formState the redux form state supporting\r\n   * self's form.\r\n   *\r\n   * @param {function} dispatch the redux dispatch function, supporting\r\n   * self's handlers.\r\n   * \r\n   * @return {Object} the IForm helper object, with the following API:\r\n   * ```\r\n   * {\r\n   *   // the label of the supplied field (or form when not supplied)\r\n   *   getLabel(fieldName='FORM'): string\r\n   *\r\n   *   // the value of the supplied field (N/A for form)\r\n   *   getValue(fieldName): string\r\n   *\r\n   *   // is supplied field value valid (or form when not supplied\r\n   *   // ... i.e. all fields in form), irrespective to whether errors are\r\n   *   // exposed to the user or not\r\n   *   isValid(fieldName='FORM'): boolean\r\n   * \r\n   *   // the validation msg of supplied field (or form when not supplied)\r\n   *   // irrespective to whether errors are exposed to the user or not\r\n   *   // - undefined/null for valid\r\n   *   getMsg(fieldName='FORM'): string\r\n   * \r\n   *   // the exposed validation msg of supplied field (or form when not\r\n   *   // supplied) - undefined/null for valid.  The exposed msg is tailored \r\n   *   // to whether validation should be exposed to the user or not \r\n   *   // (BASED ON user touches).\r\n   *   getExposedMsg(fieldName='FORM'): string\r\n   *\r\n   *   // Should validation messages be exposed for supplied field (or\r\n   *   // form when not supplied), based on user touches.\r\n   *   // \r\n   *   // This is needed to expose UI success/error icon adornment\r\n   *   // (i.e. no adornment is shown if NOT yet being validated).\r\n   *   //\r\n   *   // NOTE: Form validation (when enabled) takes precedence over\r\n   *   //       individual fields.\r\n   *   isValidationExposed(fieldName='FORM'): boolean\r\n   *\r\n   *   // is form being processed?\r\n   *   inProcess(): boolean\r\n   *\r\n   *   // Service an IForm field value change.\r\n   *   handleFieldChanged(fieldName, value): void\r\n   *\r\n   *   // Service an IForm field touched.\r\n   *   handleFieldTouched(fieldName): void\r\n   *\r\n   *   // Service an IForm process request.\r\n   *   handleProcess(): void\r\n   *\r\n   *   // Service an IForm close request.\r\n   *   handleClose(): void\r\n   * }\r\n   * ```\r\n   */\r\n  function IForm(formState, dispatch) {\r\n\r\n    // validate parameters\r\n    const check = verify.prefix('IFormMeta.IForm() parameter violation: ');\r\n    check(formState,                            'formState is required');\r\n    check(formState.labels,                     'invalid formState - does NOT conform to the IForm state');\r\n    check(formState.labels.FORM===formDesc,     `miss-matched formState - expecting ${formDesc} but received ${formState.labels.FORM}`);\r\n\r\n    check(dispatch,                             'dispatch is required');\r\n    check(isFunction(dispatch),                 'invalid dispatch (expecting a function)');\r\n\r\n\r\n    // formActions required for handler methods (below)\r\n    const formActions = formActionsAccessor();\r\n\r\n\r\n    /**\r\n     * @return {string} the label of the supplied field (or form when\r\n     * not supplied).\r\n     */\r\n    function getLabel(fieldName='FORM') {\r\n      return formState.labels[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} the value of the supplied field (N/A for form).\r\n     */\r\n    function getValue(fieldName) {\r\n      verify(fieldName || fieldName !== 'FORM', `IFormMeta.IForm.getValue() unsupported fieldName: ${fieldName}`);\r\n      return formState.values[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is supplied field value valid (or form when not supplied\r\n     * ... i.e. all fields in form), irrespective to whether errors are\r\n     * exposed to the user or not.\r\n     * @return {boolean} \r\n     */\r\n    function isValid(fieldName='FORM') {\r\n      return fieldName==='FORM'\r\n               ? Object.keys(formState.msgs).length === 0\r\n               : formState.msgs[fieldName] ? false : true; // eslint-disable-line no-unneeded-ternary\r\n    }\r\n\r\n    /**\r\n     * @return {string} the validation msg of supplied field (or form\r\n     * when not supplied) irrespective to whether errors are exposed\r\n     * to the user or not - undefined/null for valid\r\n     */\r\n    function getMsg(fieldName='FORM') {\r\n      return formState.msgs[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} exposed validation msg of supplied field (or\r\n     * form when not supplied) - undefined/null for valid.  The\r\n     * exposed msg is tailored to whether validation should be exposed\r\n     * to the user or not (BASED ON user touches).\r\n     */\r\n    function getExposedMsg(fieldName='FORM') {\r\n      return isValidationExposed(fieldName) ? formState.msgs[fieldName] : null;\r\n    }\r\n\r\n    /**\r\n     * Should validation messages be exposed for supplied field (or\r\n     * form when not supplied), based on user touches.\r\n     * \r\n     * This is needed to expose UI success/error icon adornment\r\n     * (i.e. no adornment is shown if NOT yet being validated).\r\n     *\r\n     * NOTE: Form validation (when enabled) takes precedence over\r\n     *       individual fields.\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function isValidationExposed(fieldName='FORM') {\r\n      return formState.validating.FORM || formState.validating[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is form being processed?\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function inProcess() {\r\n      return formState.inProcess;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Service an IForm field value change.\r\n     */\r\n    function handleFieldChanged(fieldName, value) {\r\n      dispatch( formActions.fieldChanged(fieldName, value) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm field touch.\r\n     */\r\n    function handleFieldTouched(fieldName) {\r\n      dispatch( formActions.fieldTouched(fieldName) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm process request.\r\n     */\r\n    function handleProcess(event) {\r\n      dispatch( formActions.process() );\r\n\r\n      // for <form onSubmit> handlers, prevent anything from being submitted to the server\r\n      // ... old technique would be to \"return false\" from the handler, \r\n      //     but this is no longer supported in react\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Service an IForm close request.\r\n     */\r\n    function handleClose() {\r\n      dispatch( formActions.close() );\r\n    }\r\n\r\n    // promote our IForm helper object\r\n    return {\r\n      getLabel,\r\n      getValue,\r\n      isValid,\r\n      getMsg,\r\n      getExposedMsg,\r\n      isValidationExposed,\r\n      inProcess,\r\n      handleFieldChanged,\r\n      handleFieldTouched,\r\n      handleProcess,\r\n      handleClose,\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** publicly expose needed IFormMeta characteristics\r\n  // ***\r\n\r\n  return {\r\n    registrar: {\r\n      formActionGenesis,\r\n      formLogic,\r\n      formReducer,\r\n    },\r\n    formStateSelector,\r\n    IForm,\r\n  };\r\n\r\n}\r\n","import verify from 'util/verify';\r\n\r\n/**\r\n * The User object representing the active user within an application,\r\n * holding their identity, authorization status, and profile.\r\n *\r\n * NOTE: Using the default constructor, a User object can always be\r\n *       made available, even when no user is signed in.\r\n *       In this case:\r\n *       - all properties will be null (or false), and\r\n *       - more importantly the getAuthStatus() and isXyz() methods will\r\n *         correctly represent the 'signedOut' status.\r\n */\r\nexport default class User {\r\n\r\n  /**\r\n   * Instantiate a User object with the supplied named parameters.\r\n   *\r\n   * See NOTE (above) in regard to the default constructor.\r\n   *\r\n   * @param {string} name the user's name (e.g. 'John Doe')\r\n   *\r\n   * @param {string} email the user's email (used as an identifier for\r\n   * authorization credentials).  A null value indicates NO user is\r\n   * signed in.\r\n   *\r\n   * @param {boolean} emailVerified indicates whether the user's\r\n   * email been verified (used in authorization credentials).\r\n   *\r\n   * @param {string} pool the user's eatery pool identifier\r\n   * (e.g. 'DateNightPool').  This identifies the set of pool eateries\r\n   * the user has to choose from, and can be shared with other users.\r\n   *\r\n   * @param {loc} guestLoc the location ({lat, lng}) of a \"guest\"\r\n   * user.  When supplied, indicates this IS a \"guest\" user\r\n   * (i.e. isGuest(): true).\r\n   *\r\n   * @param {loc} originalLoc the real location ({lat, lng}) of the\r\n   * user.  This information is used to \"reset\" the characteristics of\r\n   * \"guest\" users, when they sign out.\r\n   * \r\n   * This information is \"supplemented\" through logic modules, and is\r\n   * provided as a constructor parameter SOLELY in support of the\r\n   * clone() operation.\r\n   */\r\n                                    // INTERNAL NOTES\r\n                                    // =================\r\n  constructor({name=null,           // via app's DB userProfile.name\r\n               email=null,          // via firebase.User.email\r\n               emailVerified=false, // via firebase.User.emailVerified\r\n               pool=null,           // via app's DB userProfile.pool\r\n             //uid=null,            // via firebase.User.uid             user's unique id hash ... CURRENTLY NO NEED for this (internally available via firebase.auth().currentUser.uid)\r\n               guestLoc=null,\r\n               originalLoc=null,\r\n               ...unknownArgs}={}) {\r\n\r\n    // validate constructor parameters\r\n    const check = verify.prefix('User() constructor parameter violation: ')\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguments.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n\r\n    // retain supplied state in self\r\n    this.name          = name;\r\n    this.email         = email;\r\n    this.emailVerified = emailVerified;\r\n    this.pool          = pool;\r\n    this.guestLoc      = guestLoc;\r\n    this.originalLoc   = originalLoc;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed out\r\n   * (i.e. there is no user).\r\n   */\r\n  isUserSignedOut() {\r\n    return this.email === null;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -AND-\r\n   * their email has been verified.\r\n   */\r\n  isUserSignedIn() {\r\n    return this.email !== null && this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -HOWEVER-\r\n   * their email needs verification.\r\n   */\r\n  isUserSignedInUnverified() {\r\n    return this.email !== null && !this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return self's authorization status string, representing all\r\n   * permutations of the isXyx() methods:\r\n   * \r\n   * - 'signedOut':          the user is signed out (i.e. there is no user)\r\n   * - 'signedIn':           the user is signed in -AND- their email has been verified.\r\n   * - 'signedInUnverified': the user is signed in -HOWEVER- their email needs verification.\r\n   */\r\n  getAuthStatus() {\r\n    if (this.email) {\r\n      return this.emailVerified ? 'signedIn' : 'signedInUnverified';\r\n    }\r\n    else {\r\n      return 'signedOut';\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is a \"guest\" user.\r\n   */\r\n  isGuest() {\r\n    return this.guestLoc ? true : false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Serialize self into a pure data structure (void of any methods),\r\n   * so as to be serializable.\r\n   *\r\n   * This is useful in state managers (such as redux) where state must\r\n   * be serializable.\r\n   *\r\n   * The returned structure is suitable to be used to re-instantiate a\r\n   * User object, gaining the benefit of it's value-added methods.\r\n   * \r\n   * @returns {struct} a pure data structure of self, suitable to\r\n   * re-instantiate a User object.\r\n   */\r\n  toStruct() {\r\n    return {\r\n      name:          this.name,\r\n      email:         this.email,\r\n      emailVerified: this.emailVerified,\r\n      pool:          this.pool,\r\n      guestLoc:      this.guestLoc,\r\n      originalLoc:   this.originalLoc,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clone self into a new User object\r\n   * \r\n   * @returns {User} the new cloned User object.\r\n   */\r\n  clone() {\r\n    return new User(this.toStruct());\r\n  }\r\n\r\n};\r\n","import {combineReducers}    from 'redux';\r\nimport {reducerHash}        from 'astx-redux-util';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport {slicedReducer}      from 'feature-redux';\r\nimport {createSelector}     from 'reselect';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport _authAct             from './actions';\r\nimport User                 from './subFeatures/authService/User';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our authorization process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is NOT only used for fassets injection,\r\n//       but ALSO to delay expansion (avoiding circular dependencies\r\n//       in selector access from signInFormMeta.js)\r\nconst reducer = slicedReducer(_auth, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // the current User object (serialized to state only) ... can represent empty User - NOT signed in\r\n  user: reducerHash({\r\n    [_authAct.signIn.complete]:           (state, action) => action.user.toStruct(),\r\n    [_authAct.signIn.checkEmailVerified]: (state, action) => action.user.toStruct(), // containing updated User.emailVerified\r\n    [_authAct.userProfileChanged]:        (state, action) => action.user.toStruct(), // pulling in new profile info\r\n    [_authAct.signOut]:                   (state, action) => new User().toStruct(),  // an empty User - NOT signed in\r\n  }, new User().toStruct()), // initialState (an empty User - NOT signed in)\r\n\r\n  // SignIn iForm's reducer ... null indicates form is inactive\r\n  signInForm: signInFormMeta.registrar.formReducer(),\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n      // Our feature state root (via slicedReducer as a single-source-of-truth)\r\nconst getFeatureState  = (appState) => reducer.getSlicedState(appState);\r\nconst gfs              = getFeatureState;             // ... concise alias (used internally)\r\n\r\n\r\n             // the current User object (with all it's value-added methods)\r\n             //   LIKE: user.getAuthStatus()\r\n             //         user.isUserSignedOut()\r\n             //         user.isUserSignedIn()\r\n             //         user.isUserSignedInUnverified()\r\n             //         user.name\r\n             //         user.email\r\n             //         user.pool\r\n             //   NOTE: will always return a User object (may represent a no-user object that: isSignedOut())\r\n       const curUserStruct = (appState) => gfs(appState).user;\r\nexport const curUser       = createSelector(curUserStruct,\r\n                                            (curUserStruct) => new User(curUserStruct));\r\n\r\n             // SignIn form  related\r\nexport const isSignInFormActive = (appState) => gfs(appState).signInForm ? true : false;\r\nexport const getUserSignInForm  = (appState) => gfs(appState).signInForm;\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'auth';\r\n","import * as Yup      from 'yup';\r\nimport IFormMeta     from 'util/iForms/IFormMeta';\r\nimport _authAct      from './actions';\r\nimport * as _authSel from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Sign In',\r\n  formSchema: Yup.object().shape({\r\n    email:    Yup.string().required().email()        .label('Email'),\r\n    pass:     Yup.string().required().min(6).max(9)  .label('Password'), // TODO: add password regex check: https://dzone.com/articles/use-regex-test-password\r\n  }),\r\n  formActionsAccessor: ()         => _authAct.signIn,\r\n  formStateSelector:   (appState) => _authSel.getUserSignInForm(appState),\r\n});\r\n","import {generateActions}    from 'action-u';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\n\r\nexport default generateActions.root({\r\n  [_auth]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    autoSignIn: {  // actions.autoSignIn(): Action\r\n                   // > autoSignIn our authorization process\r\n                   actionMeta: {},\r\n\r\n      haveDeviceCredentials: {  // actions.autoSignIn.haveDeviceCredentials(credentials): Action\r\n                                // > credentials were stored on our device\r\n                                actionMeta: {\r\n                                  traits: ['credentials'],\r\n                                },\r\n      },\r\n\r\n      noDeviceCredentials: {  // actions.autoSignIn.noDeviceCredentials(): Action\r\n                              // > NO credentials were stored on our device\r\n                              actionMeta: {},\r\n      },\r\n    },\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    signIn: signInFormMeta.registrar.formActionGenesis({\r\n    \r\n      // along with additional app-specific actions:\r\n    \r\n                  // actions.signIn(email, pass): Action\r\n                  // > SignIn with supplied email/pass\r\n                  actionMeta: {\r\n                    traits: ['email', 'pass'],\r\n                  },\r\n    \r\n      complete: { // actions.signIn.complete(user): Action\r\n                  // > signIn completed successfully\r\n                  actionMeta: {\r\n                    traits: ['user'],\r\n                  },\r\n      },\r\n    \r\n      checkEmailVerified: { // actions.signIn.checkEmailVerified(): Action\r\n                            // > check to see if account email has been verified\r\n                            actionMeta: {}, // NOTE: logic supplements the action with the current user\r\n      },\r\n    \r\n      resendEmailVerification: { // actions.signIn.resendEmailVerification(): Action\r\n                                 // > resend email verification\r\n                                 //   NOTE: logic supplements action with most up-to-date user\r\n                                 actionMeta: {},\r\n      },\r\n    \r\n    }),\r\n\r\n    signOut: { // actions.signOut(): Action <<< NOTE: logic supplements action.user (with current user that is signing out)\r\n               // > sign out active user\r\n               actionMeta: {},\r\n    },\r\n\r\n    userProfileChanged: { // actions.userProfileChanged(user): Action\r\n                          // > user profile changed\r\n                          actionMeta: {\r\n                            traits: ['user'],\r\n                          },\r\n    },\r\n\r\n  },\r\n\r\n});\r\n","import React              from 'react';\r\nimport verify             from 'util/verify';\r\nimport {SnackbarProvider,\r\n        withSnackbar}     from 'notistack';\r\nimport {makeStyles}       from '@material-ui/core/styles';\r\nimport Button             from \"@material-ui/core/Button\";\r\nimport isString           from 'lodash.isstring';\r\nimport isFunction         from 'lodash.isfunction';\r\n\r\n/* eslint-disable react/jsx-pascal-case */  // for: <NotifyAPI_withSnackBar>\r\n\r\n/**\r\n * The Notify component provides user notifications through a visual\r\n * message dialog.\r\n *\r\n * User messages are initiated through a programmatic invocation,\r\n * using the functional notify() API.  Supplied directives support\r\n * a variety of scenarios, including:\r\n *   - action buttons (for acknowledgment, or confirmation, etc.)\r\n *   - timed closure of the message\r\n *   - msg levels of success, info, warn, error (impacting the dialog style/color)\r\n *   - modal and non-modal\r\n *\r\n * Notify is the fundamental component which is the basis of various\r\n * UI notifications (i.e. Toasts, Alerts, Confirmations, etc.).  It\r\n * can be used stand-alone, or indirectly through various wrappers\r\n * (promoted through named exports).  The following functions are\r\n * summarized as follows:\r\n *\r\n * ```\r\n *                                                                 auto-close         variant-color      screen           ??TODO client\r\n *                 params:                         msg             duration           level              position         modal  actions\r\n *                 ============================    ==============  =================  =================  ===============  =====  ==========================\r\n *   - notify .... ({msg,                          msg to display  1-20 seconds       'success': green   'top-left'       false  [ {txt, [action]}, ... ]\r\n *                   duration=5,                   ... supports    null: close        'info':    blue    'top-center'     true   - where action: () => void\r\n *                   level='success',                  cr/lf             via          'warn':    yellow  'top-right'             - actions ARE OPTIONAL\r\n *                   position='bottom-left',                             client       'error':   red     'bottom-left'           - ALL actions auto close\r\n *                   modal=false,                                        action                          'bottom-center'  \r\n *                   actions=[]})                                        DEFAULT: OK                     'bottom-right'\r\n *                   \r\n *   - toast ..... ({msg, duration=5, actions})                    ditto              via toast.xyz()    'bottom-left'    false  ditto\r\n *   - alert ..... ({msg, actions})                                null               via alert.xyz()    'top-center'     true   ditto\r\n *   - confirm ... ({msg, actions})                                null               via confirm.xyz()  'top-right'      true   requires client action(s)\r\n * ```\r\n *\r\n * **Setup**:\r\n *\r\n *   The Notify component is tightly controlled as a single instance\r\n *   within an entire app.  Therefore, one and only one Notify\r\n *   instance must be pre-instantiated (initially hidden) somewhere at\r\n *   the top-level of your app.\r\n *\r\n *     ```\r\n *       <React.Fragment>\r\n *         <Notify/>\r\n *         {app content}\r\n *       </React.Fragment>\r\n\r\n *       -or-\r\n *       <Notify>\r\n *         {app content}\r\n *       <Notify>\r\n *     ```\r\n * \r\n * **Usage**:\r\n * \r\n *   see docs below: `notify()`, `toast()`, `alert()`, `confirm()`\r\n * \r\n * **Module Note**:\r\n *\r\n *   This utility is housed in a lower-case `notify.js` module,\r\n *   because the general public API is a series of lower-case \"named\r\n *   exported\" functions: `notify()`, `toast()`, `alert()`,\r\n *   `confirm()`.\r\n * \r\n *   There is a \"default exported\" Notify component (which is somewhat\r\n *   unusual to find in a lower-case module), but is only used once at\r\n *   app startup, so is therefore justified (in this case).\r\n */\r\n\r\n//***\r\n//*** the top-level Notify component conveniently auto-injects the notistack <SnackbarProvider>\r\n//*** (required for our programmatic interface)\r\n//***\r\n\r\nexport default function Notify(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <SnackbarProvider maxSnack={3} dense={true} className={classes.variantSuccess}>\r\n      <NotifyAPI_withSnackBar>\r\n        {props.children}\r\n      </NotifyAPI_withSnackBar>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\n// apply snackbar variant style changes in support cr/lf\r\n// ... via: whiteSpace of 'pre-line'\r\n// ... this honors cr/lf within our snackbar items\r\nconst useStyles = makeStyles( theme => ({\r\n  variantSuccess: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantInfo: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantWarning: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantError: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n}) );\r\n\r\n\r\n//***\r\n//*** keep track of our one-and-only instance\r\n//***\r\n\r\nlet _singleton = null;\r\n\r\n\r\n//***\r\n//*** the NotifyAPI component provides our internal programmatic API\r\n//*** (see .display()), used by notify(), toast(), etc.\r\n//***\r\n\r\nclass NotifyAPI extends React.Component {\r\n\r\n  static propTypes = { // expected component props\r\n  }\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    // keep track of our one-and-only instance\r\n    verify(!_singleton, '<Notify> only ONE Notify instance should be instantiated in the app (at the top-level).');\r\n    _singleton = this;\r\n  }\r\n\r\n  // display() is the interface point to our programmatic API (notify(), toast(), etc.)\r\n  display({msg,\r\n           duration=5, // auto close duration in seconds ... DEFAULT: 5 ... use null - manual close (via actions [default to OK])\r\n           level='success',\r\n           position='bottom-left',\r\n           modal=false,\r\n           actions=[],\r\n           ...unknownArgs}={}) {\r\n\r\n    // validate the named parameters (i.e. the directive)\r\n    const check = verify.prefix('notify() parameter violation: '); // NOTE: we pretend we are: notify() (the public access point)\r\n\r\n    // ... msg\r\n    check(msg, 'directive.msg is required');\r\n    check(isString(msg),  'msg must be a string');\r\n\r\n    // ... duration\r\n    if (duration !== null) {\r\n      check(duration >= 1 && duration <= 20, `supplied duration (${duration}) must be a number between 1 and 20 (inclusive).`);\r\n    }\r\n\r\n    // ... level\r\n    check(levelVariant[level], `invalid level: '${level}', expecting one of ${Object.keys(levelVariant)}.`);\r\n\r\n    // ... position\r\n    check(anchorOrigin[position], `invalid position: '${position}', expecting one of ${Object.keys(anchorOrigin)}.`);\r\n\r\n    // ... modal\r\n    check(modal===true || modal===false, `supplied modal (${modal}) must be a boolean true/false.`);\r\n\r\n    // ... actions\r\n    check(actions,                'actions must be an Action[] array'); // defaulted to [] ... this is user error of like null or something\r\n    check(Array.isArray(actions), 'actions must be an Action[] array');\r\n    actions.forEach( (action, indx) => {\r\n      check(action.txt,           `action[${indx}].txt is required`);\r\n      check(isString(action.txt), `action[${indx}].txt be a string ... NOT: ${action.txt}`);\r\n      if (action.action) {\r\n        check(isFunction(action.action), `action[${indx}].action (when supplied) must be a function ... NOT: ${action.action}`);\r\n      }\r\n    });\r\n\r\n    // ... unknown args\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n    // maintain our display duration\r\n    const autoHideDuration = duration ? duration*1000 : null; // convert to seconds ... null indicates manual close (via actions [default to OK])\r\n\r\n    // interpret any client-supplied actions\r\n\r\n    // ... provide a default OK when NO duration and NO actions are defined\r\n    //     NOTE: When NO duration is supplied, only way to close notification is through an action!\r\n    //           If client has NO actions, we will supply one (a default OK)\r\n    if (!duration && actions.length===0) {\r\n      actions = [{txt: 'OK'}]; // do NOT mutate client-supplied actions\r\n    }\r\n\r\n    // ... maintain a actions callback map indexed by .txt (default to identityFn)\r\n    const actionsCbMap = actions.reduce( (map, action) => {\r\n      map[action.txt] = action.action || identityFn;\r\n      return map;\r\n    }, {} );\r\n    // ... define our actionButtons (supplied to enqueueSnackbar) ... empty array is ignored\r\n    const actionButtons = actions.map( (action, indx) => <Button key={indx} color=\"default\" size=\"small\">{action.txt}</Button> );\r\n\r\n\r\n    // KEY: display the notification ... using notistack's enqueueSnackbar(...)\r\n    const snackbarKey = this.props.enqueueSnackbar(msg, {\r\n      variant: levelVariant[level],\r\n      autoHideDuration,\r\n      anchorOrigin: anchorOrigin[position],\r\n      action: actionButtons,\r\n      onClickAction: (e) => {\r\n        // close this notification\r\n        this.props.closeSnackbar(snackbarKey);\r\n\r\n        // invoke client-supplied callback\r\n        // ... on delay to make any client-notification transitions more intuitive\r\n        const clientAction = actionsCbMap[e.target.textContent];\r\n        setTimeout( () => clientAction(), 400);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// our level variant (indirectly defines color -and- provides level validation)\r\nconst levelVariant = { // color NOT used\r\n  success: 'success',\r\n  info:    'info',\r\n  warn:    'warning',\r\n  error:   'error',\r\n};\r\n\r\n// our anchorOrigin, indexed by position keyword\r\nconst anchorOrigin = {\r\n  'top-left':      { vertical: 'top',    horizontal: 'left'   },\r\n  'top-center':    { vertical: 'top',    horizontal: 'center' },\r\n  'top-right':     { vertical: 'top',    horizontal: 'right'  },\r\n  'bottom-left':   { vertical: 'bottom', horizontal: 'left'   },\r\n  'bottom-center': { vertical: 'bottom', horizontal: 'center' },\r\n  'bottom-right':  { vertical: 'bottom', horizontal: 'right'  },\r\n};\r\n\r\n// a convenient identity function\r\nconst identityFn = (p)=>p;\r\n\r\n\r\n//***\r\n//*** the withSnackbar() HOC provides access to the Snackbar run-time methods:\r\n//***   + props.enqueueSnackbar(...)\r\n//***   + props.closeSnackbar(...)\r\n//*** \r\n\r\nconst NotifyAPI_withSnackBar = withSnackbar(NotifyAPI);\r\nNotifyAPI_withSnackBar.displayName = 'NotifyAPI_withSnackBar'; // ... for react debugging (NOT accomplished in withSnackbar() ... grrrrr)\r\n\r\n\r\n\r\n/**\r\n * Display a user notification - the general purpose access point,\r\n * using named directives.\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds to\r\n * display the msg before automatically closing the dialog.  If not\r\n * supplied, the dialog must be explicitly closed through a button\r\n * click.\r\n *\r\n * @param {string} [directive.level] the category level associated\r\n * with this notification (impacting background color).  One of:\r\n *  - 'success' ... the default\r\n *  - 'info'\r\n *  - 'warn'\r\n *  - 'error'\r\n *\r\n * @param {string} [directive.position] the position to display this\r\n * notification. One of:\r\n *  - 'top-left'\r\n *  - 'top-center'\r\n *  - 'top-right'\r\n *  - 'bottom-left' ... the default\r\n *  - 'bottom-center'\r\n *  - 'bottom-right'\r\n *\r\n * @param {boolean} [directive.modal] an indicator as to whether the\r\n * notification dialog is modal (true) or not (false) the default.\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   notify({\r\n *     msg:      'You have un-saved changes.\\nif you leave, your changes will NOT be saved!',\r\n *     duration: seconds,\r\n *     level:    'warn',\r\n *     position: 'bottom-right',\r\n *     modal:    true,\r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => ...callback-logic-here... },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nexport function notify(directive) {\r\n  // validate that an <Notify> has been instantiated\r\n  verify(_singleton, 'notify(): NO <Notify> instance has been established in the app root.');\r\n\r\n  // pass-through to our instance method\r\n  _singleton.display(directive);\r\n}\r\n\r\n\r\n/**\r\n * The toast() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"toast\" ... a non-modal dialog\r\n * located at the bottom-left of the screen, which is typically closed\r\n * after 5 seconds.\r\n *\r\n * Various levels can be accomplished via toast.success(),\r\n * toast.info(), toast.warn(), toast.error() ... all of which have the\r\n * same signature.  NOTE: toast() is the same as toast.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf are\r\n * supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds before\r\n * automatically closing the dialog (default: 5).  A null defers to\r\n * supplied actions to close (which in turn defaults to an OK).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *\r\n *   toast({ msg:'Hello World' });    // will close in 6 secs\r\n *\r\n *   toast.error({ msg:     `An error occurred: ${err}`, \r\n *                 duration: null }); // OK button will close\r\n *\r\n *   toast.warn({                     // will close in 3 secs -OR- when \"undo\" is clicked\r\n *     msg: 'Your item was deleted', \r\n *     actions: [\r\n *       { txt: 'undo', action: () => ...callback-logic-here... },\r\n *     ]\r\n *    })\r\n * ```\r\n */\r\nfunction toastBase({msg, duration=5, actions, ...unknownArgs}, level) {\r\n\r\n  // validate toast-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`toast${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration,\r\n    level,    // NOTE: level is defaulted by the root notify()\r\n    position: 'bottom-left',\r\n    modal: false,\r\n    actions,\r\n  });\r\n}\r\nexport function  toast(directive) { toastBase(directive);          }\r\ntoast.success  = function(directive) { toastBase(directive, 'success'); }\r\ntoast.info     = function(directive) { toastBase(directive, 'info');    }\r\ntoast.warn     = function(directive) { toastBase(directive, 'warn');    }\r\ntoast.error    = function(directive) { toastBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The alert() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"alert\" ... a modal dialog located\r\n * at the top-center of the screen, that must be acknowledged by the\r\n * user with either the default OK button, or a client-supplied\r\n * action.\r\n *\r\n * Various levels can be accomplished via alert.success(),\r\n * alert.info(), alert.warn(), alert.error() ... all of which have the\r\n * same signature.  NOTE: alert() is the same as alert.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO actions are defined, a default OK  action is injected\r\n *       that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   alert({ msg:'Hello World' });\r\n *   alert.warn({\r\n *     msg:`Your limit (${limit}) has been reached!`\r\n *     actions: [\r\n *       { txt: 'increase', action: () => ...callback-logic-here... },\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction alertBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate alert-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`alert${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-center',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  alert(directive) { alertBase(directive);          }\r\nalert.success  = function(directive) { alertBase(directive, 'success'); }\r\nalert.info     = function(directive) { alertBase(directive, 'info');    }\r\nalert.warn     = function(directive) { alertBase(directive, 'warn');    }\r\nalert.error    = function(directive) { alertBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The confirm() function is a convenience wrapper around notify()\r\n * that displays the supplied msg as a \"confirmation\" ... a modal\r\n * dialog located at the bottom-right of the screen, that must be\r\n * acknowledged through client-supplied action buttons.\r\n *\r\n * Various levels can be accomplished via confirm.success(),\r\n * confirm.info(), confirm.warn(), confirm.error() ... all of which\r\n * have the same signature.  NOTE: confirm() is the same as\r\n * confirm.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} directive.actions one or more actions - button/action\r\n * combinations.  The required Action.txt defines the button label,\r\n * and the Action.action is an option client-supplied callback.  Each\r\n * defined action will implicitly close the dialog, in addition to\r\n * invoking the optional client-supplied callback.\r\n *\r\n * Example:\r\n * ```\r\n *   confirm.warn({ \r\n *     msg: 'This is an confirm warning.\\nYou must explicitly acknowledge it.', \r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => console.log('xx Discarding Changes') },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction confirmBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate confirm-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`confirm${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  // confirm() requires client-supplied actions\r\n  check(actions && actions.length>0, 'client-specific actions are required.');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-right',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  confirm(directive) { confirmBase(directive);          }\r\nconfirm.success  = function(directive) { confirmBase(directive, 'success'); }\r\nconfirm.info     = function(directive) { confirmBase(directive, 'info');    }\r\nconfirm.warn     = function(directive) { confirmBase(directive, 'warn');    }\r\nconfirm.error    = function(directive) { confirmBase(directive, 'error');   }\r\n","import {toast, alert} from 'util/notify';\r\nimport verify         from 'util/verify';\r\n\r\nconst DYNAMIC_DEFAULT = 'DYNAMIC_DEFAULT';\r\n\r\n/**\r\n * The discloseError() utility provides a standard way to \r\n * disclose errors both to the user (toasts) and logs.\r\n *\r\n * This utility uses the heuristics defined by the\r\n * ErrorExtensionPolyfill, and therefore require it to be present.\r\n *\r\n * The emission of both user notifications and logs can be controlled,\r\n * through parameters that dynamically default (based on \"expected\"\r\n * vs. \"unexpected\" error status).\r\n *\r\n * All user notifications occur through toasts, and are sanitized:\r\n *  - showing appropriate user-level detail,\r\n *  - with more information available via a button click\r\n *\r\n * Log formats are also standardized.\r\n *\r\n * **Please Note** this function uses named parameters.\r\n *\r\n * @param {Error} err the Error object to be disclosed (logged and\r\n * user-notified).\r\n *\r\n * @param {boolean} [showUser=true] an indicator as to whether the\r\n * user should be shown this error.\r\n *\r\n * @param {boolean} [logIt=DYNAMIC_DEFAULT] an indicator as to whether\r\n * a log entry should be emitted, dynamically defaulted (LOG when err\r\n * is Unexpected, NO-LOG when Expected).\r\n */\r\nexport default function discloseError({err,\r\n                                       showUser=true,         // DEFAULT: true ................. i.e. always SHOW\r\n                                       logIt=DYNAMIC_DEFAULT, // DEFAULT: err.isUnexpected() ... i.e. LOG when Unexpected, NO-LOG when Expected\r\n                                       ...unknownArgs}={}) {\r\n\r\n  // validate parameters\r\n  try {\r\n    const check = verify.prefix('discloseError() parameter violation: ')\r\n    // ... err\r\n    check(err,           'err is required');\r\n    check(err instanceof Error, 'err must be an Error object, NOT: ', err);\r\n    // ... showUser\r\n    showUser = showUser===DYNAMIC_DEFAULT ? err.isExpected() : showUser; // dynamic DEFAULT semantics\r\n    check(showUser===true || showUser===false, 'showUser must be a boolean');\r\n    // ... logIt\r\n    logIt = logIt===DYNAMIC_DEFAULT ? err.isUnexpected() : logIt; // dynamic DEFAULT semantics\r\n    check(logIt===true || logIt===false, 'logIt must be a boolean');\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguents.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n  }\r\n  // NOTE: this handler CANNOT throw an error, \r\n  //       because it is typically used inside a promise.catch()\r\n  //       which will generate an \"Unhandled promise rejection\"\r\n  catch(e) {\r\n    console.log('YIKES ... eatery-nod-w\\'s discloseError() was attempting to report on err: ', err);\r\n    console.log('HOWEVER AN INVOCATION PROBLEM was detected in the parameters passed to discloseError()!\\n' +\r\n                '... discloseError() CANNOT throw an error (when used in a promise an \"Unhandled promise rejection\" will result)!!\\n' +\r\n                '... PLEASE FIX THE FOLLOWING INVOCATION PROBLEM: ', e);\r\n    return; // cannot throw(e) ... see log (above)\r\n  }\r\n\r\n  // show user when requested\r\n  if (showUser) {\r\n    // unexpeded errors display as error toasts with additional details link\r\n    if (err.isUnexpected()) {\r\n      toast.error({  // ... will auto close -OR- when \"details\" is clicked\r\n        msg: err.formatUserMsg(),\r\n        actions: [\r\n          { txt:    'details',\r\n            action: () => {\r\n              alert.error({ msg: `An unexpected error occurred:\r\n\r\n${err}\r\n\r\nIf this problem persists, please contact your tech support.`\r\n              });\r\n            }},\r\n        ]\r\n      });\r\n    }\r\n\r\n    // expeded errors display as warning toasts with NO additional detail\r\n    else {\r\n      toast.warn({  // ... will auto close\r\n        msg: err.formatUserMsg()\r\n      });\r\n    }\r\n        \r\n  }\r\n\r\n  // generate log entry when requested\r\n  if (logIt) {\r\n\r\n    // log the details of the error (with traceback) for tech review\r\n    // NOTE 1: we refrain from using console.warn() and console.error() \r\n    //         because of BAD semantics inferred by react-native/expo:\r\n    //          - console.warn():  generates yellow popup\r\n    //          - console.error(): kills app with \"red screen of death\"\r\n    // NOTE 2: react-native/expo appears to be doing something non standard\r\n    //         when passing error as the 2nd parameter of log():\r\n    //             log('msg', error)\r\n    //         ... in this case is merely emitting error.toString()\r\n    //         ... we can however receive a stack trace by calling log(error) as the first parameter\r\n    const prefix = err.isUnexpected() ? '*** Unexpected Error:\\n\\n' : '*** Expected Error:\\n\\n';\r\n    console.log(prefix + err);\r\n    if (err.isUnexpected()) { // produce stack traces only for unexpected errors\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * A \"no op\" function that does absolutely nothing (think IEFBR14 :-)\r\n */\r\nexport default function noOp() {\r\n}\r\n","import verify         from 'util/verify';\r\nimport isString       from 'lodash.isstring';\r\nimport isPlainObject  from 'lodash.isplainobject';\r\n\r\n\r\n/**\r\n * Encode the supplied ref into a string representation.\r\n *\r\n * - supporting an optional safeguard (obfuscate content making it\r\n *   obscure to public visibility)\r\n *\r\n * - employing embedded-recognition so the process can be reversed using\r\n *   self-recognition\r\n *\r\n * TERMINOLOGY:\r\n *\r\n * - encode:  package content into a string representation (which can\r\n *            be reversed) ... ex: obj2str\r\n *\r\n * - decode:  reverse the process of encode()\r\n *\r\n * - safeguard: obfuscate content so as to make it obscure to public\r\n *              visibility\r\n *              NOTE: this is a \"lighter weight\" process than full\r\n *                    encryption\r\n *\r\n * - embedded-recognition: the ability to recognize and reverse the\r\n *                         process of either encoding and/or\r\n *                         safeguarding, producing the original\r\n *                         ref (that was originally encoded)\r\n *\r\n * @param {string|jsonObj} ref the reference to encode\r\n * @param {boolean} [safeguard=false] an indicator as to whether the\r\n * result should be obfuscated (true) or not (false - the DEFAULT).\r\n * \r\n * @return {string} an encoded representation of the supplied ref.\r\n */\r\nexport function encode(ref, safeguard=false) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('encode(ref) parameter violation: ');\r\n\r\n  // ... ref\r\n  check(ref,                                 'ref is required');\r\n  check(isString(ref) || isPlainObject(ref), 'ref must be a string -or- an object literal. NOT: ', ref);\r\n\r\n  // ... safeguard\r\n  check(safeguard===true || safeguard===false, 'safeguard must be a boolean (true/false), NOT: ', safeguard);\r\n\r\n  // encode the supplied ref into a string representation\r\n  let encoding = ref;            // ... by default, a string is left un-touched\r\n  if (isPlainObject(encoding)) { // ... encode objects\r\n    encoding = demarkObjEncoding + JSON.stringify(encoding);\r\n  }\r\n\r\n  // safeguard, when requested\r\n  if (safeguard) {\r\n    encoding = demarkSafeguard + obfuscate(encoding);\r\n  }\r\n\r\n  // thats all folks :-)\r\n  return encoding;\r\n}\r\n\r\n\r\n/**\r\n * Decode the supplied ref, reversing the process of `encode()`.\r\n * \r\n * NOTE: `decode()` can be invoked on a non-encoded ref, in which case\r\n *       it will simply pass-through the un-encoded ref.  This is a\r\n *       convenience, and is made possible by embedded-recognition.\r\n * \r\n * @param {any} ref the reference object to decode ... either the\r\n * output of `encode()` (a recognized encoded string), or any other\r\n * reference (simply passed-through).\r\n * \r\n * @return {any} the decoded representation of the supplied ref.\r\n */\r\nexport function decode(ref) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('decode(ref) parameter violation: ');\r\n\r\n  // ... ref\r\n  check(ref, 'ref is required');\r\n\r\n  // simply pass-through any non-strig ref\r\n  if (!isString(ref)) {\r\n    return ref;\r\n  }\r\n\r\n  // KEY: at this point we know ref is a string :-)\r\n  let result = ref;\r\n\r\n  // unwind any safeguards\r\n  if (result.indexOf(demarkSafeguard) === 0) {\r\n    result = result.substring(demarkSafeguard.length);\r\n    result = deobfuscate(result);\r\n  }\r\n\r\n  // unwind any encodings\r\n  if (result.indexOf(demarkObjEncoding) === 0) {\r\n    result = result.substring(demarkObjEncoding.length);\r\n    result = JSON.parse(result);\r\n  }\r\n\r\n  // thats all folks :-)\r\n  return result;\r\n}\r\n\r\n// embedded-recognition keywords\r\nconst demarkObjEncoding = 'obj2str:';\r\nconst demarkSafeguard   = 'afesa'; // ... use a obsecure phrase, so as to NOT \"stand out\"\r\n                                   //     - pig Latin for \"safe\"\r\n                                   //     - preventing it from being uniquely identified\r\n                                   //       and harvested within a global deployment\r\n\r\n\r\nfunction obfuscate(str) {\r\n  if (!window.btoa) {\r\n    throw new Error('*** ERROR *** encode(): ENCODING NOT supported by this browser (btoa).');\r\n  }\r\n  const encoding = window.btoa(str);\r\n  return encoding;\r\n}\r\n\r\nfunction deobfuscate(str) {\r\n  if (!window.atob) {\r\n    throw new Error('*** ERROR *** encode(): DECODING NOT supported by this browser (atob).');\r\n  }\r\n  const clearTxt = window.atob(str);\r\n  return clearTxt;\r\n}\r\n","import verify         from 'util/verify';\r\nimport isString       from 'lodash.isstring';\r\nimport isPlainObject  from 'lodash.isplainobject';\r\nimport noOp           from 'util/noOp';\r\nimport {encode,\r\n        decode}       from 'util/encoder';\r\n\r\n/**\r\n * Store the supplied entry in local device storage.\r\n *\r\n * @param {string} key the unique key that catalogs this entry.\r\n * @param {string|jsonObj} ref the reference to store.\r\n * @param {boolean} [safeguard=false] an indicator as to whether the\r\n * entry should be obfuscated (true) or not (false - the DEFAULT).\r\n */\r\nexport function storeItem(key, ref, safeguard=false) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('storeItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // ... ref\r\n  check(ref,                                 'ref is required');\r\n  check(isString(ref) || isPlainObject(ref), 'ref must be a string -or- an object literal, NOT: ', ref);\r\n\r\n  // ... safeguard\r\n  check(safeguard===true || safeguard===false, 'safeguard must be a boolean (true/false), NOT: ', safeguard);\r\n\r\n  // encode the supplied ref into a string representation\r\n  // SUPPORTING:\r\n  //   - object encoding (to a string representation)\r\n  //     NOTE: plain strings are NOT altered in this operation\r\n  //   - safeguard (obfuscation)\r\n  const value = encode(ref, safeguard);\r\n\r\n  // store the entry into our deviceStorage\r\n  deviceStorage.setItem(key, value);\r\n}\r\n\r\n\r\n/**\r\n * Fetch the stored entry from local device storage.\r\n *\r\n * @param {string} key the unique key that catalogs this entry.\r\n * \r\n * @return {any} the entry stored from the supplied key (null for\r\n * none), implicitly unpacked to the original ref (supplied to\r\n * `storeItem()`).\r\n */\r\nexport function fetchItem(key) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('fetchItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // retrieve the entry from our deviceStorage\r\n  const value = deviceStorage.getItem(key);\r\n\r\n  // no-op for non-existent entries\r\n  if (!value) {\r\n    return null;\r\n  }\r\n\r\n  // decode the entry, unpacking it into the original form (ref)\r\n  const ref = decode(value);\r\n\r\n  // that's all folks :-)\r\n  return ref;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Remove the stored entry from local device storage.\r\n *\r\n * @param {string} key the unique key of the entry to remove.\r\n */\r\nexport function removeItem(key) {\r\n\r\n  // validate our parameters\r\n  const check = verify.prefix('removeItem() parameter violation: ');\r\n\r\n  // ... key\r\n  check(key,           'key is required');\r\n  check(isString(key), 'key must be a string, NOT: ', key);\r\n\r\n  // remove the entry from our local device storage\r\n  deviceStorage.removeItem(key);\r\n}\r\n\r\n\r\n\r\n\r\n//***\r\n//*** Abstract the Web Storage API (gracefully no-oping for unsupported browsers)\r\n//***\r\n//***  NOTE 1: This API is synchronous!\r\n//***  NOTE 2: Apparently this API is available on both http (non SSL) as well as https (SSL).\r\n//***\r\n\r\n// feature detection\r\n// ... NOTE: can't just assert window.localStorage exists\r\n//           see: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\r\nconst _localStorageAvailable = storageAvailable('localStorage');\r\nfunction storageAvailable(type) {\r\n  let storage;\r\n  try {\r\n    storage = window[type];\r\n    let x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  }\r\n  catch(e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n           // acknowledge QuotaExceededError only if there's something already stored\r\n           (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n// log warning when deviceStorage is NOT in affect\r\nif (!_localStorageAvailable) {\r\n  console.warn('***WARNING*** deviceStorage module ... localStorage (Web Storage API) is NOT available in this browser ... all deviceStorage usage will silently no-op!!');\r\n}\r\n\r\n// our localStorage pass-through that gracefully no-ops for unsupported browsers\r\nconst deviceStorage = _localStorageAvailable ? {\r\n  setItem:    (keyName, keyValue) => window.localStorage.setItem(keyName, keyValue),\r\n  getItem:    (keyName)           => window.localStorage.getItem(keyName),\r\n  removeItem: (keyName)           => window.localStorage.removeItem(keyName),\r\n} : {\r\n  setItem:    noOp,\r\n  getItem:    noOp,\r\n  removeItem: noOp,\r\n};\r\n\r\n// TEMP crude test of deviceStorage ... invoke these separately!\r\n// deviceStorage.setItem('WowZeeKey', 'WowZeeValue');\r\n// console.log(`test deviceStorage ... '${deviceStorage.getItem('WowZeeKey')}'`);\r\n","import {storeItem,\r\n        fetchItem,\r\n        removeItem}   from 'util/deviceStorage';\r\n\r\n/**\r\n * Store credentials on local device in an encoded form.\r\n * \r\n * @param {string} email the email (id) to store.\r\n * @param {string} pass the password to store.\r\n */\r\nexport function storeCredentials(email, pass) {\r\n  storeItem(credentialsKey,\r\n            {email, pass},\r\n            true); // safeguard\r\n}\r\n\r\n/**\r\n * Fetch credentials stored on local device (if any).\r\n * \r\n * @return {object} the credentials object if any (null for none):\r\n *   {\r\n *     email: string,\r\n *     pass:  string\r\n *   }\r\n */\r\nexport function fetchCredentials() {\r\n  return fetchItem(credentialsKey);\r\n}\r\n\r\n/**\r\n * Remove credentials from local device.\r\n */\r\nexport function removeCredentials() {\r\n  removeItem(credentialsKey);\r\n}\r\n\r\nconst credentialsKey = 'credentials';\r\n","import {createLogic}        from 'redux-logic';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport _auth                from './featureName';\r\nimport _authAct             from './actions';\r\nimport {curUser}            from './state';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport discloseError        from 'util/discloseError';\r\nimport {toast}              from 'util/notify';\r\nimport {fetchCredentials,\r\n        storeCredentials,\r\n        removeCredentials}  from './credentialsStorage';\r\n\r\n/**\r\n * Start our authorization process, once the bootstrap initialization process is complete.\r\n * \r\n * NOTE: We could auto-start our auth process (via feature-u app life cycle handlers),\r\n *       except our downstream processes are dependent on device.loc, so we wait and\r\n *       trigger the process here.\r\n */\r\nexport const startAuthorization = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_auth}.startAuthorization`,\r\n  type: String(fassets.actions.bootstrapComplete),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.autoSignIn() );\r\n    done();\r\n  },\r\n}));\r\n\r\n\r\n/**\r\n * Monitor authorization startup, fetching credentials stored on device (if any).\r\n */\r\nexport const checkDeviceCredentials = createLogic({\r\n\r\n  name: `${_auth}.checkDeviceCredentials`,\r\n  type: String(_authAct.autoSignIn),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    const credentials = fetchCredentials();\r\n    if (credentials) {\r\n      dispatch( _authAct.autoSignIn.haveDeviceCredentials(credentials) );\r\n    }\r\n    else {\r\n      dispatch( _authAct.autoSignIn.noDeviceCredentials() );\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Auto SignIn, when device credentials exist.\r\n */\r\nexport const autoSignIn = createLogic({\r\n\r\n  name: `${_auth}.autoSignIn`,\r\n  type: String(_authAct.autoSignIn.haveDeviceCredentials),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n    const {email, pass} = action.credentials;\r\n    dispatch( _authAct.signIn(email, pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Manual SignIn, when NO device credentials exist, or user signs out.\r\n */\r\nexport const manualSignIn = createLogic({\r\n\r\n  name: `${_auth}.manualSignIn'`,\r\n  type: [\r\n    String(_authAct.autoSignIn.noDeviceCredentials),\r\n    String(_authAct.signOut),\r\n  ],\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn.open() );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Interactive SignIn form processor.\r\n */\r\nexport const processSignIn = createLogic({\r\n\r\n  name: `${_auth}.processSignIn`,\r\n  type: String(_authAct.signIn.process),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn(action.values.email, action.values.pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn logic.\r\n */\r\nexport const signIn = createLogic({\r\n\r\n  name: `${_auth}.signIn`,\r\n  type: String(_authAct.signIn),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY signin using our firebase service is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    \r\n    fassets.authService.signIn(action.email, action.pass)\r\n\r\n           .then( user => { // user has successfully signed in\r\n\r\n             // retain these credentials on our device (to streamline subsequent app launch)\r\n             storeCredentials(action.email, action.pass);\r\n\r\n             // communicate a new user is in town\r\n             dispatch( _authAct.signIn.complete(user) );\r\n\r\n             done();\r\n           })\r\n\r\n           .catch( (err) => {\r\n             discloseError({err,\r\n                            showUser: err.isUnexpected()}); // expected errors are shown to the user via the re-direction to the signIn screen (see next step)\r\n\r\n             // re-direct to SignIn form, prepopulated with appropriate msg\r\n             dispatch( _authAct.signIn.open(action, err.formatUserMsg()) ); // NOTE: action is a cheap shortcut to domain (contains email/pass) ... pre-populating sign-in form with last user input\r\n\r\n             done();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signed-in user's originalLoc (in support of re-setting\r\n * \"guest\" users on sign-out.\r\n */\r\nexport const supplementSignedInUserLoc = createLogic({\r\n\r\n  name: `${_auth}.supplementSignedInUserLoc`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n    action.user.originalLoc = fassets.sel.getLocation(getState());\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signIn complete action by triggering profile.changed action,\r\n * causing eateries view to populate.\r\n */\r\nexport const supplementSignInComplete = createLogic({\r\n\r\n  name: `${_auth}.supplementSignInComplete`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // NOTE: Currently, this is the only place where userProfileChanged is dispatched.\r\n    //       It stimulates the eateries view to get the ball rolling (displaying the correct pool)\r\n    //       In the future, userProfileChanged is dispatched dynamically, when the user has the ability to change their pool.\r\n    dispatch( _authAct.userProfileChanged(action.user) ); // use the same user from our our monitored action!!\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn cleanup.\r\n */\r\nexport const signInCleanup = createLogic({\r\n\r\n  name: `${_auth}.signInCleanup`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // console.log(`xx logic ${featureName}.signInCleanup: user.status: '${curUser(getState()).getAuthStatus()}'`);\r\n    dispatch( _authAct.signIn.close() ); // we are done with our signIn form\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Check to see if account email has been verified.\r\n */\r\nexport const checkEmailVerified = createLogic({\r\n\r\n  name: `${_auth}.checkEmailVerified`,\r\n  type: String(_authAct.signIn.checkEmailVerified),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    toast({ msg:`verifying your email: ${curUser(getState()).email}` });\r\n    // fetch the most up-to-date user\r\n    fassets.authService.refreshUser()\r\n           .then( user => {\r\n             // supplement action with the most up-to-date user\r\n             action.user = user;\r\n             next(action);\r\n           })\r\n           .catch( err => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n\r\n             // nix the entire action\r\n             reject();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Resend Email Verification.\r\n */\r\nexport const resendEmailVerification = createLogic({\r\n\r\n  name: `${_auth}.resendEmailVerification`,\r\n  type: String(_authAct.signIn.resendEmailVerification),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    toast({ msg:`resending email to: ${curUser(getState()).email}` });\r\n    fassets.authService.resendEmailVerification()\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signOut action with active user (in support of re-setting\r\n * \"guest\" users on sign-out.\r\n */\r\nexport const supplementSignOutUser = createLogic({\r\n\r\n  name: `${_auth}.supplementSignOutUser`,\r\n  type: String(_authAct.signOut),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n    action.user = curUser(getState());\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignOut logic.\r\n */\r\nexport const signOut = createLogic({\r\n\r\n  name: `${_auth}.signOut`,\r\n  type: String(_authAct.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    fassets.authService.signOut()\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    removeCredentials();\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default expandWithFassets( (fassets) => [\r\n\r\n  startAuthorization(fassets),\r\n\r\n  checkDeviceCredentials,\r\n  autoSignIn,\r\n  manualSignIn,\r\n\r\n  // signIn logic (NOTE: form logic just be registered BEFORE app-specific logic)\r\n  ...signInFormMeta.registrar.formLogic(), // inject the standard SignIn form-based logic modules\r\n  processSignIn,\r\n\r\n  supplementSignedInUserLoc,\r\n  signIn,\r\n  supplementSignInComplete,\r\n  signInCleanup,\r\n\r\n  checkEmailVerified,\r\n  resendEmailVerification,\r\n\r\n  supplementSignOutUser,\r\n  signOut,\r\n]);\r\n","import {generateActions} from 'action-u';\r\nimport _baseUI           from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_baseUI]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    toggleUITheme: { // actions.toggleUITheme(): Action\r\n                     // > toggle the UI Theme ('light'/'dark')\r\n                     actionMeta: {},\r\n    },\r\n\r\n    setResponsiveMode: {  // actions.setResponsiveMode(responsiveMode): Action\r\n                          // > change the responsiveMode to the supplied value ('md'/'lg'/'off')\r\n                          actionMeta: {\r\n                            traits: ['responsiveMode'],\r\n                          },\r\n    },\r\n\r\n    changeView: {  // actions.changeView(viewName): Action\r\n                   // > change the curView to the supplied viewName\r\n                   actionMeta: {\r\n                     traits: ['viewName'],\r\n                   },\r\n    },\r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'baseUI';\r\n","import {storeItem,\r\n        fetchItem,\r\n        removeItem}   from 'util/deviceStorage';\r\n\r\n/**\r\n * Store uiTheme on local device.\r\n * \r\n * @param {string} uiTheme the UI Theme to store.\r\n */\r\nexport function storeUITheme(uiTheme) {\r\n  storeItem(uiThemeKey, uiTheme);\r\n}\r\n\r\n/**\r\n * Fetch uiTheme stored on local device (if any).\r\n * \r\n * @return {string} the persisted UI Theme (null for none).\r\n */\r\nexport function fetchUITheme() {\r\n  return fetchItem(uiThemeKey);\r\n}\r\n\r\n/**\r\n * Remove uiTheme from local device.\r\n */\r\nexport function removeUITheme() {\r\n  removeItem(uiThemeKey);\r\n}\r\n\r\nconst uiThemeKey = 'uiTheme';\r\n","import {storeItem,\r\n        fetchItem,\r\n        removeItem}   from 'util/deviceStorage';\r\n\r\n/**\r\n * Store the responsiveMode on local device.\r\n * \r\n * @param {string} responsiveMode the \"responsive mode\" to store.\r\n */\r\nexport function storeResponsiveMode(responsiveMode) {\r\n  storeItem(responsiveModeKey, responsiveMode);\r\n}\r\n\r\n/**\r\n * Fetch responsiveMode stored on local device (if any).\r\n * \r\n * @return {string} the persisted \"responsive mode\" (null for none).\r\n */\r\nexport function fetchResponsiveMode() {\r\n  return fetchItem(responsiveModeKey);\r\n}\r\n\r\n/**\r\n * Remove responsiveMode from local device.\r\n */\r\nexport function removeResponsiveMode() {\r\n  removeItem(responsiveModeKey);\r\n}\r\n\r\nconst responsiveModeKey = 'responsiveMode';\r\n","import {expandWithFassets}    from 'feature-u';\r\nimport {combineReducers}      from 'redux';\r\nimport {reducerHash}          from 'astx-redux-util';\r\nimport {slicedReducer}        from 'feature-redux';\r\nimport _baseUI                from './featureName';\r\nimport _baseUIAct             from './actions';\r\nimport {fetchUITheme}         from './uiThemeStorage';\r\nimport {fetchResponsiveMode}  from './responsiveModeStorage';\r\n\r\n\r\n// ***\r\n// *** Our feature reducer, managing our state.\r\n// ***\r\n\r\nconst reducer = slicedReducer(_baseUI, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // uiTheme: 'light'/'dark'\r\n  uiTheme: reducerHash({\r\n    [_baseUIAct.toggleUITheme]: (state, action) => state==='dark' ? 'light' : 'dark',\r\n  }, fetchUITheme() ), // initialState (default to a persistent state)\r\n\r\n  // responsiveMode: 'md'/'lg'/'off'\r\n  responsiveMode: reducerHash({\r\n    [_baseUIAct.setResponsiveMode]: (state, action) => action.responsiveMode,\r\n  }, fetchResponsiveMode() || 'sm' ), // initialState (from device storage, default to small (a tablet))\r\n\r\n  // loc: {lat, lng} ... device GPS location\r\n  curView: reducerHash({\r\n    [_baseUIAct.changeView]:   (state, action) => action.viewName,\r\n    [fassets.actions.signOut]: (state, action) => 'eateries', // AI: Innappropriate app knowledge dependancy (really part of an @@INIT app payload) ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, 'uninitialized'), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n/** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState           = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;      // ... concise alias (used internally)\r\n\r\n                                  /** UI Theme: 'light'/'dark' */\r\nexport const getUITheme         = (appState) => gfs(appState).uiTheme || 'light'; // default to 'light' (on first occurrence -or- deviceStorage() NOT supported)\r\n\r\n                                  /** Responsive Mode: 'md'/'lg'/'off' */\r\nexport const getResponsiveMode  = (appState) => gfs(appState).responsiveMode;\r\n\r\n                                  /** current view (ex: 'eateries') */\r\nexport const curView            = (appState) => gfs(appState).curView;\r\n","import {useTheme}           from '@material-ui/core/styles';\r\nimport useMediaQuery        from '@material-ui/core/useMediaQuery';\r\nimport {useSelector}        from 'react-redux'\r\nimport {getResponsiveMode}  from 'features/common/baseUI/state'\r\n\r\n\r\n/**\r\n * A react hook promoting a boolean indicator (true/false) as to\r\n * whether the device's width represents a typical cell phone.\r\n * \r\n * @return {boolean} see description (above)\r\n */\r\nexport function useForCellPhone() {\r\n  const theme       = useTheme();\r\n  const isCellPhone = useMediaQuery(theme.breakpoints.down('xs')); // available breakpoints: xs/sm/md/lg/xl\r\n\r\n  return isCellPhone;\r\n}\r\n\r\n\r\n/**\r\n * A react hook promoting a boolean indicator (true/false) as to\r\n * whether the device's width is sufficient to be considered a tablet\r\n * (or greater - such as a desktop).\r\n *\r\n * @return {boolean} see description (above)\r\n *\r\n * @deprecated ... currently NOT used\r\n */\r\nexport function useForTabletPlus() {\r\n  const theme        = useTheme();\r\n  const isTabletPlus = useMediaQuery(theme.breakpoints.up('md')); // breakpoints: xs/sm/md/lg/xl\r\n\r\n  return isTabletPlus;\r\n}\r\n\r\n\r\n/**\r\n * A react hook promoting a boolean indicator (true/false) as to\r\n * whether the device's width is sufficient to be filled with more\r\n * content (such as a tablet or desktop).\r\n *\r\n * This algorithm is based on the breakpoint defined in the\r\n * reactiveMOde state, which can be controlled by the user -AND-\r\n * disabled.\r\n *\r\n * @return {boolean} see description (above)\r\n */\r\n\r\nexport function useForWiderDevice() {\r\n  const responsiveMode  = useSelector( (appState) => getResponsiveMode(appState), [] );\r\n  const theme           = useTheme();\r\n  const isWiderDevice   = useMediaQuery(theme.breakpoints.up(responsiveMode)); // NOTE: theme.breakpoints.up('off'): false\r\n\r\n  return isWiderDevice;\r\n}\r\n","import React  from 'react';\r\nimport Fade   from '@material-ui/core/Fade';\r\nimport Slide  from '@material-ui/core/Slide';\r\nimport Zoom   from '@material-ui/core/Zoom';\r\n\r\n//***\r\n//*** Common Transition components used throughout our app :-)\r\n//***\r\n\r\nexport const TransitionFade  = React.forwardRef( (props, ref) => <Fade  ref={ref} timeout=\"1000\"                   {...props} /> );\r\nexport const TransitionSlide = React.forwardRef( (props, ref) => <Slide ref={ref} direction=\"right\" timeout=\"1000\" {...props} /> );\r\nexport const TransitionZoom  = React.forwardRef( (props, ref) => <Zoom  ref={ref} timeout=\"1000\"                   {...props} /> );\r\n","import React from 'react';\r\nimport Grid  from '@material-ui/core/Grid';\r\n\r\n/**\r\n * A component that centers all contained children within a Grid (both horizontally and vertically).\r\n */\r\nexport default function CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n/**\r\n * A component that horizontally centers all contained children within a Grid.\r\n * AI: Currently not used (added in an attempt to fix icon alignment with text, but found better solution)\r\n */\r\nexport function CenterItemsHorizontally({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n","import React,\r\n       {useCallback}     from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}     from 'react-redux'\r\nimport {makeStyles}      from '@material-ui/core/styles';\r\nimport {useForCellPhone} from 'util/responsiveBreakpoints';\r\n\r\nimport _authAct          from '../actions';\r\nimport * as _authSel     from '../state';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport CheckIcon         from '@material-ui/icons/Check';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport MailIcon          from '@material-ui/icons/Mail';\r\nimport SignOutIcon       from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\nimport CenterItems       from 'util/CenterItems';\r\n\r\n\r\n/**\r\n * SignInVerifyScreen requesting email verification completion.\r\n */\r\nexport default function SignInVerifyScreen() {\r\n\r\n  const email = useSelector((appState) => _authSel.curUser(appState).email, []);\r\n\r\n  const dispatch                = useDispatch();\r\n  const checkEmailVerified      = useCallback(() => dispatch( _authAct.signIn.checkEmailVerified() ),      []);\r\n  const resendEmailVerification = useCallback(() => dispatch( _authAct.signIn.resendEmailVerification() ), []);\r\n  const signOut                 = useCallback(() => dispatch( _authAct.signOut() ),                        []);\r\n  const isCellPhone             = useForCellPhone();\r\n  const classes                 = useStyles();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <CenterItems>\r\n          <Avatar className={classes.lockAvatar}>\r\n            <LockIcon/>\r\n          </Avatar>\r\n        </CenterItems>\r\n        <CenterItems>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Sign In Verification\r\n          </Typography>\r\n        </CenterItems>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Your account email has not been verified.\r\n        </DialogContentText>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Please follow the instructions from the email sent to: {email}\r\n        </DialogContentText>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Typography variant=\"body2\">\r\n              ... once completed:\r\n            </Typography>\r\n          </CenterItems>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={checkEmailVerified}>\r\n              <CheckIcon className={classes.icon}/>\r\n              Continue\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={resendEmailVerification}>\r\n              <MailIcon className={classes.icon}/>\r\n              Resend Email\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={signOut}>\r\n              <SignOutIcon className={classes.icon}/>\r\n              Sign Out\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n\r\n}) );\r\n","import React        from 'react';\r\nimport TextField    from '@material-ui/core/TextField';\r\nimport PropTypes    from 'prop-types';\r\nimport verify       from 'util/verify';\r\n\r\n/**\r\n * An IForm text input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * Usage:\r\n *   <ITextField fieldName=\"myFieldName\" ... the IFormMeta fieldName\r\n *               iForm={IForm}\r\n *               ... extra props from material-ui TextField comp\r\n *                   EX:\r\n *                   autoFocus\r\n *                   type=\"number\"\r\n *                   helperText=\"... help text here\"/>\r\n *                   ... etc.\r\n */\r\nexport default function ITextField({fieldName, iForm, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<ITextField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  ['label', 'value', 'disabled', 'onChange', 'onBlur', 'error'].forEach(\r\n    (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  );\r\n\r\n  // compute field success/error adornments\r\n  // ... dynamically exposed based on user field touches\r\n  const managedProps = {};\r\n  if (iForm.isValidationExposed(fieldName)) {\r\n    const fieldMsg = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n    if (fieldMsg) { // error adornment\r\n      managedProps.error      = true;     // mark field with error color\r\n      managedProps.helperText = fieldMsg; // overwrite helperText to hold the field error message\r\n    }\r\n  }\r\n\r\n  // emit an ITextField that is auto-wired to the supplied iForm\r\n  return (\r\n    <TextField label={fieldLabel}\r\n               value={iForm.getValue(fieldName)}\r\n               disabled={iForm.inProcess()}\r\n               onChange={(event) => iForm.handleFieldChanged(fieldName, event.target.value)}\r\n               onBlur={() => iForm.handleFieldTouched(fieldName)}\r\n               {...extraProps}\r\n               {...managedProps}/>\r\n  );\r\n}\r\n\r\nITextField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n};\r\n","import React             from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}     from 'react-redux'\r\nimport {makeStyles}      from '@material-ui/core/styles';\r\nimport {useForCellPhone} from 'util/responsiveBreakpoints';\r\n\r\nimport signInFormMeta    from '../signInFormMeta';\r\nimport ITextField        from 'util/iForms/comp/ITextField';\r\nimport {toast}           from 'util/notify';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport InProgress        from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport SignInIcon        from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\nimport CenterItems       from 'util/CenterItems';\r\n\r\n\r\n/**\r\n * SignInScreen: gather user sign-in credentials.\r\n */\r\nexport default function SignInScreen() {\r\n\r\n  const dispatch    = useDispatch();\r\n  const formState   = useSelector((appState) => signInFormMeta.formStateSelector(appState), []);\r\n  const isCellPhone = useForCellPhone();\r\n  const classes     = useStyles();\r\n\r\n  const iForm = signInFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel     = iForm.getLabel();\r\n  const formInProcess = iForm.inProcess();\r\n  const formErrMsg    = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <form onSubmit={iForm.handleProcess}>\r\n          <fieldset className={classes.invisible} disabled={formInProcess}>\r\n\r\n            <CenterItems>\r\n              <Avatar className={classes.lockAvatar}>\r\n                <LockIcon/>\r\n              </Avatar>\r\n            </CenterItems>\r\n            <CenterItems>\r\n              <Typography variant=\"h6\" noWrap>\r\n                {formLabel}\r\n              </Typography>\r\n            </CenterItems>\r\n\r\n            <DialogContentText className={classes.entry}>\r\n              Welcome to Eatery Nod ... please {formLabel}!\r\n            </DialogContentText>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"email\"\r\n                          iForm={iForm}\r\n                          autoFocus\r\n                          required\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          placeholder=\"jon.snow@gmail.com\"\r\n                          helperText=\"your email is your ID\"/>\r\n            </div>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"pass\"\r\n                          iForm={iForm}\r\n                          required\r\n                          fullWidth\r\n                          type=\"password\"/>\r\n            </div>\r\n\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <SignInIcon className={classes.icon}/>\r\n                {formLabel}\r\n              </Button>\r\n            </CenterItems>\r\n            <FormHelperText error>{formErrMsg}</FormHelperText>\r\n\r\n            {formInProcess && (\r\n               <div className={classes.entry}>\r\n                 <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n               </div>\r\n             )}\r\n\r\n            <div className={classes.entry}>\r\n              <CenterItems>\r\n                <Typography variant=\"body2\" color=\"secondary\">\r\n                  ... don't have an account?\r\n                </Typography>\r\n              </CenterItems>\r\n              <CenterItems>\r\n                <Button variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={()=>toast.warn({ msg:'Sign Up has not yet been implemented.' })}>\r\n                  <SignInIcon className={classes.icon}/>\r\n                  Sign Up\r\n                </Button>\r\n              </CenterItems>\r\n            </div>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  // our fieldset is strictly strictly to disable all inputs/submit when form is in-process\r\n  invisible: {\r\n    border:  '0 none',\r\n    margin:  0,\r\n    padding: 0,\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n\r\n}) );\r\n","import React             from 'react';\r\nimport PropTypes         from 'prop-types';\r\n\r\nimport {makeStyles}      from '@material-ui/core/styles';\r\nimport {useForCellPhone} from 'util/responsiveBreakpoints';\r\n\r\nimport Progress          from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\n\r\n\r\n/**\r\n * A modal SplashScreen used when there is nothing else to display :-)\r\n *\r\n * The SplashScreen will responsively/dynamically utilize the full\r\n * screen for cell phone devices.\r\n *\r\n * NOTE: Currently we dynamically size based on the message content,\r\n *       within the constraint of the screen.  Not sure if I like\r\n *       this or not ... it is good for cell phones, but can be rather\r\n *       small for browsers (typically the message is pretty small).\r\n *       FYI: This is pretty much the default behavior of <Dialog>.\r\n *            I spend a small amount of time to override this without\r\n *            any success.\r\n */\r\nexport default function SplashScreen({msg}) {\r\n\r\n  const isCellPhone = useForCellPhone();\r\n  const classes     = useStyles();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionZoom}>\r\n    \r\n      <DialogTitle className={classes.title}>\r\n        <center className={classes.title}>Eatery Nod</center>\r\n      </DialogTitle>\r\n    \r\n      <DialogContent>\r\n        <center>\r\n          <br/>\r\n          <img width=\"120px\" src='/eatery.png' alt='eatery-nod'/>\r\n          <br/>\r\n          <Progress className={classes.progress} color=\"secondary\"/>\r\n          <Typography variant=\"body2\">{msg}</Typography>\r\n          <br/>\r\n        </center>\r\n      </DialogContent>\r\n    \r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nSplashScreen.propTypes = {\r\n  msg: PropTypes.string,\r\n};\r\n\r\nSplashScreen.defaultProps = {\r\n  msg: '',\r\n};\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  title: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  progress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n}) );\r\n","import React               from 'react';\r\nimport * as _authSel       from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\n\r\nimport SignInVerifyScreen  from './comp/SignInVerifyScreen';\r\nimport SignInScreen        from './comp/SignInScreen';\r\nimport SplashScreen        from 'util/SplashScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    const user = _authSel.curUser(appState);\r\n\r\n    // when user is FULLY signedIn/verified\r\n    // ... allow down-stream features to route further (i.e. app-specific screens)\r\n    if (user.isUserSignedIn()) {\r\n      return null;\r\n    }\r\n\r\n    // when user is signed in BUT unverified\r\n    // ... display email verification screen\r\n    if (user.isUserSignedInUnverified()) {\r\n      return <SignInVerifyScreen/>;\r\n    }\r\n\r\n\r\n    // ***\r\n    // *** at this point we know user is unauthorized (either signed out, or in-transition)\r\n    // ***\r\n\r\n    // display interactive SignIn, when form is active (accomplished by our logic)\r\n    if (_authSel.isSignInFormActive(appState)) {\r\n      return <SignInScreen/>;\r\n    }\r\n\r\n    // display interactive SignUp, when form is active (accomplished by our logic)\r\n    // TODO: check for signUpForm (WHEN SUPPORTED)\r\n    \r\n    // fallback: communicate route transition condition\r\n    // NOTES:\r\n    //  1) we MUST issue a route to prevent downstream feature visualization too early\r\n    //  2) it can occur under the following conditions:\r\n    //     a) a slow server-side sign-in process\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     b) during transition between startup/auth features\r\n    //        ... where logic is in the process of activating one of the auth form screens\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     c) an error condition (say some change that impacts our route logic)\r\n    //        ... this is an unexpected condition\r\n    //        ... SO, we expose the user-status context in the message (for diagnostics)\r\n    const msg = `authorization in progress (${user.getAuthStatus()})`;\r\n    return <SplashScreen msg={msg}/>;\r\n  },\r\n\r\n});\r\n","import React,\r\n       {useState,\r\n        useCallback,\r\n        useMemo}      from 'react';\r\nimport PropTypes      from 'prop-types';\r\n\r\nimport {useFassets}   from 'feature-u';\r\n\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport Menu           from '@material-ui/core/Menu';\r\nimport UserIcon       from '@material-ui/icons/AccountCircle';\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * UserMenu: our UserMenu component that accumulates menu items via use contract.\r\n */\r\nexport default function UserMenu({curUser}) {\r\n\r\n  const [anchorUserMenu, setAnchorUserMenu] = useState(null);\r\n  const userMenuOpen = useMemo(() => Boolean(anchorUserMenu), [anchorUserMenu]);\r\n\r\n  const openUserMenu = useCallback((event) => setAnchorUserMenu(event.currentTarget), []);\r\n  _closeUserMenu     = useCallback(()      => setAnchorUserMenu(null),                []);\r\n\r\n  const userMenuItems        = useFassets('AppMotif.UserMenuItem.*@withKeys');\r\n  const orderedUserMenuItems = useMemo(() => (\r\n    [...userMenuItems].sort(([item1Key], [item2Key]) => item1Key.localeCompare(item2Key))\r\n  ), [userMenuItems]);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton color=\"inherit\"\r\n                  onClick={openUserMenu}>\r\n        <UserIcon/>\r\n        <Typography variant=\"subtitle2\" color=\"inherit\" noWrap>\r\n          &nbsp;{curUser.name}\r\n        </Typography>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorUserMenu}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={userMenuOpen}\r\n            onClose={closeUserMenu}>\r\n        {orderedUserMenuItems.map( ([fassetsKey, UserMenuItem]) => <UserMenuItem key={fassetsKey}/> )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserMenu.propTypes = {\r\n  curUser: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\n\r\n/**\r\n * Utility function that closes our user menu.\r\n */\r\nexport function closeUserMenu() { // exported for use by our own: UserMenuItem\r\n  if (_closeUserMenu) {\r\n    _closeUserMenu();\r\n  }\r\n}\r\nlet _closeUserMenu = null;\r\n","import React           from 'react';\r\nimport PropTypes       from 'prop-types';\r\nimport MenuItem        from '@material-ui/core/MenuItem';\r\nimport {closeUserMenu} from './UserMenu';\r\n\r\n/**\r\n * UserMenuItem: our UserMenuItem - a MenuItem wrapper that auto-closes the UserMenu.\r\n */\r\nexport default function UserMenuItem(props) {\r\n\r\n  // value-added onClick that auto-closes the UserMenu\r\n  const myOnClick = (...args) => {\r\n    // auto-close the UserMenu\r\n    closeUserMenu()\r\n\r\n    // pass-through to client onClick()\r\n    if (props.onClick) {\r\n      props.onClick(...args);\r\n    }\r\n  };\r\n\r\n  // wrap <MenuItem>\r\n  return (\r\n    <MenuItem {...props} onClick={myOnClick}>{props.children}</MenuItem>\r\n  );\r\n}\r\n\r\nUserMenuItem.propTypes = {\r\n  children: PropTypes.node.isRequired, // UserMenuItem content is required (i.e. the label)\r\n};\r\n","import React,\r\n       {useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\nimport _authAct      from '../actions';\r\nimport {toast,\r\n        confirm}     from 'util/notify';\r\n\r\n/**\r\n * AuthUserMenu: our user-profile menu items (in the App Header)\r\n */\r\nexport default function AuthUserMenu() {\r\n\r\n  const dispatch = useDispatch();\r\n  const signOut  = useCallback(() => {\r\n    confirm.warn({ \r\n      msg: 'Are you sure you wish to sign out?', \r\n      actions: [\r\n        { txt: 'Sign Out', action: () => dispatch( _authAct.signOut() ) },\r\n        { txt: 'Go Back' }\r\n      ]\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <UserMenuItem onClick={doL8tr}>User Profile</UserMenuItem>\r\n      <UserMenuItem onClick={signOut}>Sign Out</UserMenuItem>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction doL8tr() {\r\n  toast.warn({msg: 'NOT implemented yet (coming soon)!'})\r\n}\r\n","import {createFeature}  from 'feature-u';\r\nimport _auth            from './featureName';\r\nimport _authAct         from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (signInFormMeta)\r\nimport reducer,\r\n       {curUser}        from './state';\r\nimport logic            from './logic';\r\nimport route            from './route';\r\nimport AuthUserMenu     from './comp/AuthUserMenu';\r\n\r\n// feature: auth\r\n//          promote complete user authentication service (full details in README)\r\nexport default createFeature({\r\n  name: _auth,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      // actions:\r\n      'actions.userProfileChanged': _authAct.userProfileChanged, // userProfileChanged(user) NOTE: PUBLIC for eateries to monitor, and for future use (when user can change their pool)\r\n      'actions.signOut':            _authAct.signOut,            // signOut()\r\n      'actions.signIn.complete':    _authAct.signIn.complete,    // signIn.complete(user)\r\n\r\n      // selectors:\r\n      'sel.curUser': curUser, // full blown User object\r\n    },\r\n\r\n    defineUse: {\r\n      // inject our user-profile menu items (in the App Header)\r\n      'AppMotif.UserMenuItem.cc5_AuthUserMenu': AuthUserMenu,\r\n    },\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n});\r\n","/**\r\n * AuthServiceAPI is a \"pseudo\" interface specifying the AuthService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceAPI {\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signIn() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.refreshUser() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.resendEmailVerification() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signOut() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature} from 'feature-u';\r\nimport AuthServiceAPI  from './AuthServiceAPI';\r\n\r\n// feature: authService\r\n//          promote a persistent authentication service API (retaining\r\n//          active user) through the `authService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'authService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['authService', {required: true, type: objectOfTypeAuthServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeAuthServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof AuthServiceAPI ? null : 'object of type AuthServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","/**\r\n * featureFlags (see description below)\r\n */\r\n\r\nexport default {\r\n\r\n  useWIFI: true,  // should app use WIFI? ... regulates various services: real/mocked\r\n\r\n  mockGPS: false, // should app mock GPS? ... regulates util/deviceLocation.js getCurPos():  real/mocked\r\n                  // false: use real device location\r\n                  // true:  mock device location (default to Glen Carbon IL)\r\n                  // {lat, lng}: specify mocked location, example:\r\n                  //             {lat: 40.48643,  lng: -86.1336}   ... Kokomo IN\r\n                  //             {lat: 42.60559,  lng: -83.14993}  ... Troy MI\r\n                  //             {lat: 30.010479, lng: -90.119414} ... New Orleans, LA\r\n                  //             {lat: 38.752209, lng: -89.986610} ... Glen Carbon IL\r\n\r\n  log:     false, // should app emit diagnostic logs?\r\n                  // false:     no logs\r\n                  // true:      generate 'non verbose' logs (e.g. actions will NOT include redux state)\r\n                  // 'verbose': generate 'verbose'     logs (e.g. actions WILL     include redux state)\r\n\r\n  sandbox: false, // should app enable diagnostic sandbox controls?\r\n};\r\n","import firebase       from 'firebase/app';\r\nimport                     'firebase/auth';\r\nimport                     'firebase/database';\r\nimport AuthServiceAPI from '../authService/AuthServiceAPI';\r\nimport User           from '../authService/User';\r\n\r\n/**\r\n * AuthServiceFirebase is the **real** AuthServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceFirebase extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   * \r\n   * NOTE: Firebase also maintains it's rendition of current user,\r\n   *       available via `firebase.auth().currentUser`.  However, this\r\n   *       service supplements the user with additional information\r\n   *       from the app's DB userProfile.\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // detect guest signin and resolve immediately\r\n      if (pass === 'guestNO' && email.indexOf('guestNO@') === 0) { // New Orleans guest ... ex: guestNO@gmail.com/guestNO\r\n        // NOTE: appears to be working without a delay from say a timeout\r\n        this.currentAppUser = new User({\r\n          name:          'Harry',\r\n          email,\r\n          emailVerified: true,\r\n          pool:          'mockNO',\r\n          guestLoc:      {lat: 30.010479, lng: -90.119414}, // New Orleans, LA\r\n        });\r\n        return resolve(this.currentAppUser);\r\n      }\r\n      \r\n      // signin through firebase authentication\r\n      firebase.auth().signInWithEmailAndPassword(email, pass)\r\n              .then( fbUser => { // fbUser:  <firebase.User>: https://firebase.google.com/docs/reference/js/firebase.User\r\n                                 // same as: firebase.auth().currentUser\r\n\r\n                // supplement the signed-in fbUser with our app's DB userProfile\r\n                const dbRef = firebase.database().ref(`/userProfiles/${fbUser.user.uid}`);\r\n                dbRef.once('value')\r\n                     .then( snapshot => {\r\n\r\n                       const userProfile = snapshot.val();\r\n                       // console.log(`xx AuthServiceFirebase.signIn() userProfile: `, userProfile)\r\n\r\n                       // communicate issue: missing userProfile in our DB\r\n                       if (!userProfile) {\r\n                         return reject(\r\n                           new Error(`***ERROR*** No userProfile exists for user: ${fbUser.user.email}`)\r\n                             .defineAttemptingToMsg('sign in to eatery-nod (your user profile does NOT exist)')\r\n                         );\r\n                       }\r\n\r\n                       // retain/communicate our user object, populated from both the fbUser and userProfile\r\n                       this.currentAppUser = new User({\r\n                         name:          userProfile.name,\r\n                         email:         fbUser.user.email,\r\n                         emailVerified: fbUser.user.emailVerified,\r\n                         pool:          userProfile.pool,\r\n                       });\r\n                       // console.log(`xx MOCK RECORDING from AuthServiceFirebase.signIn(...): returning User: ${JSON.stringify(this.currentAppUser.toStruct())}`);\r\n                       return resolve(this.currentAppUser);\r\n                     })\r\n\r\n                     .catch( err => { // unexpected error\r\n                       return reject(err.defineAttemptingToMsg('sign in to eatery-nod (a problem was encountered fetching your user profile)'));\r\n                     });\r\n\r\n              })\r\n\r\n              .catch( (err) => {\r\n                // NOTE: When firebase:\r\n                //       - provides an err.code, this enumerates a user specific credentials problem (like \"invalid password\")\r\n                //         ... we do NOT expose this to the user (so as to NOT give hacker insight)\r\n                //             rather we generalize it to the user ('Invalid SignIn credentials.')\r\n                //       - when NO err.code is supplied, it represents an unexpected condition\r\n                if (err.code) { // expected condition\r\n                  err.defineUserMsg('Invalid SignIn credentials.'); // make generic ... do NOT expose err.code to the user\r\n                }\r\n                else { // unexpected condition\r\n                  err.defineAttemptingToMsg('sign in to eatery-nod');\r\n                }\r\n                return reject(err);\r\n              });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.refreshUser(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('refresh a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // refresh our current signed-in user\r\n      firebase.auth().currentUser.reload()\r\n\r\n              .then( () => { // NOTE: this service returns void ... however, the firebase.auth().currentUser has been updated!\r\n\r\n                const fbUser = firebase.auth().currentUser;\r\n\r\n                // refresh our signed-in user\r\n                // ... just for good measure, we create a new instance of this.currentAppUser, rather than mutating the existing one\r\n                //     - just in case it is held directly in redux\r\n                //     - even though client SHOULD use user.toStruct()\r\n                this.currentAppUser = new User({\r\n                  name:          this.currentAppUser.name,  // keep same (from our db profile)\r\n                  email:         fbUser.user.email,         // refresh   (from current firebase auth)\r\n                  emailVerified: fbUser.user.emailVerified, // refresh   (from current firebase auth)\r\n                  pool:          this.currentAppUser.pool,  // keep same (from our db profile)\r\n                });\r\n\r\n                // communicate our refreshed signed-in user\r\n                return resolve(this.currentAppUser);\r\n              })\r\n\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('refresh the signed-in user'));\r\n              });\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    // verify we have a current user to resend to\r\n    if (this.currentAppUser === null) {\r\n      // unexpected condition\r\n      throw new Error('***ERROR*** (within app logic) AuthServiceFirebase.resendEmailVerification(): may only be called once a successful signIn() has completed.')\r\n        .defineAttemptingToMsg('resend an email verification to a non-existent user (not yet signed in)');\r\n    }\r\n\r\n    // issue the email request\r\n    firebase.auth().currentUser.sendEmailVerification();\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.signOut(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('sign-out a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // issue the signout request\r\n      firebase.auth().signOut()\r\n              .then( () => {\r\n                this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n              })\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('sign-out the user'));\r\n              });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}     from 'feature-u';\r\nimport featureFlags        from 'featureFlags';\r\nimport AuthServiceFirebase from './AuthServiceFirebase';\r\n\r\n// feature: authServiceFirebase \r\n//          defines the real 'authService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'authServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceFirebase(),\r\n    },\r\n  },\r\n\r\n});\r\n","import AuthServiceAPI from '../authService/AuthServiceAPI';\r\nimport User           from '../authService/User';\r\n\r\n/**\r\n * AuthServiceMock is the **mock** AuthServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceMock extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n\r\n  signIn(email, pass) { // ... see AuthServiceAPI\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // stimulate various errors with variations in email/pass\r\n      if (pass === 'unexpect') { // ... unexpected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Simulated Unexpected Condition`)\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      if (pass === 'expect') { // ... expected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Invalid Password`) // do NOT expose details to the user (e.g. Invalid Password)\r\n            .defineUserMsg('Invalid SignIn credentials.') // keep generic\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      // define our mock user\r\n      this.currentAppUser = new User({\r\n        \"name\":          \"MockGuy\",\r\n        email,\r\n        \"emailVerified\": false,\r\n        \"pool\":          \"mock\"\r\n      });\r\n\r\n      // sign in the supplied user\r\n      if (pass === 'unverify') { // ... simulate user unverified\r\n        return resolve(this.currentAppUser);\r\n      }\r\n\r\n      // ... all other cases: user is verified\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  refreshUser() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      // very simple mock ... assume they have now been verified\r\n      this.currentAppUser = this.currentAppUser.clone();\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  resendEmailVerification() { // ... see AuthServiceAPI\r\n    // NOTHING TO DO :-)\r\n  }\r\n\r\n\r\n  signOut() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n      return resolve(undefined);\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags';\r\nimport AuthServiceMock  from './AuthServiceMock';\r\n\r\n// feature: authServiceMock\r\n//          defines the mock 'authService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'authServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import isFunction  from 'lodash.isfunction';\r\nimport isString    from 'lodash.isstring';\r\nimport verify      from 'util/verify';\r\n\r\n/**\r\n * Embellish the supplied function with a `bootstrapWhat` property -\r\n * used by the `bootstrap` feature to set it's status.\r\n *\r\n * A bootstrapFn is required by the `'bootstrap.*'` fassets use\r\n * contract.\r\n * \r\n * @param {string} what - a description of what is being bootstrapped\r\n * (e.g. 'Waiting for bla bla bla').\r\n * \r\n * @param {function} fn - the function to be embellished with the\r\n * `bootstrapWhat` property.  The API of this function is:\r\n *   + fn({getState, dispatch, fassets})): promise - resolving void (promise used for error handling)\r\n *\r\n * @return {bootstrapFn} the supplied fn parameter, embellished with a\r\n * `bootstrapWhat` property.\r\n */\r\nexport function createBootstrapFn(what, fn) {\r\n\r\n  // validate parameters\r\n  const check = verify.prefix('createBootstrapFn() parameter violation: ');\r\n\r\n  check(what,           'what is required');\r\n  check(isString(what), 'what must be a string');\r\n\r\n  check(fn,             'fn is required');\r\n  check(isFunction(fn), 'fn must be a function');\r\n\r\n  // embellish/return the supplied function\r\n  fn.bootstrapWhat = what;\r\n  return fn;\r\n}\r\n\r\n\r\n/**\r\n * Return an indicator as to whether the supplied `ref` parameter is a\r\n * bootstrapFn.\r\n * \r\n * @param {any} ref - the reference item to validate.\r\n *\r\n * @return {boolean} true: if bootstrapFn, false otherwise.\r\n */\r\nexport function isBootstrapFn(ref) {\r\n  return ref && isFunction(ref) && ref.bootstrapWhat;\r\n}\r\n\r\n\r\n/**\r\n * A bootstrapFn validator conforming to feature-u's fassetValidation\r\n * API ... see: https://feature-u.js.org/cur/api.html#fassetValidations\r\n * \r\n * @param {any} fassetsValue - the fassets value to validate.\r\n *\r\n * @return {string} null: valid bootstrapFn -or-\r\n *                  'bootstrapFn': NOT a valid bootstrapFn (used in feature-u Error content).\r\n */\r\nexport function isFassetBootstrapFn(fassetsValue) {\r\n  return isBootstrapFn(fassetsValue) ? null : 'bootstrapFn';\r\n}\r\n\r\n","import {generateActions} from 'action-u';\r\nimport _bootstrap        from './featureName';\r\n\r\nexport default generateActions.root({\r\n                   // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n  [_bootstrap]: { // actions(): Action ... the root IS an action (e.g. bootstrap() action)\r\n                   // > start boostrap initialization process\r\n                   actionMeta: {},\r\n\r\n    setStatus: { // actions.setStatus(statusMsg): Action\r\n                 // > set bootstrap status (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n                 actionMeta: {\r\n                   traits: ['statusMsg'],\r\n                 },\r\n    },\r\n\r\n    // the fundamental action that indicates the bootstrap process is complete\r\n    // ... monitored by down-stream features (to start the app running),\r\n    complete: { // actions.complete(): Action\r\n                // > bootstrap is complete and app is ready to start\r\n                actionMeta: {},\r\n    },\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'bootstrap';\r\n","import {createLogic}      from 'redux-logic';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\nimport discloseError      from '../../../util/discloseError';\r\n\r\n/**\r\n * Administer the \"bootstrap\" initialization process, initiated by\r\n * dispatching the `bootstrap()` action.\r\n * \r\n * A bootstrapFn is a client-specific critical-path initialization that\r\n * must be completed before the app can run.\r\n * \r\n * Bootstraps can be supplied by any number of features, under the\r\n * `'bootstrap.*'` fassets use contract.  These are functions (created\r\n * through `createBootstrapFn()`), that perform any critical-path\r\n * client-specific initialization.  All bootstraps will run to\r\n * completion before this administrative process is finished (as\r\n * denoted by the `bootstrap.complete()` action).\r\n * \r\n * Actions that are emitted by this process are:\r\n * \r\n *  - bootstrap.setStatus(statusMsg)\r\n *  \r\n *    Status is a human interpretable representation of the bootstrap\r\n *    process (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE').\r\n * \r\n *    This status is used by our SplashScreen, informing the user\r\n *    of what is going on.\r\n * \r\n *  - client-specific actions\r\n * \r\n *    These actions can optionally emitted by client-specific\r\n *    bootstrapFns.  As an example, a device feature's bootstrapFn may\r\n *    need to retain it's GPS location.\r\n * \r\n *  - bootstrap.complete()\r\n * \r\n *    This is a **fundamental result** of the bootstrap process\r\n *    completion.  It indications that all bootstraps have completed,\r\n *    and the app is fully initialized and ready to run.\r\n * \r\n *    This action is typically monitored by an external feature to\r\n *    start the app.\r\n */\r\nexport const bootstrap = createLogic({\r\n\r\n  name: `${_bootstrap}`,        // our featureName IS the module name (bootstrap)\r\n  type: String(_bootstrapAct),  // our base actions IS the bootstrap() action\r\n  warnTimeout: 0, // long-running process (runs till all bootstrap initialization has completed)\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n\r\n    // identify the various bootstrap items to process\r\n    // ... employing our use contract\r\n    const bootstrapFns = fassets.get('bootstrap.*'); // bootstrapFn[]\r\n\r\n    // initialize all bootstrapFns to an un-processed status\r\n    bootstrapFns.forEach( (bootstrapFn) => bootstrapFn.complete = false );\r\n\r\n    // helper to \"wrapup\" when all bootstrap initialization has completed\r\n    function wrapup() {\r\n      dispatch( _bootstrapAct.setStatus('COMPLETE') ); // maintain our status as complete\r\n      dispatch( _bootstrapAct.complete() );            // the fundamental action that triggers downstream processes\r\n      done();\r\n    }\r\n\r\n    // no-op if there are NO bootstrapFns ... there is nothing to do\r\n    if (bootstrapFns.length === 0) {\r\n      wrapup();\r\n      return;\r\n    }\r\n\r\n    // helper that monitors the completion of each bootstrapFn\r\n    // ... optionally with the supplied err\r\n    function bootstrapFnFinished(bootstrapFn, err=null) {\r\n\r\n      // mark bootstrapFn as completed\r\n      // ... unless there is an unexpected error\r\n      if (!err || !err.isUnexpected()) {\r\n        bootstrapFn.complete = true;\r\n      }\r\n\r\n      // handle error conditions\r\n      if (err) {\r\n        // add the \"what\" context to this raw error\r\n        err.defineAttemptingToMsg(bootstrapFn.bootstrapWhat);\r\n\r\n        // disclose the error to the user -and- log it\r\n        discloseError({err, logIt:true});\r\n      }\r\n\r\n      // change our status to one of the \"open\" un-processed bootstrapFns\r\n      // ... giving user visibility of what is being done\r\n      // ... e.g. 'Waiting for bla bla bla'\r\n      const nextBootstrapFn = bootstrapFns.find( (bootstrapFn) => !bootstrapFn.complete );\r\n      if (nextBootstrapFn) {\r\n        dispatch( _bootstrapAct.setStatus(nextBootstrapFn.bootstrapWhat) );\r\n      }\r\n\r\n      // when ALL bootstrapFns have completed, we are done!!!\r\n      // ... we have successfully initialized ALL bootstrapFns\r\n      // ... otherwise we keep going\r\n      //     - even when we are hung with one bootstrapFn that errored\r\n      //       ... because this process is a critical path that must complete\r\n      //       ... there is no subsequent work that will be done in the entire app\r\n      if (!nextBootstrapFn) {\r\n        wrapup();\r\n      }\r\n\r\n    }\r\n\r\n    // \"prime the pump\" by setting our status to the FIRST bootstrapFn\r\n    // ... giving user visibility of what is being done\r\n    // ... e.g. 'Waiting for bla bla bla'\r\n    dispatch( _bootstrapAct.setStatus(bootstrapFns[0].bootstrapWhat) );\r\n    \r\n    // asynchronously kick off each each bootstrapFn process\r\n    // ... via promise\r\n    bootstrapFns.forEach(bootstrapFn => {\r\n      bootstrapFn({getState, dispatch, fassets})\r\n        .then( () => {\r\n          // console.log(`xx resolving bootstrapFn IN logic processor ... bootstrap.${bootstrapFn.bootstrapWhat}`);\r\n          bootstrapFnFinished(bootstrapFn);\r\n        })\r\n        .catch( (err) => {\r\n          // console.log(`xx error caught invoking bootstrap.${bootstrapFn.bootstrapWhat}: `, err);\r\n          bootstrapFnFinished(bootstrapFn, err);\r\n        });\r\n    });\r\n\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  bootstrap,\r\n];\r\n","import {combineReducers}  from 'redux';\r\nimport {reducerHash}      from 'astx-redux-util';\r\nimport {slicedReducer}    from 'feature-redux';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\n\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for the bootstrap process.\r\n// ***\r\nconst reducer = slicedReducer(_bootstrap, combineReducers({\r\n\r\n  // status: string ... bootstrap status - 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n  //                    - VISIBLE in the SplashScreen startup\r\n  //                      ... via selector: getBootstrapStatusMsg(appState)\r\n  //                    - USED to determine when our app is ready to start\r\n  //                      ... via selector: isBootstrapComplete(appState)\r\n  status: reducerHash({\r\n    [_bootstrapAct.setStatus]: (state, action) => action.statusMsg,\r\n  }, 'Waiting for App to start'), // initialState\r\n\r\n}) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                               /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState        = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;   // ... concise alias (used internally)\r\n\r\n\r\n                                     /** Is app ready to start (based on our bootstrap status): boolean */\r\nexport const isBootstrapComplete   = (appState) => gfs(appState).status === 'COMPLETE';\r\n                                     /** Bootstrap status message: string ('Waiting for bla bla bla' -or- 'COMPLETE') */\r\nexport const getBootstrapStatusMsg = (appState) => gfs(appState).status;\r\n","import React                   from 'react';\r\nimport {isBootstrapComplete,\r\n        getBootstrapStatusMsg} from './state';\r\nimport {featureRoute, \r\n        PRIORITY}              from 'feature-router';\r\nimport SplashScreen            from 'util/SplashScreen';\r\n\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH+10,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    // promote a simple SplashScreen (with status) until the bootstrap process is complete\r\n    // NOTE: Errors from bootstrap hooks are promoted through independent user notifications (toasts)\r\n    if (!isBootstrapComplete(appState)) {\r\n      // console.log(`xx bootstrap feature router ... NOT COMPLETE: route -> SplashScreen with msg: ${getBootstrapStatusMsg(appState)}`);\r\n      return <SplashScreen msg={getBootstrapStatusMsg(appState)}/>;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n});\r\n","import {createFeature}       from 'feature-u';\r\nimport _bootstrap            from './featureName';\r\nimport {isFassetBootstrapFn} from './bootstrapFn';\r\nimport _bootstrapAct         from './actions';\r\nimport logic                 from './logic';\r\nimport route                 from './route';\r\nimport reducer               from './state';\r\n\r\n// feature: bootstrap\r\n//          initialize the app through a critical-path app initialization\r\n//          process that must complete before the app can run, using the\r\n//          `'bootstrap.*'` fassets use contract (full details in README)\r\nexport default createFeature({\r\n  name: _bootstrap,\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    // the 'bootstrap.*' use contract (see 'bootstrap' logic module)\r\n    use: [\r\n      ['bootstrap.*', {required: false, type: isFassetBootstrapFn}],\r\n    ],\r\n\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      // *** public actions ***\r\n                                   // the fundamental action, \r\n                                   // monitored by down-stream features (e.g. authorization),\r\n                                   // logically starting our app running!\r\n      'actions.bootstrapComplete': _bootstrapAct.complete, // ... slight naming variation to original action\r\n\r\n    }\r\n  },\r\n\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    // dispatch our base bootstrap action, that \"kicks off\" the app's bootstrap initialization process\r\n    dispatch( _bootstrapAct() ); // ... this base \"actions\" is the bootstrap action\r\n  }\r\n\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'discovery';\r\n","import {combineReducers}        from 'redux';\r\nimport {reducerHash}            from 'astx-redux-util';\r\nimport {expandWithFassets}      from 'feature-u';\r\nimport {slicedReducer}          from 'feature-redux';\r\nimport _discovery               from './featureName';\r\nimport discoveryFilterFormMeta  from './discoveryFilterFormMeta';\r\nimport _discoveryAct            from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our discovery process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is used NOT for app injection,\r\n//       but RATHER to delay expansion (avoiding circular dependancies\r\n//       in selector access from discoveryFilterFormMeta.js)\r\n//       >>> subsequently, fassets is now used to access fassets.actions.signOut action\r\nconst reducer = slicedReducer(`view.${_discovery}`, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // retrieval in-progress (used by BOTH filtered retrieval, and next page)\r\n  // ... null/'retrieve'/'next'\r\n  inProgress: reducerHash({\r\n\r\n    [_discoveryAct.retrieve]:          (state, action) => 'retrieve',\r\n    [_discoveryAct.retrieve.complete]: (state, action) => null,\r\n    [_discoveryAct.retrieve.fail]:     (state, action) => null,\r\n\r\n    [_discoveryAct.nextPage]:          (state, action) => 'next',\r\n    [_discoveryAct.nextPage.complete]: (state, action) => null,\r\n    [_discoveryAct.nextPage.fail]:     (state, action) => null,\r\n\r\n  }, null),  // initialState\r\n\r\n  // standard iForm reducer for our DiscoveryFilterForm\r\n  filterForm: discoveryFilterFormMeta.registrar.formReducer(),\r\n\r\n  // selection criteria (filter)\r\n  filter: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.filter,\r\n    [fassets.actions.signOut]:         (state, action) => ({searchText: '', distance: 10, minprice:   '1'}), // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, { // initialState\r\n    searchText: '',\r\n    distance:   10,\r\n    minprice:   '1',\r\n  }),\r\n\r\n  // next page token (for paging)\r\n  nextPageToken: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.discoveriesResp.pagetoken,\r\n    [_discoveryAct.nextPage.complete]: (state, action) => action.discoveriesResp.pagetoken,\r\n    [fassets.actions.signOut]:         (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n  // discoveries (data records)\r\n  discoveries: reducerHash({\r\n    [_discoveryAct.retrieve.complete]: (state, action) => action.discoveriesResp.discoveries,\r\n    [_discoveryAct.nextPage.complete]: (state, action) => [...state, ...action.discoveriesResp.discoveries], // append to state\r\n    [fassets.actions.signOut]:         (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                   /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState            = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;       // ... concise alias (used internally)\r\n\r\nexport const getInProgress       = (appState) => gfs(appState).inProgress;\r\n\r\nexport const isFormFilterActive  = (appState) => gfs(appState).filterForm ? true : false;\r\nexport const getFormFilter       = (appState) => gfs(appState).filterForm;\r\n\r\nexport const getFilter           = (appState) => gfs(appState).filter;\r\n\r\nexport const getNextPageToken    = (appState) => gfs(appState).nextPageToken;\r\n\r\nexport const getDiscoveries      = (appState) => gfs(appState).discoveries;\r\n","import * as Yup            from 'yup';\r\nimport IFormMeta           from 'util/iForms/IFormMeta';\r\nimport _discoveryAct       from './actions';\r\nimport * as _discoverySel  from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nconst distanceMsg = 'Miles should be a number between 1 and 30';\r\nconst minpriceMsg = 'Price should be a number between 0 and 4';\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Discovery Filter',\r\n  formSchema: Yup.object().shape({\r\n    searchText: Yup.string().label('Search'),\r\n    distance:   Yup.number().label('Distance')    .typeError(distanceMsg) .required() .min(1, distanceMsg) .max(30, distanceMsg),\r\n    minprice:   Yup.string().label('Price Range') .typeError(minpriceMsg) .required() .matches(/[0-4]/, minpriceMsg),\r\n  }),\r\n  formActionsAccessor: ()         => _discoveryAct.filterForm,\r\n  formStateSelector:   (appState) => _discoverySel.getFormFilter(appState),\r\n});\r\n","import {generateActions}        from 'action-u';\r\nimport _discovery               from './featureName';\r\nimport discoveryFilterFormMeta  from './discoveryFilterFormMeta';\r\n\r\nexport default generateActions.root({\r\n\r\n  [_discovery]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    filterForm: discoveryFilterFormMeta.registrar.formActionGenesis(),\r\n\r\n    retrieve: { // actions.retrieve([filter]): Action\r\n                // > retrieval of discoveries using supplied filter\r\n                actionMeta: {\r\n                  traits: ['filter']\r\n                },\r\n\r\n      complete: { // actions.retrieve.complete(filter, discoveriesResp): Action\r\n                  // > discoveries retrieval complete, with supplied response\r\n                  actionMeta: {\r\n                    traits: ['filter', 'discoveriesResp'],\r\n                  },\r\n      },\r\n\r\n      fail: { // actions.retrieve.fail(err): Action\r\n              // > discoveries retrieval failed, with supplied err\r\n              actionMeta: {\r\n                traits: ['err'],\r\n              },\r\n      },\r\n\r\n    },\r\n\r\n    nextPage: { // actions.nextPage(pagetoken): Action\r\n                // > retrieve next-page, via supplied pagetoken\r\n                actionMeta: {\r\n                  traits: ['pagetoken'],\r\n                },\r\n\r\n      complete: { // actions.nextPage.complete(discoveriesResp): Action\r\n                  // > discoveries nextPage retrieval complete, with supplied response\r\n                  actionMeta: {\r\n                    traits: ['discoveriesResp'],\r\n                  },\r\n      },\r\n\r\n      fail: { // actions.nextPage.fail(err): Action\r\n              // > discoveries nextPage retrieval failed, with supplied err\r\n              actionMeta: {\r\n                traits: ['err'],\r\n              },\r\n      },\r\n\r\n    },\r\n\r\n  },\r\n});\r\n","import {createLogic}           from 'redux-logic';\r\nimport discoveryFilterFormMeta from './discoveryFilterFormMeta';\r\nimport _discoveryAct           from './actions';\r\nimport _discovery              from './featureName';\r\nimport * as _discoverySel      from './state';\r\nimport {expandWithFassets}     from 'feature-u';\r\nimport discloseError           from 'util/discloseError';\r\n\r\n/**\r\n * Initially retrieve discoveries, on 'discovery' view change.\r\n */\r\nexport const initialRetrieve = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_discovery}.initialRetrieve`,\r\n  type: String(fassets.actions.changeView),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    const appState = getState();\r\n\r\n    if (action.viewName                        === _discovery  && // ... our view\r\n        _discoverySel.getDiscoveries(appState) === null        && // ... discoveries in initial state\r\n        !_discoverySel.getInProgress(appState)) {                 // ... no discovery retrieval is in-progress\r\n      // initial retrieval using default filter (located in our app state)\r\n      const location = fassets.sel.getLocation(appState);\r\n      dispatch( _discoveryAct.retrieve({..._discoverySel.getFilter(appState),\r\n                                        loc: [location.lat, location.lng]}) );\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Default the filter.open() domain param from the appState\r\n * filter.\r\n */\r\nexport const defaultFilter = createLogic({\r\n\r\n  name: `${_discovery}.defaultFilter`,\r\n  type: String(_discoveryAct.filterForm.open),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    if (!action.domain) {\r\n      action.domain = _discoverySel.getFilter(getState());\r\n    }\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n/**\r\n * Process discovery filter.\r\n */\r\nexport const processFilter = createLogic({\r\n\r\n  name: `${_discovery}.processFilter`,\r\n  type: String(_discoveryAct.filterForm.process),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n    // retrieve using new filter from form\r\n    const appState  = getState();\r\n    const filter    = action.domain;\r\n    const location = fassets.sel.getLocation(appState);\r\n    dispatch( _discoveryAct.retrieve({...filter, \r\n                                      loc: [location.lat, location.lng]}) );\r\n    \r\n    // show our view view\r\n    dispatch( fassets.actions.changeView(_discovery) );\r\n\r\n    // close our form filter\r\n    dispatch( _discoveryAct.filterForm.close() );\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Perform discovery retrieval.\r\n */\r\nexport const retrieve = createLogic({\r\n\r\n  name: `${_discovery}.retrieve`,\r\n  type: String(_discoveryAct.retrieve),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY GooglePlaces is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.searchDiscoveries(action.filter)\r\n       .then(discoveriesResp => { \r\n         // console.log(`xx here is our discoveriesResp: `, discoveriesResp);\r\n         dispatch( _discoveryAct.retrieve.complete(action.filter, discoveriesResp) );\r\n         done();\r\n       })\r\n       .catch(err => {\r\n         dispatch( _discoveryAct.retrieve.fail(err) );\r\n\r\n         // report unexpected error to user\r\n         discloseError({err: err.defineAttemptingToMsg('DiscoveryService.searchDiscoveries()')});\r\n\r\n         done();\r\n       });\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n/**\r\n * Perform next-page discovery retrieval.\r\n */\r\nexport const nextPage = createLogic({\r\n\r\n  name: `${_discovery}.nextPage`,\r\n  type: String(_discoveryAct.nextPage),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY GooglePlaces is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.searchDiscoveriesNextPage(action.pagetoken)\r\n       .then(discoveriesResp => {\r\n         // console.log(`xx here is our discoveriesRes: `, discoveriesResp);\r\n         dispatch( _discoveryAct.nextPage.complete(discoveriesResp) );\r\n         done();\r\n       })\r\n       .catch(err => {\r\n         dispatch( _discoveryAct.nextPage.fail(err) );\r\n\r\n         // report unexpected error to user\r\n         discloseError({err: err.defineAttemptingToMsg('DiscoveryService.searchDiscoveriesNextPage()')});\r\n\r\n         done();\r\n       });\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic (accumulated in index.js)\r\n// ... named exports (above) are used by unit tests :-)\r\nexport default expandWithFassets( (fassets) => [\r\n  ...discoveryFilterFormMeta.registrar.formLogic(), // discoveryFilter iForm logic modules\r\n  defaultFilter,\r\n  initialRetrieve(fassets),\r\n  processFilter,\r\n  retrieve,\r\n  nextPage,\r\n] );\r\n","import React             from 'react';\r\n\r\nimport Radio             from '@material-ui/core/Radio';\r\nimport RadioGroup        from '@material-ui/core/RadioGroup';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel  from '@material-ui/core/FormControlLabel';\r\nimport FormControl       from '@material-ui/core/FormControl';\r\nimport FormLabel         from '@material-ui/core/FormLabel';\r\n\r\nimport PropTypes         from 'prop-types';\r\nimport verify            from 'util/verify';\r\n\r\n/**\r\n * An IForm radio container input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * PROPS:\r\n *   - fieldName:     (a string) the iForm field name\r\n *   - iForm:         (an IFormMeta) the iFormMeta object in control\r\n *   - row:           (a boolean) to format buttons in a row (default column)\r\n *   - helperText:    (a string) to display help user text (default none)\r\n *   - children:      (<IRadioField.Op>) the radio options to select from\r\n *   - ...extraProps: (...any) injected directly into <FormControl>\r\n *                    ex: variant=\"standard\"/\"outlined\"/\"filled\" ... AI: currently doesn't work\r\n *\r\n * NOTE: Unlike text input, radios always expose validation msgs (i.e. they\r\n *       are NOT dynamically injected based on touches).\r\n *       ... HOWEVER: validation is seldomly shown \r\n *                    because of the controlled nature of the radio!\r\n *\r\n * Usage:\r\n *   const radioProps = {fieldName: 'myFieldName', iForm};\r\n *   ...\r\n *   <IRadioField {...radioProps} row helperText=\"... help text here\">\r\n *     <IRadioField.Op value=\"1\" label=\"One\" {...radioProps}/>\r\n *     <IRadioField.Op value=\"2\" label=\"Two\" {...radioProps}/>\r\n *   </IRadioField>\r\n */\r\nexport default function IRadioField({fieldName, iForm, row, helperText, children, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<IRadioField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... row\r\n  if (row) { // when supplied\r\n    check(row===true || row===false, `row must be a boolean (true/false) ... in fieldName: '${fieldName}'`);\r\n  }\r\n  const rowProp = row ? true : false; // normalize (defaulting to false)\r\n\r\n  // ... helperText (just let PropTypes validate)\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  //     NOTE: currently have NONE (commented out)\r\n  // ['have', 'none', 'for', 'now'].forEach(\r\n  //   (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  // );\r\n\r\n  // compute field success/error adornments\r\n  let   msgDom       = null; // optional DOM displaying helperText -or- field validation message\r\n  const managedProps = {};   // NOTE: currently assumed to go in <FormControl>\r\n  const fieldMsg     = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n  if (fieldMsg) { // error adornment\r\n    managedProps.error = true;\r\n    msgDom  = <FormHelperText>{fieldMsg}</FormHelperText>\r\n  }\r\n  else if (helperText) {\r\n    msgDom  = <FormHelperText>{helperText}</FormHelperText>\r\n  }\r\n\r\n  // emit IRadioField\r\n  return (\r\n    <FormControl {...extraProps} {...managedProps}>\r\n      <FormLabel>{fieldLabel}</FormLabel>\r\n      <RadioGroup name={fieldName}\r\n                  row={rowProp}\r\n                  value={iForm.getValue(fieldName)}>\r\n        {children}\r\n      </RadioGroup>\r\n      {msgDom}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nIRadioField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  row:          PropTypes.bool,\r\n  helperText:   PropTypes.string,\r\n  children:     PropTypes.node.isRequired, // IRadioField content is required (i.e. the IRadioField.Op's)\r\n};\r\n\r\n\r\n\r\nIRadioField.Op = function ({fieldName, iForm, value, label}) {\r\n  const handleFieldChanged = () => iForm.handleFieldChanged(fieldName, value);\r\n  // NOTE: <FormControlLabel> is used as a drop-in-replacement of Radio/Switch/Checkbox DISPLAYING an extra label\r\n  return (\r\n    <FormControlLabel value={value}\r\n                      control={<Radio/>}\r\n                      label={label}\r\n                      checked={value===iForm.getValue(fieldName)}\r\n                      onChange={handleFieldChanged}/>\r\n  );\r\n}\r\n\r\nIRadioField.Op.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  value:        PropTypes.string.isRequired,\r\n  label:        PropTypes.string.isRequired,\r\n};\r\n","import React                   from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}           from 'react-redux'\r\nimport {makeStyles}            from '@material-ui/core/styles';\r\nimport {useForCellPhone}       from 'util/responsiveBreakpoints';\r\n\r\nimport discoveryFilterFormMeta from '../discoveryFilterFormMeta';\r\nimport ITextField              from 'util/iForms/comp/ITextField';\r\nimport IRadioField             from 'util/iForms/comp/IRadioField';\r\n\r\nimport Button                from '@material-ui/core/Button';\r\nimport CloseIcon             from '@material-ui/icons/Close';\r\nimport Dialog                from '@material-ui/core/Dialog';\r\nimport DialogContent         from '@material-ui/core/DialogContent';\r\nimport DialogContentText     from '@material-ui/core/DialogContentText';\r\nimport DialogTitle           from '@material-ui/core/DialogTitle';\r\nimport FilterIcon            from '@material-ui/icons/FilterList';\r\nimport FormHelperText        from '@material-ui/core/FormHelperText';\r\nimport IconButton            from '@material-ui/core/IconButton';\r\nimport InProgress            from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport {TransitionSlide}     from 'util/Transition';\r\nimport CenterItems           from 'util/CenterItems';\r\n\r\n\r\n/**\r\n * DiscoveryFilterScreen: gather filter information (selection criteria) \r\n * for a discovery retrieval.\r\n */\r\nexport default function DiscoveryFilterScreen() {\r\n\r\n  const dispatch    = useDispatch();\r\n  const formState   = useSelector((appState) => discoveryFilterFormMeta.formStateSelector(appState), []);\r\n  const isCellPhone = useForCellPhone();\r\n  const classes     = useStyles();\r\n\r\n  const iForm = discoveryFilterFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel       = iForm.getLabel();\r\n  const formInProcess   = iForm.inProcess();\r\n  const priceRadioProps = {\r\n    fieldName: 'minprice',\r\n    iForm,\r\n  };\r\n\r\n  const formErrMsg = iForm.getMsg();\r\n\r\n  return (\r\n\r\n    <Dialog open={true}\r\n            onClose={iForm.handleClose}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionSlide}>\r\n\r\n      <form onSubmit={iForm.handleProcess}>\r\n\r\n        <DialogTitle disableTypography className={classes.titleBar}>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            {formLabel}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={iForm.handleClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText className={classes.entry}>\r\n            filter your discovery with these settings ...\r\n          </DialogContentText>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"searchText\"\r\n                        iForm={iForm}\r\n                        autoFocus\r\n                        type=\"string\"\r\n                        helperText=\"... suggest a restaurant or town (optional)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"distance\"\r\n                        iForm={iForm}\r\n                        placeholder=\"... enter 1-30\"\r\n                        type=\"number\"\r\n                        helperText=\"... the maximum search distance (1-30)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <IRadioField {...priceRadioProps}\r\n                         row\r\n                         helperText=\"... most affordable to most expensive\">\r\n              <IRadioField.Op value=\"0\" label=\"1\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"1\" label=\"2\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"2\" label=\"3\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"3\" label=\"4\" {...priceRadioProps}/>\r\n              <IRadioField.Op value=\"4\" label=\"5\" {...priceRadioProps}/>\r\n            </IRadioField>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <FilterIcon className={classes.icon}/>\r\n                Filter Discoveries\r\n              </Button>\r\n            </CenterItems>\r\n          </div>\r\n\r\n          {formErrMsg && (\r\n            <div className={classes.entry}>\r\n              <FormHelperText error>{formErrMsg}</FormHelperText>\r\n            </div>\r\n          )}\r\n          \r\n          {formInProcess && (\r\n            <div className={classes.entry}>\r\n              <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n            </div>\r\n          )}\r\n\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  inProgress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n\r\n}) );\r\n","import React,\r\n       {useCallback} from 'react';\r\n\r\nimport {useFassets}  from 'feature-u';\r\nimport {useSelector,\r\n        useDispatch} from 'react-redux'\r\n\r\nimport {makeStyles}  from '@material-ui/core/styles';\r\n\r\nimport _discoveryAct      from '../actions';\r\nimport * as _discoverySel from '../state';\r\n\r\nimport Button         from '@material-ui/core/Button';\r\nimport CheckedIcon    from '@material-ui/icons/CheckCircle';\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport List           from '@material-ui/core/List';\r\nimport ListItem       from '@material-ui/core/ListItem';\r\nimport ListItemIcon   from '@material-ui/core/ListItemIcon';\r\nimport ListItemText   from '@material-ui/core/ListItemText';\r\nimport NextPageIcon   from '@material-ui/icons/FastForward';   // -or- PlaylistPlay FastForward NavigateNext ArrowForward ArrowForwardIos MoreHorizontal TrendingFlat SkipNext Redo\r\nimport Progress       from '@material-ui/core/LinearProgress'; // -or- CircularProgress\r\nimport SettingsIcon   from '@material-ui/icons/Tune';          // -or- Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\nimport Typography     from '@material-ui/core/Typography';\r\nimport UnCheckedIcon  from '@material-ui/icons/Check';\r\n\r\n/**\r\n * DiscoveryListScreen displaying our discoveries.\r\n */\r\nexport default function DiscoveryListScreen() {\r\n\r\n  // ***\r\n  // *** setup\r\n  // ***\r\n\r\n  const fassets    = useFassets();\r\n\r\n  const inProgress    = useSelector( (appState) => _discoverySel.getInProgress(appState),    [] );\r\n  const discoveries   = useSelector( (appState) => _discoverySel.getDiscoveries(appState),   [] );\r\n  const nextPageToken = useSelector( (appState) => _discoverySel.getNextPageToken(appState), [] );\r\n  const eateryPool    = useSelector( (appState) => fassets.sel.getEateryDbPool(appState),    [fassets] );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNextPage        = useCallback((nextPageToken) => dispatch( _discoveryAct.nextPage(nextPageToken) ), []);\r\n  const handleFilterDiscovery = useCallback(() => dispatch( _discoveryAct.filterForm.open() ),                    []);\r\n  const toggleEateryPool      = useCallback((discovery, eateryPool) => {\r\n    if (eateryPool[discovery.id]) { // in pool\r\n      // console.log(`xx delete ${discovery.name} from pool`);\r\n      dispatch( fassets.actions.removeEatery(discovery.id) );\r\n    }\r\n    else { // NOT in pool\r\n      // console.log(`xx add ${discovery.name} to pool`);\r\n      dispatch( fassets.actions.addEatery(discovery.id) );\r\n    }\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  // ***\r\n  // *** define page content\r\n  // ***\r\n\r\n  let content = null;\r\n\r\n  // case for discoveries retrieval in-progress\r\n  if (discoveries===null || inProgress==='retrieve') { // just to be safe ... discoveries===null\r\n    content = [\r\n      <ListItem key=\"inProgress\">\r\n        <ListItemText>\r\n          <Typography variant=\"subtitle1\" align=\"center\" noWrap><br/><br/><br/><br/><br/>retrieval in progress</Typography>\r\n        </ListItemText>\r\n      </ListItem>,\r\n\r\n      <ListItem key=\"inProgressSpin\">\r\n        <ListItemText>\r\n          <Progress className={classes.progress} color=\"secondary\"/>\r\n        </ListItemText>\r\n      </ListItem>\r\n    ];\r\n  }\r\n\r\n  // case for NO discoveries found (in retrieval)\r\n  else if (discoveries.length === 0) {\r\n    content = [\r\n      <ListItem key=\"noEntries\">\r\n        <ListItemText>\r\n          <Typography variant=\"subtitle1\" align=\"center\" noWrap>\r\n            No entries match your filter &nbsp;&nbsp;\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleFilterDiscovery}>\r\n              <SettingsIcon/>\r\n              <Typography color=\"inherit\" variant=\"body2\">&nbsp;Adjust Filter</Typography>\r\n            </Button>\r\n          </Typography>\r\n        </ListItemText>\r\n      </ListItem>\r\n    ];\r\n  }\r\n\r\n  // case for displaying retrieved discoveries\r\n  else {\r\n    function renderPoolButton(discovery) {\r\n      if (eateryPool[discovery.id]) { // in pool\r\n        return <CheckedIcon color=\"secondary\"/>;\r\n      }\r\n      else { // NOT in pool\r\n        return <UnCheckedIcon/>;\r\n      }\r\n    }\r\n    \r\n    // generate list content\r\n    content =\r\n      discoveries.map( discovery => (\r\n\r\n        <ListItem key={discovery.id}\r\n                  dense\r\n                  divider>\r\n          <ListItemIcon onClick={()=>toggleEateryPool(discovery, eateryPool)}>\r\n            <IconButton>\r\n              {renderPoolButton(discovery)}\r\n            </IconButton>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText \r\n              primary={\r\n                <Typography variant=\"h6\" noWrap>\r\n                  {discovery.name}\r\n                </Typography>\r\n                      }\r\n              secondary={\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {discovery.addr}\r\n                </Typography>\r\n                        }/>\r\n\r\n        </ListItem>\r\n      ));\r\n  \r\n    // provide CRUDE next page mechanism\r\n    if (nextPageToken) { // there is a next page\r\n      if (inProgress==='next') { // the next page retrieval is \"in progress\"\r\n        content.push(\r\n          <ListItem key=\"nextPage\">\r\n            <ListItemText>\r\n              <Progress className={classes.progress}  color=\"secondary\"/>\r\n            </ListItemText>\r\n          </ListItem>\r\n        );\r\n      }\r\n      else { // the next page retrieval is NOT \"in progress\" ... provide a control to retrieve it\r\n        content.push(\r\n          <ListItem key=\"nextPageCntl\"\r\n                    dense\r\n                    button\r\n                    onClick={()=>handleNextPage(nextPageToken)}>\r\n            <ListItemIcon>\r\n              <IconButton color=\"primary\">\r\n                <NextPageIcon/>\r\n              </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText>\r\n              <Typography color=\"primary\" variant=\"h6\" className={classes.nextPage}>next page ...</Typography>\r\n            </ListItemText>\r\n          </ListItem>\r\n        );\r\n      }\r\n    }\r\n    // notify user when 60 entry limitation has been met (a limitation of the \"free\" Google Places API)\r\n    else if (content.length === 60) {\r\n      content.push(\r\n\r\n        <ListItem key=\"maxEntriesHit\"\r\n                  dense\r\n                  button\r\n                  onClick={handleFilterDiscovery}>\r\n          <ListItemIcon>\r\n            <IconButton color=\"primary\">\r\n              <SettingsIcon/>\r\n            </IconButton>\r\n          </ListItemIcon>\r\n          <ListItemText>\r\n            <Typography variant=\"subtitle1\">\r\n              We are limited to 60 entries.\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              ... adjust filter with city or restaurant\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              <SettingsIcon/>\r\n              <Typography color=\"inherit\" variant=\"body2\">&nbsp;Adjust Filter</Typography>\r\n            </Button>\r\n          </ListItemText>\r\n        </ListItem>\r\n      );\r\n    }\r\n  }\r\n\r\n  // ***\r\n  // *** render page\r\n  // ***\r\n\r\n  return (\r\n    <List className={classes.list}>\r\n      { content }\r\n    </List>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  list: {\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n  nextPage: {\r\n    fontStyle: 'italic',\r\n  },\r\n}) );\r\n","import React                  from 'react';\r\nimport * as _discoverySel     from './state';\r\nimport {featureRoute, \r\n        PRIORITY}             from 'feature-router';\r\nimport featureName            from './featureName';\r\nimport DiscoveryFilterScreen  from './comp/DiscoveryFilterScreen';\r\nimport DiscoveryListScreen    from './comp/DiscoveryListScreen';\r\n\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default [\r\n\r\n  featureRoute({\r\n    priority: PRIORITY.HIGH,\r\n    content({fassets, appState}) {\r\n      // display DiscoveryFilterScreen, when form is active (accomplished by our logic)\r\n      // ... this is done as a priority route, because this screen can be used to\r\n      //     actually change the view - so we display it regardless of the state of the active view\r\n      if (_discoverySel.isFormFilterActive(appState)) {\r\n        return <DiscoveryFilterScreen/>;\r\n      }\r\n    }\r\n  }),\r\n\r\n  featureRoute({\r\n    content({fassets, appState}) {\r\n\r\n      // allow other down-stream features to route, when the active view is NOT ours\r\n      if (fassets.sel.curView(appState) !== featureName) {\r\n        return null;\r\n      }\r\n\r\n      // ***\r\n      // *** at this point we know the active view is ours\r\n      // ***\r\n\r\n      // display our DiscoveryListScreen\r\n      return <DiscoveryListScreen/>;\r\n    }\r\n  }),\r\n\r\n];\r\n","import React,\r\n       {useCallback}   from 'react';\r\n\r\nimport _discovery      from '../featureName';\r\nimport _discoveryAct   from '../actions';\r\n\r\nimport {useFassets}    from 'feature-u';\r\nimport {useDispatch}   from 'react-redux'\r\n\r\nimport {makeStyles}    from '@material-ui/core/styles';\r\n\r\nimport DiscoveryIcon            from '@material-ui/icons/CloudDone';\r\nimport Divider                  from '@material-ui/core/Divider';\r\nimport IconButton               from '@material-ui/core/IconButton';\r\nimport ListItem                 from '@material-ui/core/ListItem';\r\nimport ListItemIcon             from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText             from '@material-ui/core/ListItemText';\r\nimport SettingsIcon             from '@material-ui/icons/Tune';           // possibilities: Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\n\r\n/**\r\n * DiscoveryLeftNavItem: our Discovery entry into the LeftNav.\r\n */\r\nexport default function DiscoveryLeftNavItem() {\r\n\r\n  const fassets      = useFassets();\r\n  const dispatch     = useDispatch();\r\n  const changeView   = useCallback(() => dispatch( fassets.actions.changeView(_discovery) ), [fassets]);\r\n  const handleFilter = useCallback(() => dispatch( _discoveryAct.filterForm.open() ),        []);\r\n  const classes      = useStyles();\r\n\r\n  // render our menu item\r\n  return (\r\n    <>\r\n      <ListItem button\r\n                onClick={changeView}>\r\n        <ListItemIcon className={classes.major}><DiscoveryIcon/></ListItemIcon>\r\n        <ListItemText primaryTypographyProps={{className:classes.major}} primary=\"Discovery\"/>\r\n        <ListItemSecondaryAction onClick={handleFilter}>\r\n          <ListItemIcon><IconButton className={classes.minor}><SettingsIcon/></IconButton></ListItemIcon>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  major: {\r\n    color: theme.palette.secondary.main, // redish\r\n  },\r\n  minor:{\r\n    color: theme.palette.primary.dark,   // bluish\r\n  },\r\n}) );\r\n","import {createFeature}       from 'feature-u';\r\nimport _discovery            from './featureName';\r\nimport                            './actions'; // _discoveryAct TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (discoveryFilterFormMeta)\r\nimport reducer               from './state';\r\nimport logic                 from './logic';\r\nimport route                 from './route';\r\nimport DiscoveryLeftNavItem  from './comp/DiscoveryLeftNavItem';\r\nimport DiscoveriesTitle      from './comp/DiscoveriesTitle';\r\nimport DiscoveriesFooter     from './comp/DiscoveriesFooter';\r\n\r\n// feature: discovery\r\n//          manage and promotes the discovery view (a list of\r\n//          \"discoveries\" from GooglePlaces).  Eateries can be\r\n//          added/removed within the pool by simply\r\n//          checking/unchecking the discoveries (full details in README)\r\nexport default createFeature({\r\n  name: _discovery,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      [`AppMotif.LeftNavItem.cc6_${_discovery}`]: DiscoveryLeftNavItem, // inject our entry into the leftNav\r\n\r\n      // auxiliary view content for the discoveries view\r\n      [`AppMotif.auxViewContent.${_discovery}`]: {\r\n        TitleComp:  DiscoveriesTitle,\r\n        FooterComp: DiscoveriesFooter,\r\n      },\r\n    },\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n});\r\n","import React          from 'react';\r\n\r\nimport {useFassets}   from 'feature-u';\r\nimport {useSelector}  from 'react-redux'\r\n\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n/**\r\n * DiscoveriesTitle displaying the discoveries title\r\n */\r\nexport default function DiscoveriesTitle() {\r\n\r\n  const fassets = useFassets();\r\n  const curUser = useSelector( (appState) => fassets.sel.curUser(appState), [fassets] );\r\n\r\n  return (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Discovery\r\n      <Typography color=\"inherit\"  display=\"inline\" noWrap>\r\n        &nbsp;({curUser.pool})\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n}\r\n","import React        from 'react';\r\nimport CheckedIcon  from '@material-ui/icons/CheckCircle';\r\nimport Grid         from '@material-ui/core/Grid';\r\nimport Tooltip      from '@material-ui/core/Tooltip';\r\nimport Typography   from '@material-ui/core/Typography';\r\n\r\n/**\r\n * DiscoveriesFooter displaying the spin control\r\n */\r\nexport default function DiscoveriesFooter() {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Typography>&nbsp;</Typography>\r\n      <Typography color=\"inherit\" variant=\"subtitle1\">\r\n        toggle check as &nbsp;\r\n        <CheckedIcon color=\"secondary\"/>\r\n        &nbsp; to place in pool\r\n      </Typography>\r\n      <Tooltip title=\"powered by Google Places\">\r\n        <img width=\"25px\" src=\"/googleLogo.png\" alt=\"\"/>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n}\r\n","/**\r\n * DiscoveryServiceAPI is a \"pseudo\" interface specifying the\r\n * DiscoveryService API which all implementations (i.e. derivations)\r\n * must conform.\r\n *\r\n * This service retrieves restaurant information from a geographical\r\n * data source, communicating results through two related objects:\r\n * Eatery and Discovery.  Because this service defines BOTH the\r\n * Discovery and Eatery objects, they are documented here.\r\n *\r\n * - Eatery (detailed restaurant info):\r\n *\r\n *   Eatery is a detailed restaurant object (containing complete\r\n *   details), and is retrieved one at a time (via an eateryId).\r\n * \r\n *   Eatery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     phone,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *     navUrl,   ... suitable for navigation\r\n *     website,\r\n *   }\r\n *\r\n * - Discovery (summary restaurant info)\r\n *\r\n *   Discovery is a \"lighter weight\" version of Eatery (with fewer\r\n *   attributes), and is returned in search results (with multiple\r\n *   entries).\r\n *\r\n *   Discovery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *   }\r\n */\r\nexport default class DiscoveryServiceAPI {\r\n\r\n  /**\r\n   * Search/retrieve nearby restaurants, returning a set of\r\n   * Discoveries (see class description).\r\n   *\r\n   * **Please Note**: this service uses named parameters.\r\n   *\r\n   * @param {[lat,lng]} loc the geo location to base the\r\n   * nearby search on.\r\n   *\r\n   * @param {number} searchText an optional search text (ex:\r\n   * restaurant name, or town, etc.).\r\n   *\r\n   * @param {number} distance the radius distance (in miles) to\r\n   * search for (1-31), DEFAULT TO 5.\r\n   *\r\n   * @param {string} minprice the minimum price range '0'-'4'\r\n   * (from most affordable to most expensive), DEFAULT TO '1'.\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure:\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveries({loc,\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.searchDiscoveries() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch the next-page of a previous searchDiscoveries() request.\r\n   * \r\n   * @param pagetoken the next page token (supplied by prior\r\n   * searchDiscoveries() invocation).\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure (same as searchDiscoveries()):\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveriesNextPage(pagetoken) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.searchDiscoveriesNextPage() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch (i.e. retreive) the details of a fully populated eatery using the\r\n   * supplied eateryId.\r\n   * \r\n   * @param {string} eateryId the id for the detailed entry to retrieve\r\n   * (same id as returned in Discovery)\r\n   * \r\n   * @return {promise} a promise resolving the Eatery\r\n   */\r\n  fetchEateryDetail(eateryId) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.fetchEateryDetail() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature}      from 'feature-u';\r\nimport DiscoveryServiceAPI  from './DiscoveryServiceAPI';\r\n\r\n// feature: discoveryService\r\n//          promote a service API that retrieves restaurant information\r\n//          from a geographical data source, through the\r\n//          `discoveryService` use contract (full details in\r\n//          README)\r\nexport default createFeature({\r\n  name: 'discoveryService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['discoveryService', {required: true, type: objectOfTypeDiscoveryServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeDiscoveryServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof DiscoveryServiceAPI ? null : 'object of type DiscoveryServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import DiscoveryServiceAPI from '../discoveryService/DiscoveryServiceAPI';\r\nimport verify              from 'util/verify';\r\nimport isString            from 'lodash.isstring';\r\n\r\n\r\n/**\r\n * DiscoveryServiceGooglePlaces is the **real** DiscoveryServiceAPI\r\n * derivation using the GooglePlaces service APIs.\r\n *\r\n * This service retrieves restaurant information from a geographical\r\n * data source, communicating results through two related objects:\r\n * Eatery and Discovery.  Because this service defines BOTH the\r\n * Discovery and Eatery objects, they are documented here.\r\n *\r\n * - Eatery (detailed restaurant info):\r\n *\r\n *   Eatery is a detailed restaurant object (containing complete\r\n *   details), and is retrieved one at a time (via an eateryId).\r\n * \r\n *   Eatery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     phone,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *     navUrl,   ... suitable for navigation\r\n *     website,\r\n *   }\r\n *\r\n * - Discovery (summary restaurant info)\r\n *\r\n *   Discovery is a \"lighter weight\" version of Eatery (with fewer\r\n *   attributes), and is returned in search results (with multiple\r\n *   entries).\r\n *\r\n *   Discovery: {\r\n *     id,       ... the eateryId\r\n *     name,\r\n *     addr,\r\n *     loc: {lat, lng},\r\n *   }\r\n */\r\nexport default class DiscoveryServiceGooglePlaces extends DiscoveryServiceAPI {\r\n\r\n  /**\r\n   * Search/retrieve nearby restaurants, returning a set of\r\n   * Discoveries (see class description).\r\n   *\r\n   * **Please Note**: this service uses named parameters.\r\n   *\r\n   * @param {[lat,lng]} loc the geo location to base the\r\n   * nearby search on.\r\n   *\r\n   * @param {number} searchText an optional search text (ex:\r\n   * restaurant name, or town, etc.).\r\n   *\r\n   * @param {number} distance the radius distance (in miles) to\r\n   * search for (1-31), DEFAULT TO 5.\r\n   *\r\n   * @param {string} minprice the minimum price range '0'-'4'\r\n   * (from most affordable to most expensive), DEFAULT TO '1'.\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure:\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveries({loc,\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    \r\n    // ***\r\n    // *** validate parameters\r\n    // ***\r\n\r\n    const check = verify.prefix('DiscoveryServiceGooglePlaces.searchDiscoveries() parameter violation: ');\r\n\r\n    check(loc,                            'loc is required ... [lat,lng]'); // TODO: verify loc is array of two numbers\r\n      \r\n    check(isString(searchText),           `supplied searchText (${searchText}) must be a string`);\r\n      \r\n    check(distance,                       'distance is required ... (1-31) miles');\r\n    check(distance>=1 && distance<=31,    `supplied distance (${distance}) must be between 1-31 miles`);\r\n      \r\n    check(minprice,                       'minprice is required ... (0-4)');\r\n    check(minprice>='0' && minprice<='4', `supplied minprice (${minprice}) must be between 0-4`);\r\n      \r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,      `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n\r\n    // ***\r\n    // *** define the selection criteria used in our GooglePlaces retrieval\r\n    // ***\r\n\r\n    // a PlaceSearchRequest\r\n    const selCrit = {\r\n      // ... supplied by client (via params)\r\n      location:      {lat: loc[0], lng: loc[1]},\r\n      radius:        miles2meters(distance),\r\n      minPriceLevel: minprice,\r\n\r\n      // ... hard coded by our \"eatery\" requirements\r\n      type:     'restaurant',\r\n    };\r\n\r\n    // ... searchText is optional\r\n    if (searchText) {\r\n      selCrit.keyword = searchText;\r\n    }\r\n\r\n\r\n    // ***\r\n    // *** issue the Google PlacesService request\r\n    // ***\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // retain _resolve/_reject in an outer scope \r\n      // ... because the SAME callback function instance is used on pagination\r\n      // ... kinda hoaky (may be a better way)\r\n      _resolve = resolve;\r\n      _reject  = reject;\r\n\r\n      try {\r\n        googlePlacesService().nearbySearch(\r\n          selCrit,\r\n          (places, status, pagination) => {\r\n            // places:     PlaceResult[]\r\n            // status:     PlacesServiceStatus\r\n            // pagination: PlaceSearchPagination ... hasNextPage(): true/false ... nextPage() with same callback\r\n\r\n            const err = checkResponseStatus(status);\r\n            if (err) {\r\n              return _reject(err);\r\n            }\r\n\r\n            // retain pagination for subsequent requests\r\n            _pagination = pagination.hasNextPage ? pagination : null;\r\n\r\n            // process results\r\n            const discoveriesJson = gp2discoveries(places, pagination);\r\n            // console.log(`xx process discovery results: `, discoveriesJson);\r\n            return _resolve(discoveriesJson);\r\n          }\r\n        );\r\n      }\r\n      catch(err) { // catch/expose internal errors in Google PlacesService\r\n        // console.log('xx searchDiscoveries: ... caught unexpected error in in Google PlacesService: ', err);\r\n        return _reject(err);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch the next-page of a previous searchDiscoveries() request.\r\n   * \r\n   * @param pagetoken the next page token (supplied by prior\r\n   * searchDiscoveries() invocation).\r\n   * \r\n   * @return {discoveries via promise} a promise resolving to the\r\n   * following discoveries structure (same as searchDiscoveries()):\r\n   *   {\r\n   *     pagetoken: 'use-in-next-request', // undefined for no more pages (or 60 entries limit)\r\n   *     discoveries: [ <Discovery> ]\r\n   *   }\r\n   */\r\n  searchDiscoveriesNextPage(pagetoken) {\r\n\r\n    const check = verify.prefix('DiscoveryServiceGooglePlaces.searchDiscoveriesNextPage() parameter violation: ');\r\n    check(pagetoken, 'pagetoken is required');\r\n    check(isString(pagetoken), `supplied pagetoken (${pagetoken}) must be a string`);\r\n    \r\n    // process any pagetoken requests\r\n    if (_pagination) {\r\n      return new Promise( (resolve, reject) => {\r\n\r\n        // retain _resolve/_reject in an outer scope \r\n        // ... because the SAME callback function instance is used on pagination\r\n        // ... kinda hoaky (may be a better way)\r\n        _resolve = resolve;\r\n        _reject  = reject;\r\n\r\n        _pagination.nextPage(); // NOTE: this uses the SAME callback in the original search (kinda weird)\r\n      });\r\n    }\r\n    else {\r\n      throw new Error('*** ERROR *** DiscoveryServiceGooglePlaces - Next page requested, when there are NO additional pages');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch (i.e. retrieve) the details of a fully populated eatery using the\r\n   * supplied eateryId.\r\n   * \r\n   * @param {string} eateryId the id for the detailed entry to retrieve\r\n   * (same id as returned in Discovery)\r\n   * \r\n   * @return {promise} a promise resolving the Eatery\r\n   */\r\n  fetchEateryDetail(eateryId) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      try {\r\n        googlePlacesService().getDetails(\r\n          {\r\n            fields: [\r\n              'place_id',\r\n              'name',\r\n              'formatted_phone_number',\r\n              'geometry',\r\n              'formatted_address',\r\n              'url',\r\n              'website',\r\n            ],\r\n            placeId: eateryId,\r\n          },\r\n          (place, status) => {\r\n            // place:   PlaceResult\r\n            // status:  PlacesServiceStatus\r\n\r\n            const err = checkResponseStatus(status);\r\n            if (err) {\r\n              return reject(err);\r\n            }\r\n\r\n            // process results\r\n            const eatery = gp2eatery(place);\r\n            // console.log(`xx fetchEateryDetail: eatery result: `, eatery);\r\n            return resolve(eatery);\r\n          }\r\n        );\r\n      }\r\n      catch(err) { // catch/expose internal errors in Google PlacesService\r\n        // console.log('xx fetchEateryDetail: ... caught unexpected error in in Google PlacesService: ', err);\r\n        return reject(err);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n} // end of ... DiscoveryServiceGooglePlaces class definition\r\n\r\n\r\n// ***\r\n// *** Retained pagination controls for subsequent page requests\r\n// ***\r\n\r\nlet _pagination = null; // type: PlaceSearchPagination (null for none)\r\nlet _resolve    = null; // active promise resolution ... kinda hoaky, but pagination callback uses SAME function instance :-(\r\nlet _reject     = null; // ditto\r\n\r\n\r\n\r\nlet _googlePlacesService = null; // lazily loaded\r\n\r\n/**\r\n * Return the Google PlacesService object.\r\n */\r\nfunction googlePlacesService() {\r\n\r\n  // use previously obtained object (if any)\r\n  if (_googlePlacesService) {\r\n    return _googlePlacesService;\r\n  }\r\n\r\n  // otherwise ... lazy load\r\n  \r\n  // NOTE: we must reference windows.google, to prevent babel \"not defined\" compiler error\r\n  const google = window.google;\r\n\r\n  if (!google) {\r\n    throw new Error('*** ERROR *** DiscoveryServiceGooglePlaces - NO google object has been defined from our initialization');\r\n  }\r\n\r\n  // create/return our service\r\n  // NOTE: we swallow visual results (intended for maps) using a dummy div (i.e. no map for me)\r\n  return _googlePlacesService = new google.maps.places.PlacesService(document.createElement('div'));\r\n}\r\n\r\n\r\n/**\r\n * Convert GooglePlaces response to a list of discoveries.\r\n * \r\n * @param {PlaceResult[]} places the GooglePlaces response.\r\n * \r\n * @param {PlaceSearchPagination} pagination the GooglePlaces response.\r\n * \r\n * @return {Object} eatery-nod data structure containing discoveries.\r\n */\r\nfunction gp2discoveries(places, pagination) {\r\n  return {\r\n    pagetoken:   pagination.hasNextPage ? 'giveMeTheNextPagePlease' : null, // null for NO additional pages\r\n    discoveries: places.map( place => gp2eatery(place) )\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert GooglePlaces response to either an eatery or discovery\r\n * object (controlled by gpResp).\r\n * \r\n * @param {PlaceResult} place the GooglePlaces response from either\r\n * searchDiscoveries() or fetchEateryDetail().\r\n * \r\n * @return {Discovery|Eatery} either a Discovery or Eatery object.\r\n */\r\nfunction gp2eatery(place) {\r\n  return {\r\n    id:      place.place_id,\r\n    name:    place.name,\r\n    phone:   place.formatted_phone_number || 'not-in-search',\r\n    loc:     {lat: place.geometry.location.lat(), lng: place.geometry.location.lng()},\r\n    addr:    place.formatted_address || place.vicinity, // eatery (i.e. detail) vs. discovery (i.e. search index)\r\n    navUrl:  place.url     || 'not-in-search',\r\n    website: place.website || 'not-in-search',\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * Convert supplied miles to meters.\r\n */\r\nfunction miles2meters(miles) {\r\n  return miles * 1609.34;\r\n}\r\n\r\n\r\n/**\r\n * Validate response status.\r\n */\r\nfunction checkResponseStatus(status) {\r\n  // success\r\n  if (status === 'OK' || status === 'ZERO_RESULTS') {\r\n  }\r\n  // error\r\n  else {\r\n    return new Error(`*** ERROR *** DiscoveryServiceGooglePlaces - Google Places ERROR STATUS: '${status}'`);\r\n  }\r\n}\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags';\r\nimport DiscoveryServiceGooglePlaces from './DiscoveryServiceGooglePlaces';\r\n\r\n// feature: discoveryServiceGooglePlaces\r\n//          defines the real 'discoveryService' (via the GooglePlaces API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name: 'discoveryServiceGooglePlaces',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'discoveryService': new DiscoveryServiceGooglePlaces(),\r\n    },\r\n  },\r\n\r\n});\r\n","/**\r\n * EateryServiceAPI is a \"pseudo\" interface specifying the EateryService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceAPI {\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.monitorDbEateryPool() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.addEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.removeEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import geodist          from 'geodist';\r\nimport EateryServiceAPI from '../eateryService/EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceMock is the **mock** EateryServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceMock extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = { // current \"pool\" monitor (initially a placebo) ... similar concept to production\r\n    pool:      null, // type: string\r\n    monitorCB: null, // type: client CB function\r\n    eateries:  null, // the actual set of eateries in our pool\r\n  };\r\n\r\n\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) { // ... see EateryServiceAPI\r\n\r\n    // define our initial pool of eateries (a subset of eateriesMockDB)\r\n    const eateries = initialEateryPoolIds.reduce( (hash, id) => {\r\n      hash[id] = eateriesMockDB[id];\r\n      return hash;\r\n    }, {});\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      monitorCB,\r\n      eateries,\r\n    };\r\n\r\n    // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n    // ... this mock logic is similar to that of production, but we cheat and do it to our entire DB\r\n    //     as a result it doesn't have to be done again\r\n    for (const eateryId in eateriesMockDB) {\r\n      const eatery = eateriesMockDB[eateryId];\r\n      eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n    }\r\n\r\n    // notify our supplied monitorCB\r\n    // ... NOTE: the API returns void ... it truly is NOT a promise\r\n    monitorCB(eateries);\r\n\r\n  }\r\n\r\n\r\n  addEatery(eatery) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recognize the change\r\n      // console.log(`xx addEatery: `, eatery);\r\n      this.curPoolMonitor.eateries = {\r\n        ...this.curPoolMonitor.eateries,\r\n        [eatery.id]: eatery\r\n      };\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n    });\r\n  }\r\n\r\n\r\n  removeEatery(eateryId) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n\r\n      // remove the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recoginize the change\r\n      // console.log(`xx removeEatery: ${eateryId}`);\r\n      const eateries = Object.assign({}, this.curPoolMonitor.eateries);\r\n      delete eateries[eateryId];\r\n      this.curPoolMonitor.eateries = eateries;\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n\r\n    });\r\n  }\r\n\r\n};\r\n\r\n\r\n// our initial pool of eateries (a subset of eateriesMockDB)\r\nconst initialEateryPoolIds = [\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n];\r\n\r\n// our MOCK eateries DB pool\r\nexport const eateriesMockDB = {\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\": {\r\n    \"addr\": \"2000 Lakeshore Dr Uc250, New Orleans, LA 70148, USA\",\r\n    \"id\": \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n    \"loc\": {\r\n      \"lat\": 30.02439820000001,\r\n      \"lng\": -90.0684455\r\n    },\r\n    \"name\": \"Aramark\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4274750946707028490\",\r\n    \"phone\": \"(504) 280-6079\",\r\n    \"website\": \"https://www.aramark.com/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ01VeXQymIIYRI6lnasCzx3M\": {\r\n    \"addr\": \"724 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ01VeXQymIIYRI6lnasCzx3M\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543,\r\n      \"lng\": -90.0689558\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8342834473727404323\",\r\n    \"phone\": \"(504) 522-5973\",\r\n    \"website\": \"http://www.acmeoyster.com/french-quarter/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\": {\r\n    \"addr\": \"841 Iberville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9553468,\r\n      \"lng\": -90.0698063\r\n    },\r\n    \"name\": \"Deanie's Seafood Restaurant in the French Quarter\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11356230167321196953\",\r\n    \"phone\": \"(504) 581-1316\",\r\n    \"website\": \"https://www.deanies.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\": {\r\n    \"addr\": \"900 Harrison Ave, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n    \"loc\": {\r\n      \"lat\": 30.003912,\r\n      \"lng\": -90.103667\r\n    },\r\n    \"name\": \"Mondo\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15610825929174924363\",\r\n    \"phone\": \"(504) 224-2633\",\r\n    \"website\": \"http://www.mondoneworleans.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\": {\r\n    \"addr\": \"307 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n    \"loc\": {\r\n      \"lat\": 29.9544808,\r\n      \"lng\": -90.0665677\r\n    },\r\n    \"name\": \"Café Fleur-De-Lis\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17206744602484348977\",\r\n    \"phone\": \"(504) 529-9641\",\r\n    \"website\": \"http://cafefleurdelis.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6U-QewymIIYRzP5x_fdjwEw\": {\r\n    \"addr\": \"115 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ6U-QewymIIYRzP5x_fdjwEw\",\r\n    \"loc\": {\r\n      \"lat\": 29.954424,\r\n      \"lng\": -90.0695719\r\n    },\r\n    \"name\": \"Red Fish Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5530530259171147468\",\r\n    \"phone\": \"(504) 598-1200\",\r\n    \"website\": \"http://www.redfishgrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\": {\r\n    \"addr\": \"2601 Royal St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n    \"loc\": {\r\n      \"lat\": 29.96491200000001,\r\n      \"lng\": -90.051209\r\n    },\r\n    \"name\": \"Mimi's In the Marigny\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5730797042406659357\",\r\n    \"phone\": \"(504) 872-9868\",\r\n    \"website\": \"http://mimismarigny.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\": {\r\n    \"addr\": \"6100 Hamburg St Suite A, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n    \"loc\": {\r\n      \"lat\": 30.020369,\r\n      \"lng\": -90.0767649\r\n    },\r\n    \"name\": \"Yummy Sushi\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17574456342546133286\",\r\n    \"phone\": \"(504) 309-9401\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\": {\r\n    \"addr\": \"315 S Broad Ave, New Orleans, LA 70119, USA\",\r\n    \"id\": \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636662,\r\n      \"lng\": -90.0895056\r\n    },\r\n    \"name\": \"Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3275950646514275570\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\": {\r\n    \"addr\": \"1522 Robert E Lee Blvd, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n    \"loc\": {\r\n      \"lat\": 30.0207669,\r\n      \"lng\": -90.07682419999999\r\n    },\r\n    \"name\": \"The Füd Bar\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5517334805059037538\",\r\n    \"phone\": \"(504) 309-3284\",\r\n    \"website\": \"http://www.eathappynola.com/\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\": {\r\n    \"addr\": \"19130 Rogers Ln, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n    \"loc\": {\r\n      \"lat\": 30.4735482,\r\n      \"lng\": -90.0887137\r\n    },\r\n    \"name\": \"The Chimes-Covington\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2959806024213618882\",\r\n    \"phone\": \"(985) 892-5396\",\r\n    \"website\": \"http://www.thechimes.com/the-chimes-covington\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\": {\r\n    \"addr\": \"630 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\",\r\n    \"loc\": {\r\n      \"lat\": 29.9577089,\r\n      \"lng\": -90.0645131\r\n    },\r\n    \"name\": \"Gumbo Shop\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1346846763281016242\",\r\n    \"phone\": \"(504) 525-1486\",\r\n    \"website\": \"http://gumboshop.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\": {\r\n    \"addr\": \"307 Exchange Pl, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\",\r\n    \"loc\": {\r\n      \"lat\": 29.9546927,\r\n      \"lng\": -90.067018\r\n    },\r\n    \"name\": \"Green Goddess\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1629804231325561614\",\r\n    \"phone\": \"(504) 301-3347\",\r\n    \"website\": \"http://greengoddessrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8W3hFQymIIYRQObKMMNMyRo\": {\r\n    \"addr\": \"808 Bienville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ8W3hFQymIIYRQObKMMNMyRo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9555463,\r\n      \"lng\": -90.06883859999999\r\n    },\r\n    \"name\": \"GW Fins\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1930158316525905472\",\r\n    \"phone\": \"(504) 581-3467\",\r\n    \"website\": \"http://gwfins.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\": {\r\n    \"addr\": \"125 Camp St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9520226,\r\n      \"lng\": -90.0687354\r\n    },\r\n    \"name\": \"Red Gravy\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8457149674839334858\",\r\n    \"phone\": \"(504) 561-8844\",\r\n    \"website\": \"http://redgravycafe.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\": {\r\n    \"addr\": \"70456 LA-21 E, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\",\r\n    \"loc\": {\r\n      \"lat\": 30.4537876,\r\n      \"lng\": -90.1340372\r\n    },\r\n    \"name\": \"Subway Restaurants\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5023041769576045916\",\r\n    \"phone\": \"(985) 875-0624\",\r\n    \"website\": \"http://order.subway.com/Stores/Redirect.aspx?s=28364&sa=0&f=r&utm_source=google&utm_medium=local&utm_term=0&utm_content=28364&utm_campaign=fwh-local-remote-order&cid=0:0:0:0:0:0&segment_code=0\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJDVhB0w2mIIYRZVLScBsQtTo\": {\r\n    \"addr\": \"739 Conti St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDVhB0w2mIIYRZVLScBsQtTo\",\r\n    \"loc\": {\r\n      \"lat\": 29.956247,\r\n      \"lng\": -90.067626\r\n    },\r\n    \"name\": \"Oceana Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4230305135027442277\",\r\n    \"phone\": \"(504) 525-6002\",\r\n    \"website\": \"http://www.oceanagrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJDxnIrtelIIYR8sJkRU4JuTM\": {\r\n    \"addr\": \"1732 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDxnIrtelIIYR8sJkRU4JuTM\",\r\n    \"loc\": {\r\n      \"lat\": 29.9369517,\r\n      \"lng\": -90.076805\r\n    },\r\n    \"name\": \"The Avenue Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3727020398402126578\",\r\n    \"phone\": \"(504) 586-9243\",\r\n    \"website\": \"http://theavenuepub.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJDyC9Ig6mIIYRDWmrSR08N54\": {\r\n    \"addr\": \"718 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJDyC9Ig6mIIYRDWmrSR08N54\",\r\n    \"loc\": {\r\n      \"lat\": 29.9582008,\r\n      \"lng\": -90.0652973\r\n    },\r\n    \"name\": \"Pat O'Brien's\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11400647078199388429\",\r\n    \"phone\": \"(504) 525-4823\",\r\n    \"website\": \"http://www.patobriens.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\": {\r\n    \"addr\": \"3128 Magazine St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n    \"loc\": {\r\n      \"lat\": 29.924039,\r\n      \"lng\": -90.086011\r\n    },\r\n    \"name\": \"The Rum House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8966361882979169918\",\r\n    \"phone\": \"(504) 941-7560\",\r\n    \"website\": \"http://www.therumhouse.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJFYDeXQymIIYRh1Cion6Ta9I\": {\r\n    \"addr\": \"716 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJFYDeXQymIIYRh1Cion6Ta9I\",\r\n    \"loc\": {\r\n      \"lat\": 29.954206,\r\n      \"lng\": -90.068728\r\n    },\r\n    \"name\": \"Dickie Brennan's Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15162374742576615559\",\r\n    \"phone\": \"(504) 522-2467\",\r\n    \"website\": \"http://www.dickiebrennanssteakhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\": {\r\n    \"addr\": \"72011 Holly St, Abita Springs, LA 70420, USA\",\r\n    \"id\": \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\",\r\n    \"loc\": {\r\n      \"lat\": 30.47869790000001,\r\n      \"lng\": -90.0391606\r\n    },\r\n    \"name\": \"Abita Brew Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5122493854602887915\",\r\n    \"phone\": \"(985) 892-5837\",\r\n    \"website\": \"http://www.abitabrewpub.com/\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\": {\r\n    \"addr\": \"1917 Lakeshore Dr, Mandeville, LA 70448, USA\",\r\n    \"id\": \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n    \"loc\": {\r\n      \"lat\": 30.3524862,\r\n      \"lng\": -90.0674878\r\n    },\r\n    \"name\": \"Rips On the Lake\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=6022141046362073145\",\r\n    \"phone\": \"(985) 727-2829\",\r\n    \"website\": \"http://www.ripsonthelake.com/\",\r\n    \"distance\": 23\r\n  },\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\": {\r\n    \"addr\": \"200 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9510068,\r\n      \"lng\": -90.0674083\r\n    },\r\n    \"name\": \"The Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8464113530518869241\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJT4MvDBKmIIYRFjCBCX693Yc\": {\r\n    \"addr\": \"534 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJT4MvDBKmIIYRFjCBCX693Yc\",\r\n    \"loc\": {\r\n      \"lat\": 29.955558,\r\n      \"lng\": -90.065077\r\n    },\r\n    \"name\": \"NOLA Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9790189513996316694\",\r\n    \"phone\": \"(504) 522-6652\",\r\n    \"website\": \"http://emerilsrestaurants.com/nola\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJTz6VoQumIIYRAXvVrezBp-U\": {\r\n    \"addr\": \"123 Baronne St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJTz6VoQumIIYRAXvVrezBp-U\",\r\n    \"loc\": {\r\n      \"lat\": 29.9538764,\r\n      \"lng\": -90.0716274\r\n    },\r\n    \"name\": \"Domenica\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16548408578069068545\",\r\n    \"phone\": \"(504) 648-6020\",\r\n    \"website\": \"http://www.domenicarestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\": {\r\n    \"addr\": \"1403 Washington Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9287839,\r\n      \"lng\": -90.08421849999999\r\n    },\r\n    \"name\": \"Commander's Palace\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5204633771439876795\",\r\n    \"phone\": \"(504) 899-8221\",\r\n    \"website\": \"https://www.commanderspalace.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJWegGCA6mIIYRYAiMKN4T4CM\": {\r\n    \"addr\": \"713 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJWegGCA6mIIYRYAiMKN4T4CM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95674039999999,\r\n      \"lng\": -90.06639969999999\r\n    },\r\n    \"name\": \"Antoine's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2585088030994597984\",\r\n    \"phone\": \"(504) 581-4422\",\r\n    \"website\": \"http://www.antoines.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\": {\r\n    \"addr\": \"365 Canal St Suite 220, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\",\r\n    \"loc\": {\r\n      \"lat\": 29.95115109999999,\r\n      \"lng\": -90.0653869\r\n    },\r\n    \"name\": \"Morton's The Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18112840993924552501\",\r\n    \"phone\": \"(504) 566-0221\",\r\n    \"website\": \"http://www.mortons.com/neworleans/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\": {\r\n    \"addr\": \"547 St Ann St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95826729999999,\r\n      \"lng\": -90.0629094\r\n    },\r\n    \"name\": \"Stanley Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3707774413604591373\",\r\n    \"phone\": \"(504) 587-0093\",\r\n    \"website\": \"http://stanleyrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\": {\r\n    \"addr\": \"6025 Pinnacle Pkwy, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\",\r\n    \"loc\": {\r\n      \"lat\": 30.444494,\r\n      \"lng\": -90.12936499999999\r\n    },\r\n    \"name\": \"Texas Roadhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16959746449638322522\",\r\n    \"phone\": \"(985) 867-8008\",\r\n    \"website\": \"https://www.texasroadhouse.com/restaurant-locations/louisiana/covington\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJYbYLMBimIIYR_jUx5ds4Quo\": {\r\n    \"addr\": \"536 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJYbYLMBimIIYR_jUx5ds4Quo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9632722,\r\n      \"lng\": -90.0578685\r\n    },\r\n    \"name\": \"Three Muses\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16880116870432241150\",\r\n    \"phone\": \"(504) 252-4801\",\r\n    \"website\": \"http://www.3musesnola.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\": {\r\n    \"addr\": \"801 Chartres St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9583835,\r\n      \"lng\": -90.063105\r\n    },\r\n    \"name\": \"Muriel's Jackson Square\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10215526720797373261\",\r\n    \"phone\": \"(504) 568-1885\",\r\n    \"website\": \"http://www.muriels.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\": {\r\n    \"addr\": \"6300 Argonne Blvd, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n    \"loc\": {\r\n      \"lat\": 30.004869,\r\n      \"lng\": -90.102976\r\n    },\r\n    \"name\": \"The Velvet Cactus\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4934895759665864950\",\r\n    \"phone\": \"(504) 301-2083\",\r\n    \"website\": \"http://www.thevelvetcactus.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\": {\r\n    \"addr\": \"333 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\",\r\n    \"loc\": {\r\n      \"lat\": 29.950587,\r\n      \"lng\": -90.07044619999999\r\n    },\r\n    \"name\": \"Luke\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=785714925235798997\",\r\n    \"phone\": \"(504) 378-2840\",\r\n    \"website\": \"http://www.lukeneworleans.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\": {\r\n    \"addr\": \"401 Poydras St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n    \"loc\": {\r\n      \"lat\": 29.949065,\r\n      \"lng\": -90.06708809999999\r\n    },\r\n    \"name\": \"Mother's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2279995583957645892\",\r\n    \"phone\": \"(504) 523-9656\",\r\n    \"website\": \"http://www.mothersrestaurant.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\": {\r\n    \"addr\": \"613 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9575423,\r\n      \"lng\": -90.0652683\r\n    },\r\n    \"name\": \"The Court of Two Sisters\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18300891940711883251\",\r\n    \"phone\": \"(504) 522-7261\",\r\n    \"website\": \"http://www.courtoftwosisters.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJi2AxW3SmIIYRmML7jsbqtb8\": {\r\n    \"addr\": \"701 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJi2AxW3SmIIYRmML7jsbqtb8\",\r\n    \"loc\": {\r\n      \"lat\": 29.947316,\r\n      \"lng\": -90.07156100000002\r\n    },\r\n    \"name\": \"Herbsaint\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=13814205570552152728\",\r\n    \"phone\": \"(504) 524-4114\",\r\n    \"website\": \"http://www.herbsaint.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJiUWE9A2mIIYRngo31C8qPSw\": {\r\n    \"addr\": \"416 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJiUWE9A2mIIYRngo31C8qPSw\",\r\n    \"loc\": {\r\n      \"lat\": 29.955348,\r\n      \"lng\": -90.0655\r\n    },\r\n    \"name\": \"K-Paul's Louisiana Kitchen\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3187750496160385694\",\r\n    \"phone\": \"(504) 596-2530\",\r\n    \"website\": \"http://www.kpauls.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJnUfNIiOmIIYRibUzWhx-PBg\": {\r\n    \"addr\": \"2440 Chartres St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJnUfNIiOmIIYRibUzWhx-PBg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636919,\r\n      \"lng\": -90.0529387\r\n    },\r\n    \"name\": \"New Orleans Cake Café & Bakery\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1746409415750432137\",\r\n    \"phone\": \"(504) 943-0010\",\r\n    \"website\": \"http://www.nolacakes.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\": {\r\n    \"addr\": \"1202 N Hwy 190, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\",\r\n    \"loc\": {\r\n      \"lat\": 30.44807140000001,\r\n      \"lng\": -90.0815896\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5009389114364395920\",\r\n    \"phone\": \"(985) 246-6155\",\r\n    \"website\": \"http://www.acmeoyster.com/\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\": {\r\n    \"addr\": \"800 Tchoupitoulas St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\",\r\n    \"loc\": {\r\n      \"lat\": 29.944616,\r\n      \"lng\": -90.067286\r\n    },\r\n    \"name\": \"Emeril's New Orleans\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=7688214774754717053\",\r\n    \"phone\": \"(504) 528-9393\",\r\n    \"website\": \"http://emerilsrestaurants.com/emerils-new-orleans\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJpdlCODylIIYRyeE-wYHtahE\": {\r\n    \"addr\": \"626 S Carrollton Ave, New Orleans, LA 70118, USA\",\r\n    \"id\": \"ChIJpdlCODylIIYRyeE-wYHtahE\",\r\n    \"loc\": {\r\n      \"lat\": 29.94384989999999,\r\n      \"lng\": -90.1339165\r\n    },\r\n    \"name\": \"The Camellia Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1255076587724792265\",\r\n    \"phone\": \"(504) 309-2679\",\r\n    \"website\": \"https://www.facebook.com/pages/Camellia-Grill/104113072958918?rf=250301408353469\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\": {\r\n    \"addr\": \"1201 Royal St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n    \"loc\": {\r\n      \"lat\": 29.96209660000001,\r\n      \"lng\": -90.06116809999999\r\n    },\r\n    \"name\": \"Verti Marte\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1650707284474479029\",\r\n    \"phone\": \"(504) 525-4767\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\": {\r\n    \"addr\": \"144 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9545625,\r\n      \"lng\": -90.0691287\r\n    },\r\n    \"name\": \"Bourbon House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11554767571130254419\",\r\n    \"phone\": \"(504) 522-0111\",\r\n    \"website\": \"http://www.bourbonhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJt2f3WgymIIYRb1B1S_gWc3I\": {\r\n    \"addr\": \"201 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJt2f3WgymIIYRb1B1S_gWc3I\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543868,\r\n      \"lng\": -90.0683629\r\n    },\r\n    \"name\": \"Mr. B's Bistro\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8246960598319190127\",\r\n    \"phone\": \"(504) 523-2078\",\r\n    \"website\": \"http://www.mrbsbistro.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\": {\r\n    \"addr\": \"717 Orleans St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n    \"loc\": {\r\n      \"lat\": 29.95864749999999,\r\n      \"lng\": -90.0645742\r\n    },\r\n    \"name\": \"Roux on Orleans Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10507446837846879593\",\r\n    \"phone\": \"(504) 571-4604\",\r\n    \"website\": \"http://www.bourbonorleans.com/restaurant-dining.php\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJuwqeNamlIIYRiCYSjKciG5c\": {\r\n    \"addr\": \"4905 Freret St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJuwqeNamlIIYRiCYSjKciG5c\",\r\n    \"loc\": {\r\n      \"lat\": 29.935024,\r\n      \"lng\": -90.1074596\r\n    },\r\n    \"name\": \"Cure\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10888334627103188616\",\r\n    \"phone\": \"(504) 302-2357\",\r\n    \"website\": \"http://curenola.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\": {\r\n    \"addr\": \"800 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\",\r\n    \"loc\": {\r\n      \"lat\": 29.945088,\r\n      \"lng\": -90.069051\r\n    },\r\n    \"name\": \"Pêche Seafood Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9665197064724161172\",\r\n    \"phone\": \"(504) 522-1744\",\r\n    \"website\": \"https://www.pecherestaurant.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\": {\r\n    \"addr\": \"201 Julia St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9444575,\r\n      \"lng\": -90.0647824\r\n    },\r\n    \"name\": \"Mulate's | The Original Cajun Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2325907536557379240\",\r\n    \"phone\": \"(504) 522-1492\",\r\n    \"website\": \"https://www.mulates.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJzXUQJhimIIYR7wBw72LWWZs\": {\r\n    \"addr\": \"508 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJzXUQJhimIIYR7wBw72LWWZs\",\r\n    \"loc\": {\r\n      \"lat\": 29.962781,\r\n      \"lng\": -90.057801\r\n    },\r\n    \"name\": \"The Maison\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11194214069218312431\",\r\n    \"phone\": \"(504) 371-5543\",\r\n    \"website\": \"http://www.maisonfrenchmen.com/\",\r\n    \"distance\": 4\r\n  },\r\n};\r\n\r\n\r\n// our discovery list (used by DiscoveryServiceMock)\r\nexport const discoverySearchPage1 = {\r\n  pagetoken: 'THERE_IS_MORE',\r\n  discoveries: []\r\n};\r\nexport const discoverySearchPage2 = {\r\n  pagetoken: null, // no mo pages\r\n  discoveries: []\r\n};\r\nconst discoveryPagingDivision_eateryId = \"ChIJTz6VoQumIIYRAXvVrezBp-U\";\r\nlet divisionHit = false;\r\nfor (const eateryId in eateriesMockDB) {\r\n  const eatery = eateriesMockDB[eateryId];\r\n  if (eatery.id === discoveryPagingDivision_eateryId)\r\n    divisionHit = true;\r\n  if (!divisionHit) \r\n    discoverySearchPage1.discoveries.push(eatery);\r\n  else\r\n    discoverySearchPage2.discoveries.push(eatery);\r\n}\r\n","import DiscoveryServiceAPI from '../discoveryService/DiscoveryServiceAPI';\r\nimport verify              from 'util/verify';\r\nimport isString            from 'lodash.isstring';\r\n\r\nimport {discoverySearchPage1,   // NOTE: tight coupling with EateryServiceMock (IT's OK ... were a MOCK :-)\r\n        discoverySearchPage2,\r\n        eateriesMockDB}    from '../../../eateries/subFeatures/eateryServiceMock/EateryServiceMock';\r\n\r\n/**\r\n * DiscoveryServiceMock is the **mock** DiscoveryServiceAPI\r\n * derivation.\r\n *\r\n * ... see DiscoveryServiceAPI for complete description\r\n */\r\nexport default class DiscoveryServiceMock extends DiscoveryServiceAPI {\r\n\r\n  searchDiscoveries({loc,           // ... see DiscoveryServiceAPI\r\n                     searchText='',\r\n                     distance=5,\r\n                     minprice='1',\r\n                     ...unknownArgs}={}) {\r\n    \r\n    // ***\r\n    // *** validate parameters\r\n    // ***\r\n\r\n    // NOTE: same as production\r\n    const check = verify.prefix('DiscoveryServiceMock.searchDiscoveries() parameter violation: ');\r\n\r\n    check(loc,                            'loc is required ... [lat,lng]'); // TODO: verify loc is array of two numbers\r\n      \r\n    check(isString(searchText),           `supplied searchText (${searchText}) must be a string`);\r\n      \r\n    check(distance,                       'distance is required ... (1-31) miles');\r\n    check(distance>=1 && distance<=31,    `supplied distance (${distance}) must be between 1-31 miles`);\r\n      \r\n    check(minprice,                       'minprice is required ... (0-4)');\r\n    check(minprice>='0' && minprice<='4', `supplied minprice (${minprice}) must be between 0-4`);\r\n      \r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,      `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx RETURNING following discoverySearch: `, discoverySearchPage1);\r\n      return resolve(discoverySearchPage1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  searchDiscoveriesNextPage(pagetoken) { // ... see DiscoveryServiceAPI\r\n\r\n    // NOTE: same as production\r\n    const check = verify.prefix('DiscoveryServiceMock.searchDiscoveriesNextPage() parameter violation: ');\r\n    check(pagetoken, 'pagetoken is required');\r\n    check(isString(pagetoken), `supplied pagetoken (${pagetoken}) must be a string`);\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx RETURNING following discoverySearch: `, discoverySearchPage2);\r\n      return resolve(discoverySearchPage2);\r\n    });\r\n  }\r\n\r\n\r\n  fetchEateryDetail(eateryId) { // ... see DiscoveryServiceAPI\r\n\r\n    return new Promise( (resolve, reject) => {\r\n      // console.log(`xx fetchEateryDetail(${eateryId}) ... returning: `, eateriesMockDB[eateryId]);\r\n      return resolve(eateriesMockDB[eateryId]);\r\n    });\r\n\r\n  }\r\n\r\n} // end of ... DiscoveryServiceMock class definition\r\n","import {createFeature}      from 'feature-u';\r\nimport featureFlags         from 'featureFlags';\r\nimport DiscoveryServiceMock from './DiscoveryServiceMock';\r\n\r\n// feature: discoveryServiceMock\r\n//          defines the mock 'discoveryService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name: 'discoveryServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'discoveryService': new DiscoveryServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'eateries';\r\n","import {combineReducers}     from 'redux';\r\nimport {reducerHash}         from 'astx-redux-util';\r\nimport {expandWithFassets}   from 'feature-u';\r\nimport {slicedReducer}       from 'feature-redux';\r\nimport {createSelector}      from 'reselect';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\nimport _eateriesAct          from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our eateries process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is used NOT for app injection,\r\n//       but RATHER to delay expansion (avoiding circular dependencies\r\n//       in selector access from eateryFilterFormMeta.js)\r\n//       >>> subsequently, fassets is now used to access fassets.actions.signOut action\r\nconst reducer = slicedReducer(`view.${_eateries}`, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // raw eatery entries synced from our realtime DB\r\n  dbPool: reducerHash({\r\n    [_eateriesAct.dbPool.changed]: (state, action) => action.eateries,\r\n    [fassets.actions.signOut]:     (state, action) => null, // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n  }, null), // initialState\r\n\r\n  listView: combineReducers({\r\n\r\n    // standard iForm for our EateryFilterForm\r\n    filterForm: eateryFilterFormMeta.registrar.formReducer(),\r\n\r\n    // filter used in visualizing listView\r\n    filter: reducerHash({\r\n      [_eateriesAct.filterForm.process]: (state, action) => action.domain,\r\n      [fassets.actions.signOut]:         (state, action) => ({distance: null, sortOrder: 'name'}), // same as initialState ... AI: streamline in \"INITIALIZATION\" journal entry\r\n    }, { // initialState\r\n      distance: null,    // distance in miles (default: null - for any distance)\r\n      sortOrder: 'name', // sortOrder: 'name'/'distance'\r\n    }),\r\n\r\n  }),\r\n\r\n  // selectedEateryId: eateryId ... id of selected eatery to \"display details for\" (null for none)\r\n  selectedEateryId: reducerHash({\r\n    [_eateriesAct.viewDetail]:       (state, action) => action.eateryId,\r\n    [_eateriesAct.viewDetail.close]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n  // spin: string ... msg to display when spin operation is in place, null for spin NOT in place\r\n  spin: reducerHash({\r\n    [_eateriesAct.spin]:          (state, action) => action.spinMsg,\r\n    [_eateriesAct.spin.complete]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                   /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState            = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;       // ... concise alias (used internally)\r\n\r\nexport const getDbPool           = (appState) => gfs(appState).dbPool;\r\n\r\nexport const isFormFilterActive  = (appState) => gfs(appState).listView.filterForm ? true : false;\r\nexport const getFormFilter       = (appState) => gfs(appState).listView.filterForm;\r\n\r\nexport const getListViewFilter   = (appState) => gfs(appState).listView.filter;\r\n\r\nexport const getFilteredEateries  = createSelector(\r\n  getDbPool,\r\n  getListViewFilter,\r\n  (dbPool, filter) => {\r\n\r\n    if (!dbPool) {\r\n      return null; // NO dbPool yet ... waiting for pool entries\r\n    }\r\n\r\n    // apply filter to dbPool\r\n    // filteredEateries: Eatery[]\r\n    const entries = Object.values(dbPool)\r\n                          .filter(entry => { // filter entries\r\n                            // apply distance (when supplied in filter)\r\n                            return filter.distance ? entry.distance <= filter.distance : true;\r\n                          })\r\n                          .sort((e1, e2) => ( // sort entries ... order by:\r\n                            // distance (when requested)\r\n                            (filter.sortOrder==='distance' ? e1.distance-e2.distance : 0) ||\r\n                            // name - either secondary (within distance), or primary (when no distance)\r\n                            e1.name.localeCompare(e2.name)\r\n                          ));\r\n\r\n    return entries;\r\n  }\r\n);\r\n\r\nexport const getSelectedEatery   = (appState) => {\r\n  const  selectedEateryId = gfs(appState).selectedEateryId;\r\n  return selectedEateryId ? gfs(appState).dbPool[selectedEateryId] : null;\r\n};\r\n\r\nexport const getSpinMsg          = (appState) => gfs(appState).spin;\r\n","import * as Yup          from 'yup';\r\nimport IFormMeta         from 'util/iForms/IFormMeta';\r\nimport _eateriesAct      from './actions';\r\nimport * as _eateriesSel from './state';\r\n\r\n/* eslint-disable no-whitespace-before-property */  // special case here (for readability)\r\n\r\nconst distanceMsg  = 'Miles should be a positive number (when supplied)';\r\nconst sortOrderMsg = \"Sort order should be either 'name' or 'distance'\";\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Pool Filter',\r\n  formSchema: Yup.object().shape({\r\n    // distance is an optional positive number (or null for any distance)\r\n    // NOTE: could NOT get default() to work, but transform() to null, works in conjunction with .nullable()\r\n    distance:   Yup.number().label('Miles').typeError(distanceMsg)  .nullable() .transform(val => val || null) .positive(distanceMsg),\r\n    sortOrder:  Yup.string().label('Sort') .typeError(sortOrderMsg) .required() .matches(/(name|distance)/, sortOrderMsg),\r\n\r\n  }),\r\n  formActionsAccessor: ()         => _eateriesAct.filterForm,\r\n  formStateSelector:   (appState) => _eateriesSel.getFormFilter(appState),\r\n});\r\n","import {generateActions}     from 'action-u';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\n\r\nexport default generateActions.root({\r\n\r\n  [_eateries]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n\r\n    dbPool: {\r\n\r\n      changed: { // actions.dbPool.changed(eateries): Action\r\n                 // > eateries changed: eateries: { eateryKey1: {id, name, addr, phone, loc, navUrl, website}, eateryKey2: {...}}\r\n                 actionMeta: {\r\n                   traits: ['eateries'],\r\n                 },\r\n      },\r\n\r\n\r\n      add: { // actions.dbPool.add(eateryId): Action\r\n             // > add eatery (from eateryId) to pool\r\n             actionMeta: {\r\n               traits: ['eateryId'],\r\n             },\r\n      \r\n        eateryDetail: { // actions.dbPool.add.eateryDetail(eatery): Action\r\n                        // > add supplied eatery to our pool\r\n                        actionMeta: {\r\n                          traits: ['eatery'],\r\n                        },\r\n      \r\n          fail: { // actions.dbPool.add.eateryDetail.fail(eateryId, err): Action\r\n                  // > in process of adding eatery, detail retrieval failed\r\n                  actionMeta: {\r\n                    traits: ['eateryId', 'err'],\r\n                  },\r\n          },\r\n        },\r\n      \r\n      },\r\n\r\n      \r\n      remove: { // actions.dbPool.remove(eateryId): Action\r\n                // > remove eatery (from eateryId) to pool\r\n                actionMeta: {\r\n                  traits: ['eateryId'],\r\n                },\r\n      },\r\n\r\n    },\r\n\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    filterForm: eateryFilterFormMeta.registrar.formActionGenesis(),\r\n\r\n    viewDetail: { // actions.viewDetail(eateryId): Action\r\n                  // > view eatery details (from supplied eateryId)\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n\r\n      close: { // actions.viewDetail.close(): Action\r\n               // > close eatery details\r\n               actionMeta: {},\r\n      },\r\n\r\n    },\r\n\r\n\r\n    spin: { // actions.spin(): Action\r\n            // > randomly select a date night eatery\r\n            actionMeta: {},\r\n\r\n      complete: { // actions.spin.complete(eateryId): Action\r\n                  // > spin complete, with supplied eateryId selected\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n      },\r\n\r\n    },\r\n\r\n\r\n  },\r\n});\r\n","import {createLogic}        from 'redux-logic';\r\nimport eateryFilterFormMeta from './eateryFilterFormMeta';\r\nimport _eateries            from './featureName';\r\nimport * as _eateriesSel    from './state';\r\nimport _eateriesAct         from './actions';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport discloseError        from 'util/discloseError';\r\nimport {toast}              from 'util/notify';\r\nimport EateryServiceMock    from './subFeatures/eateryServiceMock/EateryServiceMock';\r\n\r\n\r\n/**\r\n * Our persistent monitor that manages various aspects of a given pool.\r\n */\r\nlet curPoolMonitor = {   // current \"pool\" monitor (initially a placebo)\r\n  pool:   null,          // type: string\r\n  wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n};\r\n\r\nlet   originalEateryService = null;\r\nconst mockEateryService     = new EateryServiceMock();\r\n\r\n\r\n/**\r\n * Setup any \"guest\" user to use a \"mocked\" eatery service backed by\r\n * an in-memory DB.\r\n */\r\nexport const setupGuestUser = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.setupGuestUser`,\r\n  type: String(fassets.actions.signIn.complete),\r\n\r\n  transform({getState, action, fassets}, next) { // transform() so as to swap out service quickly (before it is needed)\r\n\r\n    if (action.user.isGuest()) {\r\n\r\n      // swap out our eatery service with a mocked in-memory source\r\n      originalEateryService = fassets.eateryService;\r\n      fassets.eateryService = mockEateryService; // AI: we are mutating fassets ... may be a  code smell\r\n\r\n      // inform user of what is going on\r\n      toast({ msg:'as a \"guest\" user, your Eatery pool is a \"mocked\" in-memory data source'});\r\n    }\r\n\r\n    next(action);\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Tear-down any \"guest\" user, reverting to the original eatery\r\n * service.\r\n */\r\nexport const tearDownGuestUser = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.tearDownGuestUser`,\r\n  type: String(fassets.actions.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) { // process() so as to allow the action to be supplemented with user\r\n    if (action.user.isGuest()) {\r\n      // revert our eatery service to the original service\r\n      fassets.eateryService = originalEateryService; // AI: we are mutating fassets ... may be a  code smell\r\n    }\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * This is the primary logic module, which initially loads (and\r\n * monitors changes) in the real-time DB for the pool eateries of our\r\n * active user.\r\n *\r\n * The key that drives this is the active User.pool identifier.\r\n * Therefore, we trigger the process off of the 'userProfileChanged'\r\n * action (where the User.pool is obtained).  This action is emitted:\r\n *  - on initial startup of our app\r\n *  - and when the User profile changes (TODO: a future enhancement of the app)\r\n */\r\nexport const monitorDbPool = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name:        `${_eateries}.monitorDbPool`,\r\n  type:        String(fassets.actions.userProfileChanged), // NOTE: action contains: User object (where we obtain the pool)\r\n  warnTimeout: 0, // long-running logic\r\n\r\n  validate({getState, action, fassets}, allow, reject) {\r\n\r\n    // no-op if we are already monitoring this same pool\r\n    if (action.user.pool === curPoolMonitor.pool) {\r\n      reject(action); // other-logic/middleware/reducers: YES, self's process(): NO\r\n      return;\r\n    }\r\n\r\n    // allow self's process()\r\n    allow(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // close prior monitor\r\n    curPoolMonitor.wrapUp();\r\n\r\n    // create new monitor (retaining needed info for subsequent visibility)\r\n    curPoolMonitor = {\r\n      pool:   action.user.pool,\r\n      wrapUp() {\r\n        done();\r\n      }\r\n    };\r\n\r\n    // register our real-time DB listener for the set of eateries in our pool\r\n    fassets.eateryService.monitorDbEateryPool(\r\n      action.user.pool,\r\n      fassets.sel.getLocation(getState()),\r\n      (eateries) => {\r\n\r\n        // broadcast a notification of a change in our eateries (or the initial population)\r\n        dispatch( _eateriesAct.dbPool.changed(eateries) );\r\n\r\n      });\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Close down any real-time monitor of our real-time DB pool (at sign-out time).\r\n */\r\nexport const closeDbPool = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_eateries}.closeDbPool`,\r\n  type: String(fassets.actions.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // close prior monitor\r\n    curPoolMonitor.wrapUp();\r\n\r\n    // create new placebo monitor\r\n    curPoolMonitor = {\r\n      pool:   null,          // type: string\r\n      wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n    };\r\n\r\n    done();\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Default the actions.filterForm.open() domain param from the\r\n * appState filter.\r\n */\r\nexport const defaultFilter = createLogic({\r\n\r\n  name: `${_eateries}.defaultFilter`,\r\n  type: String(_eateriesAct.filterForm.open),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    if (!action.domain) {\r\n      action.domain = _eateriesSel.getListViewFilter(getState());\r\n    }\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Process eatery filter.\r\n */\r\nexport const processFilter = createLogic({\r\n\r\n  name: `${_eateries}.processFilter`,\r\n  type: String(_eateriesAct.filterForm.process),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // console.log(`xx logic: eatery.processFilter, action is: `, action);\r\n    //   action: {\r\n    //     \"domain\": {\r\n    //       \"distance\":  6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //     \"type\": \"eateries.filter.process\",\r\n    //     \"values\": {\r\n    //       \"distance\": 6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //   }\r\n    \r\n    // show our view\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n\r\n    // close eatery form filter\r\n    dispatch( _eateriesAct.filterForm.close() );\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const spin = createLogic({\r\n\r\n  name: `${_eateries}.spin`,\r\n  type: String(_eateriesAct.spin),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    const appState         = getState();\r\n    const filteredEateries = _eateriesSel.getFilteredEateries(appState);\r\n\r\n    // supplement action with spinMsg\r\n    action.spinMsg = `... selecting your eatery from ${filteredEateries.length} entries!`;\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    setTimeout( () => {\r\n\r\n      const appState = getState();\r\n      const filteredEateries  = _eateriesSel.getFilteredEateries(appState);\r\n\r\n      // algorithm from MDN ... https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\n      const min      = Math.ceil(0);                        // min is inclusive (in usage below)\r\n      const max      = Math.floor(filteredEateries.length); // max is exclusive (in usage below)\r\n      const randIndx = Math.floor(Math.random() * (max - min)) + min;\r\n      \r\n      const randomEateryId = filteredEateries[randIndx].id;\r\n\r\n      dispatch( _eateriesAct.spin.complete(randomEateryId) );\r\n      done();\r\n\r\n    }, 1200);\r\n\r\n  },\r\n\r\n});\r\n\r\nexport const spinComplete = createLogic({\r\n\r\n  name: `${_eateries}.spinComplete`,\r\n  type: String(_eateriesAct.spin.complete),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    dispatch( _eateriesAct.viewDetail(action.eateryId) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const addToPoolPrep = createLogic({\r\n\r\n  name: `${_eateries}.addToPoolPrep`,\r\n  type: String(_eateriesAct.dbPool.add),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.fetchEateryDetail(action.eateryId)\r\n      .then(eatery => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail(eatery) );\r\n        done();\r\n      })\r\n      .catch(err => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail.fail(action.eateryId, err) );\r\n        done();\r\n      });\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\nexport const addToPool = createLogic({\r\n\r\n  name: `${_eateries}.addToPool`,\r\n  type: String(_eateriesAct.dbPool.add.eateryDetail),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // add the new eatery\r\n    fassets.eateryService.addEatery(action.eatery)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const removeFromPool = createLogic({\r\n\r\n  name: `${_eateries}.removeFromPool`,\r\n  type: String(_eateriesAct.dbPool.remove),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // remove the supplied eatery\r\n    fassets.eateryService.removeEatery(action.eateryId)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic (accumulated in index.js)\r\n// ... named exports (above) are used by unit tests :-)\r\nexport default expandWithFassets( (fassets) => [\r\n  setupGuestUser(fassets),\r\n  tearDownGuestUser(fassets),\r\n  monitorDbPool(fassets),\r\n  closeDbPool(fassets),\r\n  ...eateryFilterFormMeta.registrar.formLogic(), // inject the standard eatery filter form-based logic modules\r\n  defaultFilter,\r\n  processFilter,\r\n  spin,\r\n  spinComplete,\r\n  addToPoolPrep,\r\n  addToPool,\r\n  removeFromPool,\r\n] );\r\n","import React,\r\n       {useCallback}     from 'react';\r\nimport PropTypes         from 'prop-types';\r\n\r\nimport {useFassets}      from 'feature-u';\r\nimport {useSelector,\r\n        useDispatch}     from 'react-redux'\r\nimport {makeStyles}      from '@material-ui/core/styles';\r\nimport {useForCellPhone} from 'util/responsiveBreakpoints';\r\n\r\nimport _eateriesAct      from '../actions';\r\n\r\nimport CloseIcon         from '@material-ui/icons/Close';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogActions     from '@material-ui/core/DialogActions';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport IconButton        from '@material-ui/core/IconButton';\r\nimport Link              from '@material-ui/core/Link';\r\nimport LinkIcon          from '@material-ui/icons/Link';\r\nimport List              from '@material-ui/core/List';\r\nimport ListItem          from '@material-ui/core/ListItem';\r\nimport ListItemIcon      from '@material-ui/core/ListItemIcon';\r\nimport ListItemText      from '@material-ui/core/ListItemText';\r\nimport NavigationIcon    from '@material-ui/icons/Navigation';\r\nimport PhoneIcon         from '@material-ui/icons/Phone';\r\nimport SpinIcon          from '@material-ui/icons/SwapCalls';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from 'util/Transition';\r\n\r\n\r\n/**\r\n * EateryDetailScreen displaying the details of a given eatery.\r\n */\r\nexport default function EateryDetailScreen({eatery}) {\r\n\r\n  const fassets     = useFassets();\r\n  const curUser     = useSelector((appState) => fassets.sel.curUser(appState), [fassets]);\r\n\r\n  const dispatch    = useDispatch();\r\n  const handleClose = useCallback(() => dispatch( _eateriesAct.viewDetail.close() ), []);\r\n  const handleSpin  = useCallback(() => dispatch( _eateriesAct.spin() ),             []);\r\n\r\n  const isCellPhone = useForCellPhone();\r\n\r\n  const classes     = useStyles();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={handleClose}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        \r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery\r\n          <Typography color=\"inherit\" display=\"inline\" noWrap>\r\n            &nbsp;({curUser.pool})\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <IconButton color=\"inherit\" onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <List>\r\n\r\n          <ListItem>\r\n            <ListItemText \r\n                primary={<Typography variant=\"h6\">{eatery.name}</Typography>}/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <NavigationIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.navUrl}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.addr}\r\n                  </Link>\r\n                }\r\n                secondary={`${eatery.distance} mile${eatery.distance===1?'':'s'}`}/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <PhoneIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={`tel:${eatery.phone}`}\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.phone}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n          {eatery.website !== 'not-in-search' &&\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <LinkIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.website}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    Web Site\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n          }\r\n\r\n        </List>\r\n      </DialogContent>\r\n\r\n      <DialogActions className={classes.bottomBar}>\r\n        <IconButton color=\"inherit\" onClick={handleSpin}>\r\n          <SpinIcon/>\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin Again</Typography>\r\n        </IconButton>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nEateryDetailScreen.propTypes = {\r\n  eatery:     PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  bottomBar: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n}) );\r\n","import React,\r\n       {useCallback}       from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}       from 'react-redux'\r\nimport {makeStyles}        from '@material-ui/core/styles';\r\nimport {useForWiderDevice} from 'util/responsiveBreakpoints';\r\n\r\nimport _eateriesAct        from '../actions';\r\nimport * as _eateriesSel   from '../state';\r\n\r\nimport Link                from '@material-ui/core/Link';\r\nimport LinkIcon            from '@material-ui/icons/Link';\r\nimport List                from '@material-ui/core/List';\r\nimport ListItem            from '@material-ui/core/ListItem';\r\nimport ListItemIcon        from '@material-ui/core/ListItemIcon';\r\nimport ListItemText        from '@material-ui/core/ListItemText';\r\nimport NavigationIcon      from '@material-ui/icons/Navigation';\r\nimport RestaurantIcon      from '@material-ui/icons/Restaurant';\r\nimport Table               from '@material-ui/core/Table';\r\nimport TableBody           from '@material-ui/core/TableBody';\r\nimport TableCell           from '@material-ui/core/TableCell';\r\nimport TableHead           from '@material-ui/core/TableHead';\r\nimport TableRow            from '@material-ui/core/TableRow';\r\nimport Typography          from '@material-ui/core/Typography';\r\n\r\nimport EateryDetailScreen  from './EateryDetailScreen';\r\nimport SplashScreen        from 'util/SplashScreen';\r\n\r\n\r\n/**\r\n * EateriesListScreen displaying a set of eateries (possibly filtered).\r\n */\r\nexport default function EateriesListScreen() {\r\n\r\n  const filteredEateries = useSelector((appState) => _eateriesSel.getFilteredEateries(appState), []);\r\n  const filter           = useSelector((appState) => _eateriesSel.getListViewFilter(appState),   []);\r\n  const selectedEatery   = useSelector((appState) => _eateriesSel.getSelectedEatery(appState),   []);\r\n  const spinMsg          = useSelector((appState) => _eateriesSel.getSpinMsg(appState),          []);\r\n\r\n  const dispatch    = useDispatch();\r\n  const showDetail  = useCallback((eateryId) => {\r\n    //console.log(`xx showDetail for ${eateryId}`);\r\n    dispatch( _eateriesAct.viewDetail(eateryId) );\r\n  }, []);\r\n\r\n  const isWiderDevice = useForWiderDevice();\r\n\r\n  const classes = useStyles();\r\n\r\n  // no-op if our pool entries are NOT yet retrieved\r\n  if (!filteredEateries) {\r\n    return <SplashScreen msg=\"... waiting for pool entries\"/>;\r\n  }\r\n\r\n  const orderByDistance = filter.sortOrder === 'distance';\r\n\r\n\r\n  //***\r\n  //*** inner function to list content for smaller devices (like cell phones)\r\n  //*** ... using <List>\r\n  //***\r\n\r\n  let currentDistance = -1;\r\n  function contentAsList() {\r\n\r\n    const content = [];\r\n\r\n    filteredEateries.forEach( eatery => {\r\n\r\n      // optionally supply sub-header when ordered by distance\r\n      if (orderByDistance && eatery.distance !== currentDistance) {\r\n        currentDistance = eatery.distance;\r\n        const subTxt = `${currentDistance} mile${currentDistance===1?'':'s'}`;\r\n        content.push((\r\n          <ListItem key={`subheader${currentDistance}`}\r\n                    dense\r\n                    className={classes.divider}\r\n                    divider>\r\n            <ListItemText primary={subTxt}\r\n                          primaryTypographyProps={{variant:'subtitle1'}}/>\r\n          </ListItem>\r\n        ));\r\n      }\r\n\r\n      // supply our primary entry content\r\n      content.push((\r\n        <ListItem key={eatery.id}\r\n                  dense\r\n                  button\r\n                  divider\r\n                  onClick={()=>showDetail(eatery.id)}>\r\n          <ListItemIcon>\r\n            <RestaurantIcon/>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText \r\n              primary={\r\n                <Typography variant=\"h6\"\r\n                  noWrap>\r\n                  {eatery.name}\r\n                  <Typography display=\"inline\" noWrap>\r\n                    &nbsp;({`${eatery.distance} mile${eatery.distance===1?'':'s'}`})\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {eatery.addr}\r\n                </Typography>\r\n              }/>\r\n        </ListItem>\r\n      ));\r\n    });\r\n    return <List>{content}</List>;\r\n  }\r\n\r\n  //***\r\n  //*** inner function to list content for larger devices (like tablets or desktops)\r\n  //*** ... using <Table>\r\n  //***\r\n\r\n  function contentAsTable() {\r\n    return (\r\n      <Table size=\"small\" className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            {orderByDistance && <TableCell className={classes.tableHeader}>Miles</TableCell>}\r\n            <TableCell className={classes.tableHeader}>Eatery</TableCell>\r\n            <TableCell className={classes.tableHeader}>Phone</TableCell>\r\n            {!orderByDistance && <TableCell className={classes.tableHeader}>Miles</TableCell>}\r\n            <TableCell className={classes.tableHeader}>Address</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          { filteredEateries.map( eatery => (\r\n              <TableRow key={eatery.id}\r\n                        hover\r\n                        onClick={()=>showDetail(eatery.id)}>\r\n\r\n                {orderByDistance && <TableCell align=\"right\">{eatery.distance}</TableCell>}\r\n\r\n                <TableCell>\r\n                  {eatery.name}\r\n                  {eatery.website !== 'not-in-search' &&\r\n                   <>\r\n                     &nbsp;\r\n                     <Link href={eatery.website}\r\n                           target=\"_blank\"\r\n                           color=\"inherit\"\r\n                           underline=\"none\">\r\n                       <LinkIcon className={classes.icon}/>\r\n                     </Link>\r\n                   </>\r\n                  }\r\n                </TableCell>\r\n\r\n                <TableCell><Typography variant=\"body2\" noWrap>{eatery.phone}</Typography></TableCell>\r\n\r\n                {!orderByDistance && <TableCell align=\"right\">{eatery.distance}</TableCell>}\r\n\r\n                <TableCell>\r\n                  <Link href={eatery.navUrl}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    <NavigationIcon className={classes.icon}/>\r\n                  </Link> &nbsp;\r\n                  {eatery.addr}\r\n                </TableCell>\r\n\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  //***\r\n  //*** render our EateriesListScreen\r\n  //***\r\n\r\n  const ListContent = () => isWiderDevice ? contentAsTable() : contentAsList();\r\n\r\n  return (\r\n    <>\r\n      <ListContent/>\r\n      {spinMsg        && <SplashScreen msg={spinMsg}/>}\r\n      {selectedEatery && <EateryDetailScreen eatery={selectedEatery}/>}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n\r\n  // vary background grey intensity based on light/dark theme\r\n  // ... and text auto oscillates\r\n  divider: {\r\n    backgroundColor: theme.palette.divider,\r\n  },\r\n\r\n  table: {\r\n    // hack to move table down a bit (so as to not be covered by our App Header)\r\n    marginTop:  15,\r\n  },\r\n\r\n  // hack to make table header ALWAYS visible <<< using \"sticky\"\r\n  tableHeader: {\r\n    top:      0,\r\n    position: \"sticky\",\r\n    color:    'black',\r\n\r\n    // set the table header background to a light grey\r\n    // NOTE: uses  an opacity-level of 1 (NOT TRANSPARENT)\r\n    //       - use technique that does NOT affect our children (via rgba css function)\r\n    //         ... so when scrolling (with the \"sticky\" attr, the header is NOT obscured\r\n    //       - this is accomplished through the rgba css function\r\n    //         ... i.e. it is NOT possible through the 'opacity' css attr\r\n    //       - for this reason we cannot tap into our theme colors (via theme.palette)\r\n    //       - SO we choose a neutral color (light grey)\r\n    background: 'rgba(200, 200, 200, 1.0)',  // opacity-level of 1 (NOT TRANSPARENT), while NOT affecting children (because of rgba usage)\r\n  },\r\n\r\n  icon: {\r\n    width: 16,\r\n    color: theme.palette.secondary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n    verticalAlign: 'middle',             // FIX icon alignment when used in conjunction with text\r\n  },\r\n\r\n}) );\r\n","import React                 from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch}         from 'react-redux'\r\nimport {makeStyles}          from '@material-ui/core/styles';\r\nimport {useForCellPhone}     from 'util/responsiveBreakpoints';\r\n\r\nimport eateryFilterFormMeta  from '../eateryFilterFormMeta';\r\nimport ITextField            from 'util/iForms/comp/ITextField';\r\nimport IRadioField           from 'util/iForms/comp/IRadioField';\r\n\r\nimport Button                from '@material-ui/core/Button';\r\nimport CloseIcon             from '@material-ui/icons/Close';\r\nimport Dialog                from '@material-ui/core/Dialog';\r\nimport DialogContent         from '@material-ui/core/DialogContent';\r\nimport DialogContentText     from '@material-ui/core/DialogContentText';\r\nimport DialogTitle           from '@material-ui/core/DialogTitle';\r\nimport FilterIcon            from '@material-ui/icons/FilterList';\r\nimport FormHelperText        from '@material-ui/core/FormHelperText';\r\nimport IconButton            from '@material-ui/core/IconButton';\r\nimport InProgress            from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport {TransitionSlide}     from 'util/Transition';\r\nimport CenterItems           from 'util/CenterItems';\r\n\r\n\r\n/**\r\n * EateryFilterScreen: gather filter information (selection criteria) \r\n * for our eatery pool view.\r\n */\r\nexport default function EateryFilterScreen() {\r\n\r\n  const dispatch    = useDispatch();\r\n  const formState   = useSelector((appState) => eateryFilterFormMeta.formStateSelector(appState), []);\r\n\r\n  const isCellPhone = useForCellPhone();\r\n\r\n  const classes     = useStyles();\r\n\r\n  const iForm = eateryFilterFormMeta.IForm(formState, dispatch); // AI: unsure if I should wrap in useMemo()\r\n\r\n  const formLabel       = iForm.getLabel();\r\n  const formInProcess   = iForm.inProcess();\r\n  const sortOrderRadioProps = {\r\n    fieldName: 'sortOrder',\r\n    iForm,\r\n  };\r\n\r\n  const formErrMsg = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={iForm.handleClose}\r\n            fullScreen={isCellPhone}\r\n            TransitionComponent={TransitionSlide}>\r\n\r\n      <form onSubmit={iForm.handleProcess}>\r\n\r\n        <DialogTitle disableTypography className={classes.titleBar}>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            {formLabel}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={iForm.handleClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText className={classes.entry}>\r\n            filter your pool with these settings ...\r\n          </DialogContentText>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"distance\"\r\n                        iForm={iForm}\r\n                        autoFocus\r\n                        type=\"number\"\r\n                        helperText=\"prune entries within this distance (leave blank to view entire pool)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <IRadioField {...sortOrderRadioProps}\r\n                         row\r\n                         helperText=\"sort entries by Restaurant (name) or Distance\">\r\n              <IRadioField.Op value=\"name\"     label=\"Restaurant\" {...sortOrderRadioProps}/>\r\n              <IRadioField.Op value=\"distance\" label=\"Distance\" {...sortOrderRadioProps}/>\r\n            </IRadioField>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <FilterIcon className={classes.icon}/>\r\n                Filter Pool\r\n              </Button>\r\n            </CenterItems>\r\n          </div>\r\n\r\n          {formErrMsg && (\r\n             <div className={classes.entry}>\r\n               <FormHelperText error>{formErrMsg}</FormHelperText>\r\n             </div>\r\n           )}\r\n\r\n          {formInProcess && (\r\n             <div className={classes.entry}>\r\n               <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n             </div>\r\n           )}\r\n\r\n        </DialogContent>\r\n\r\n      </form>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n\r\n  inProgress: {\r\n    margin: theme.spacing(4),\r\n  },\r\n\r\n}) );\r\n","import React               from 'react';\r\nimport * as _eateriesSel   from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\nimport featureName         from './featureName';\r\nimport EateriesListScreen  from './comp/EateriesListScreen';\r\nimport EateryFilterScreen  from './comp/EateryFilterScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default [\r\n\r\n  featureRoute({\r\n    priority: PRIORITY.HIGH,\r\n    content({fassets, appState}) {\r\n      // display EateryFilterScreen, when form is active (accomplished by our logic)\r\n      // ... this is done as a priority route, because this screen can be used to\r\n      //     actually change the view - so we display it regarless of the state of the active view\r\n      if (_eateriesSel.isFormFilterActive(appState)) {\r\n        return <EateryFilterScreen/>;\r\n      }\r\n    }\r\n  }),\r\n\r\n  featureRoute({\r\n    content({fassets, appState}) {\r\n\r\n      // allow other down-stream features to route, when the active view is NOT ours\r\n      if (fassets.sel.curView(appState) !== featureName) {\r\n        return null;\r\n      }\r\n      \r\n      // ***\r\n      // *** at this point we know the active view is ours\r\n      // ***\r\n      \r\n      // display our EateriesListScreen\r\n      return <EateriesListScreen/>;\r\n    }\r\n  }),\r\n\r\n];\r\n","import React,\r\n       {useCallback} from 'react';\r\n\r\nimport {useFassets}  from 'feature-u';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport _eateries     from '../featureName';\r\nimport _eateriesAct  from '../actions';\r\n\r\nimport {makeStyles}  from '@material-ui/core/styles';\r\n\r\nimport Divider                  from '@material-ui/core/Divider';\r\nimport ListItem                 from '@material-ui/core/ListItem';\r\nimport ListItemIcon             from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText             from '@material-ui/core/ListItemText';\r\nimport PoolIcon                 from '@material-ui/icons/RestaurantMenu'; // possibilities: Restaurant RestaurantMenu Star StarRate Stars BlurOn AllOut DragIndicator GroupWork Reorder Apps Whatshot\r\nimport SettingsIcon             from '@material-ui/icons/Tune';           // possibilities: Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\nimport IconButton               from '@material-ui/core/IconButton';\r\n\r\n/**\r\n * EateryLeftNavItem: our Eatery entry into the LeftNav.\r\n */\r\nexport default function EateryLeftNavItem() {\r\n\r\n  const fassets      = useFassets();\r\n  const dispatch     = useDispatch();\r\n  const changeView   = useCallback(() => dispatch( fassets.actions.changeView(_eateries) ), [fassets]);\r\n  const handleFilter = useCallback(() => dispatch( _eateriesAct.filterForm.open() ),        [fassets]);\r\n  const classes      = useStyles();\r\n\r\n  // render our menu item\r\n  return (\r\n    <>\r\n      <ListItem button\r\n                onClick={changeView}>\r\n        <ListItemIcon className={classes.major}><PoolIcon/></ListItemIcon>\r\n        <ListItemText primaryTypographyProps={{className:classes.major}} primary=\"Pool\"/>\r\n        <ListItemSecondaryAction onClick={handleFilter}>\r\n          <ListItemIcon><IconButton className={classes.minor}><SettingsIcon/></IconButton></ListItemIcon>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  major: {\r\n    color: theme.palette.grey.A200, // light grey (or redish: theme.palette.secondary.main\r\n  },\r\n  minor:{\r\n    color: theme.palette.primary.dark,   // bluish\r\n  },\r\n}) );\r\n","import {createFeature}    from 'feature-u';\r\nimport _eateries          from './featureName';\r\nimport _eateriesAct       from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (eateryFilterFormMeta)\r\nimport reducer            from './state';\r\nimport * as _eateriesSel  from './state';\r\nimport logic              from './logic';\r\nimport route              from './route';\r\nimport EateryLeftNavItem  from './comp/EateryLeftNavItem';\r\nimport EateriesTitle      from './comp/EateriesTitle';\r\nimport EateriesFooter     from './comp/EateriesFooter';\r\n\r\n\r\n// feature: eateries\r\n//          manage and promotes the eateries view (a list of pooled\r\n//          and filtered) restaurants, with the ability to select an\r\n//          eatery through a random spin.  Selected eateries provides\r\n//          the ability to phone, visit their web site, and navigate\r\n//          to them (full details in README)\r\nexport default createFeature({\r\n  name: _eateries,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      'actions.addEatery':     _eateriesAct.dbPool.add,      // addEatery(eateryId)    ... slight naming variation to original action\r\n      'actions.removeEatery':  _eateriesAct.dbPool.remove,   // removeEatery(eateryId) ... slight naming variation to original action\r\n\r\n      'sel.getEateryDbPool':   _eateriesSel.getDbPool, // ... slight naming variation to original selector\r\n    },\r\n\r\n    defineUse: {\r\n      [`AppMotif.LeftNavItem.cc4_${_eateries}`]: EateryLeftNavItem, // inject our entry into the leftNav\r\n\r\n      // auxiliary view content for the eateries view\r\n      [`AppMotif.auxViewContent.${_eateries}`]: {\r\n        TitleComp:  EateriesTitle,\r\n        FooterComp: EateriesFooter,\r\n      },\r\n    }\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // default the app view to be self\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n  },\r\n});\r\n","import React             from 'react';\r\n\r\nimport {useFassets}      from 'feature-u';\r\nimport {useSelector}     from 'react-redux'\r\n\r\nimport * as _eateriesSel from '../state';\r\nimport Typography        from '@material-ui/core/Typography';\r\n\r\n/**\r\n * EateriesTitle displaying the eateries pool title\r\n */\r\nexport default function EateriesTitle() {\r\n\r\n  const fassets = useFassets();\r\n\r\n  const curUser = useSelector((appState) => fassets.sel.curUser(appState),            [fassets]);\r\n  const filter  = useSelector((appState) => _eateriesSel.getListViewFilter(appState), []);\r\n\r\n  return (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Pool\r\n      <Typography color=\"inherit\" display=\"inline\" noWrap>\r\n        &nbsp;({curUser.pool})\r\n      </Typography>\r\n\r\n      {filter.distance && \r\n       <Typography color=\"inherit\"\r\n                   noWrap>\r\n         ... within {filter.distance} mile{filter.distance===1?'':'s'}\r\n       </Typography>}\r\n    </Typography>\r\n  );\r\n}\r\n","import React,\r\n       {useCallback}     from 'react';\r\nimport {useDispatch}     from 'react-redux'\r\n\r\nimport _eateriesAct      from '../actions';\r\n\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport IconButton        from '@material-ui/core/IconButton';\r\nimport SpinIcon          from '@material-ui/icons/SwapCalls'; // ... -OR-  loop, swap_vert, vertical_align_center, done, playlist_add_check, check_box, check, swap_calls, present_to_all \r\nimport Tooltip           from '@material-ui/core/Tooltip';\r\nimport Typography        from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * EateriesFooter displaying the spin control\r\n */\r\nexport default function EateriesFooter() {\r\n\r\n  const dispatch   = useDispatch();\r\n  const handleSpin = useCallback(() => dispatch( _eateriesAct.spin() ), []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n      <Typography>&nbsp;</Typography>\r\n      <IconButton color=\"inherit\" onClick={handleSpin}>\r\n        <SpinIcon/>\r\n        <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin</Typography>\r\n      </IconButton>\r\n      <Tooltip title=\"powered by Google Firebase\">\r\n        <img width=\"50px\" src=\"/firebaseLogo.png\" alt=\"\"/>\r\n      </Tooltip>\r\n    </Grid>\r\n  );\r\n}\r\n","import {createFeature}   from 'feature-u';\r\nimport EateryServiceAPI  from './EateryServiceAPI';\r\n\r\n// feature: eateryService\r\n//          promote a service API that manages a real-time persistent\r\n//          \"Eateries\" DB, through the `eateryService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'eateryService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['eateryService', {required: true, type: objectOfTypeEateryServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeEateryServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof EateryServiceAPI ? null : 'object of type EateryServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import firebase         from 'firebase/app';\r\nimport                       'firebase/database';\r\nimport geodist          from 'geodist';\r\nimport EateryServiceAPI from '../eateryService/EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceFirebase is the **real** EateryServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceFirebase extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = {       // current \"pool\" monitor (initially a placebo)\r\n    pool:   null,          // type: string\r\n    dbRef:  null,          // type: firebase.database.Reference\r\n    wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n  };\r\n\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n\r\n    // close prior monitor (if any)\r\n    this.curPoolMonitor.wrapUp();\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      dbRef: firebase.database().ref(`/pools/${pool}`),\r\n      wrapUp() {\r\n        this.dbRef.off('value');\r\n      }\r\n    };\r\n\r\n    // listen for eatery data changes in the specified pool\r\n    this.curPoolMonitor.dbRef.on('value', (snapshot) => {\r\n\r\n      // conditional logic accommodates an empty pool\r\n      // ... a firebase DB philosophy is that it will NOT store empty data (or collections)\r\n      const eateries = snapshot.val() !== null ? snapshot.val() : {};\r\n\r\n      // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n      for (const eateryId in eateries) {\r\n        const eatery = eateries[eateryId];\r\n        eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n      }\r\n\r\n      // notify our supplied monitorCB\r\n      // console.log(`xx EateryServiceFirebase.monitorDbEateryPool() -and- MOCK RECORDING ... eateries changed for pool '${this.curPoolMonitor.pool}': ${JSON.stringify(eateries)}`);\r\n      monitorCB(eateries);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.addEatery() adding eatery: /pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n      dbRef.set(eatery)\r\n           .then( () => { // a void resolve indicates the add is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`add eatery (${eatery.id}) to pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n      // remove the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.removeEatery() removeing eatery: /pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n      dbRef.set(null)\r\n           .then( () => { // a void resolve indicates the remove is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`remove eatery (${eateryId}) from pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}       from 'feature-u';\r\nimport featureFlags          from 'featureFlags';\r\nimport EateryServiceFirebase from './EateryServiceFirebase';\r\n\r\n// feature: eateryServiceFirebase\r\n//          defines the real 'eateryService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceFirebase(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {createFeature}    from 'feature-u';\r\nimport featureFlags       from 'featureFlags';\r\nimport EateryServiceMock  from './EateryServiceMock';\r\n\r\n// feature: eateryServiceMock\r\n//          defines the mock 'eateryService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {createFeature}     from 'feature-u';\r\nimport featureFlags        from 'featureFlags';\r\nimport {createBootstrapFn} from 'features/common/bootstrap/bootstrapFn';\r\nimport initializeFirebase  from './initializeFirebase';\r\n\r\n// feature: initFirebase\r\n//          initialize the Google Firebase service (when needed)\r\nexport default createFeature({\r\n  name: 'initFirebase',\r\n\r\n  // firebase is only required when we are using real services (i.e. when WIFI enabled)\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // initialize firebase using our bootstrap process\r\n  fassets: {\r\n    defineUse: {\r\n      'bootstrap.initFirebase': createBootstrapFn( 'Waiting for Firebase Initialization', \r\n                                                   ({dispatch, fassets}) => initializeFirebase() ),\r\n    },\r\n  },\r\n\r\n});\r\n","import firebase  from 'firebase/app';\r\nimport {decode}  from 'util/encoder';\r\n\r\n// initialize the Google Firebase service\r\nexport default function initializeFirebase() {\r\n\r\n  // ERROR PROCESSING NOTE: \r\n  // - we wrap our code in a promise to handle error processing correctly\r\n  // - there is NO NEED to append err.defineAttemptingToMsg('Initialize Firebase')\r\n  //   BECAUSE this is already accomplished through the bootstrap process that executes us\r\n  return new Promise( (resolve, reject) => {\r\n  \r\n    // fetch our FireBase App Configuration: `public/fbac`\r\n    fetch('/fbac')\r\n\r\n      .then((resp) => {\r\n        // console.log(`xx resp.ok: ${resp.ok}, resp.status: ${resp.status} ... resp: `, resp);\r\n        if (resp.ok) {\r\n          return resp.text();\r\n        }\r\n        else {\r\n          // NOTE: Due to routing considerations, a non-existent resource is allowed,\r\n          //       AND returns the entire content of index.html\r\n          //       IN OTHER WORDS, resp.ok is ALWAYS true\r\n          //       ... (see check below)\r\n          return reject( new Error(`**ERROR** Accessing /fbac resource was REJECTED with status: ${resp.status}`) );\r\n        }\r\n      })\r\n\r\n      .then((txt)  => {\r\n        // check for non-existent resource (see NOTE above)\r\n        if (txt.includes('<html')) {\r\n          // NOTE: this is the only real error we will ever emit\r\n          return reject( new Error(`**ERROR** Non Existent Resource: /fbac`) );\r\n        }\r\n  \r\n        //***\r\n        //*** process our credentials\r\n        //***\r\n        else {\r\n          // console.log(`xx /fbac resource content: '${txt}'`);\r\n          const firebaseAppConfig = decode(txt);\r\n          // console.log('xx firebaseAppConfig: ', firebaseAppConfig);\r\n\r\n          // NOTE: THE initializeApp() invocation generates absolutely NO error condition\r\n          //       - for example if the API key is invalid it executes through (even with a try/catch), \r\n          //         and we receive runtime errors when attempting to use the service (ex: login screen)\r\n          //         ... Error: Your API key is invalid, please check you have copied it correctly.\r\n          firebase.initializeApp(firebaseAppConfig);\r\n\r\n          resolve(null); // resolve promise to allow bootstrap to continue\r\n        }\r\n      })\r\n      .catch((err) => { // NEVER executes this (see NOTE above)\r\n        console.log(`ERROR: reading /fbac: ${err} ... `, err);\r\n        return reject( err );\r\n      });\r\n  \r\n  });\r\n\r\n}\r\n","import {createFeature}         from 'feature-u';\r\nimport featureFlags            from 'featureFlags';\r\nimport {createBootstrapFn}     from 'features/common/bootstrap/bootstrapFn';\r\nimport initializeGooglePlaces  from './initializeGooglePlaces';\r\n\r\n// feature: initGooglePlaces\r\n//          initialize the Google Places service (when needed)\r\nexport default createFeature({\r\n  name: 'initGooglePlaces',\r\n\r\n  // Google Places is only required when we are using real services (i.e. when WIFI enabled)\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // initialize Google Places using our bootstrap process\r\n  fassets: {\r\n    defineUse: {\r\n      'bootstrap.initGooglePlaces': createBootstrapFn( 'Waiting for Google Places Initialization', \r\n                                                       ({dispatch, fassets}) => initializeGooglePlaces() ),\r\n    },\r\n  },\r\n\r\n});\r\n","import {decode}  from 'util/encoder';\r\n\r\n// initialize the Google Places service\r\nexport default function initializeGooglePlaces() {\r\n\r\n  // ERROR PROCESSING NOTE: \r\n  // - we wrap our code in a promise to handle error processing correctly\r\n  // - there is NO NEED to append err.defineAttemptingToMsg('Initialize Google Places')\r\n  //   BECAUSE this is already accomplished through the bootstrap process that executes us\r\n  return new Promise( (resolve, reject) => {\r\n    \r\n    // fetch our Google Places API Key: `public/gpak`\r\n    fetch('/gpak')\r\n\r\n      .then((resp) => {\r\n        // console.log(`xx resp.ok: ${resp.ok}, resp.status: ${resp.status} ... resp: `, resp);\r\n        if (resp.ok) {\r\n          return resp.text();\r\n        }\r\n        else {\r\n          // NOTE: Due to routing considerations, a non-existent resource is allowed,\r\n          //       AND returns the entire content of index.html\r\n          //       IN OTHER WORDS, resp.ok is ALWAYS true\r\n          //       ... (see check below)\r\n          return reject( new Error(`**ERROR** Accessing /gpak resource was REJECTED with status: ${resp.status}`) );\r\n        }\r\n      })\r\n\r\n      .then((txt)  => {\r\n        // check for non-existent resource (see NOTE above)\r\n        if (txt.includes('<html')) {\r\n          // NOTE: this is the only real error we will ever emit\r\n          return reject( new Error(`**ERROR** Non Existent Resource: /gpak`) );\r\n        }\r\n        \r\n        //***\r\n        //*** process our credentials\r\n        //***\r\n        else {\r\n          // console.log(`xx /gpak resource content: '${txt}'`);\r\n          const googlePlacesApiKey = decode(txt);\r\n          // console.log('xx googlePlacesApiKey: ', googlePlacesApiKey);\r\n\r\n          // bootstrap the script tag required by Google Places API\r\n          // NOTE: Due to the nature of injecting a script tag (with the credentials)\r\n          //       it is NOT possible to detect an error condition for invalid credentials.\r\n          //       ... the only indication of invalid credentials is a logged error in the console\r\n          //           AND and subsequent Google Places retrievals simply hang.\r\n          const scriptTag = document.createElement('script');\r\n          scriptTag.type = 'text/javascript';\r\n          scriptTag.src  = `https://maps.googleapis.com/maps/api/js?key=${googlePlacesApiKey}&libraries=places`;\r\n          document.body.appendChild(scriptTag);\r\n\r\n          resolve(null); // resolve promise to allow bootstrap to continue\r\n        }\r\n      })\r\n      .catch((err) => { // NEVER executes this (see NOTE above)\r\n        console.log(`ERROR: reading /gpak: ${err} ... `, err);\r\n        return reject( err );\r\n      });\r\n    \r\n  });\r\n\r\n}\r\n","import {createLogic}          from 'redux-logic';\r\nimport _baseUI                from './featureName';\r\nimport _baseUIAct             from './actions';\r\nimport {getUITheme,\r\n        getResponsiveMode}    from './state';\r\nimport {storeUITheme}         from './uiThemeStorage';\r\nimport {storeResponsiveMode}  from './responsiveModeStorage';\r\n\r\n/**\r\n * Monitor UI Theme changes, persisting the latest theme in our device storage.\r\n */\r\nexport const persistUITheme = createLogic({\r\n\r\n  name: `${_baseUI}.persistUITheme`,\r\n  type: String(_baseUIAct.toggleUITheme),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    storeUITheme( getUITheme(getState()) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Monitor responsiveMode changes, persisting the latest in our device storage.\r\n */\r\nexport const persistResponsiveMode = createLogic({\r\n\r\n  name: `${_baseUI}.persistResponsiveMode`,\r\n  type: String(_baseUIAct.setResponsiveMode),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    storeResponsiveMode( getResponsiveMode(getState()) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  persistUITheme,\r\n  persistResponsiveMode,\r\n];\r\n","import React,\r\n       {useState,\r\n        useCallback,\r\n        useMemo}       from 'react';\r\n\r\nimport {useFassets}    from 'feature-u';\r\nimport {makeStyles}    from '@material-ui/core/styles';\r\n\r\nimport AppBar          from '@material-ui/core/AppBar';\r\nimport Drawer          from '@material-ui/core/Drawer';\r\nimport List            from '@material-ui/core/List';\r\nimport Toolbar         from '@material-ui/core/Toolbar';\r\nimport Typography      from '@material-ui/core/Typography';\r\n\r\n/**\r\n * LeftNav: our LeftNav component that accumulates menu items via use contract.\r\n */\r\nexport default function LeftNav() {\r\n\r\n  const [leftNavVisible, setLeftNavVisible] = useState(false);\r\n\r\n  _openLeftNav       = useCallback(() => setLeftNavVisible(true),  []);\r\n  const closeLeftNav = useCallback(() => setLeftNavVisible(false), []);\r\n\r\n  const leftNavItems        = useFassets('AppMotif.LeftNavItem.*@withKeys');\r\n  const orderedLeftNavItems = useMemo(() => (\r\n    [...leftNavItems].sort(([item1Key], [item2Key]) => item1Key.localeCompare(item2Key))\r\n  ), [leftNavItems]);\r\n\r\n  const classes = useStyles();\r\n\r\n  // AI: have seen some usage of tabIndex in <div> under <Drawer> (unsure if needed)\r\n  //     tabIndex={0} ... should be focus-able in sequential keyboard navigation, but its order is defined by the document's source order */}\r\n  return (\r\n    <Drawer open={leftNavVisible}\r\n            onClose={closeLeftNav}>\r\n      <div className={classes.leftNav}\r\n           onClick={closeLeftNav}\r\n           onKeyDown={closeLeftNav}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Select a view\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          {orderedLeftNavItems.map( ([fassetsKey, LeftNavItem]) => <LeftNavItem key={fassetsKey}/> )}\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  leftNav: {\r\n    width: 250, // make width significant enough to space out our secondary menu icons\r\n  },\r\n}) );\r\n\r\n\r\n/**\r\n * Utility function that opens our left-nav menu.\r\n */\r\nexport function openLeftNav() { // exported for use by our own: AppMotif\r\n  if (_openLeftNav) {\r\n    _openLeftNav();\r\n  }\r\n}\r\nlet _openLeftNav = null; // expose our inner function\r\n\r\n","import React,\r\n       {useMemo}      from 'react';\r\nimport PropTypes      from 'prop-types';\r\n\r\nimport {useFassets}   from 'feature-u';\r\nimport {useSelector}  from 'react-redux'\r\n\r\nimport {makeStyles}   from '@material-ui/core/styles';\r\n\r\nimport LeftNav        from './LeftNav';\r\nimport {openLeftNav}  from './LeftNav';\r\nimport UserMenu       from './UserMenu';\r\n\r\nimport AppBar         from '@material-ui/core/AppBar';\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport MenuIcon       from '@material-ui/icons/Menu';\r\nimport Toolbar        from '@material-ui/core/Toolbar';\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * AppMotif is a re-usable top-level component that establishes\r\n * the following application characteristics:\r\n * \r\n * - a **Left Nav** menu\r\n * - a **User Menu** menu\r\n * - a **Current View** state _(orchestrating which application view is active)_\r\n * - a **Tool Bar** with various artifacts (ex: title bar and footer)\r\n * \r\n * While these controls are promoted through AppMotif, it's content\r\n * is accumulated from external features through various **Use\r\n * Contracts**.\r\n\r\n * AppMotif is auto injected through the MainLayout component,\r\n * however, it is only active when an active user is **signed-in**.\r\n * \r\n * The main page content is rendered as children of this component\r\n * (like eateries, discovery, etc.).\r\n *\r\n * USAGE:\r\n * ```\r\n *   <AppMotif>\r\n *     ... app page content here\r\n *   </AppMotif>\r\n * ```\r\n * \r\n * Please refer to the **`baseUI` README** for more information.\r\n */\r\nexport default function AppMotif({children}) {\r\n\r\n  const fassets = useFassets();\r\n\r\n  const curUser = useSelector( (appState) => fassets.sel.curUser(appState), [fassets] );\r\n  const curView = useSelector( (appState) => fassets.sel.curView(appState), [fassets] );\r\n\r\n  const classes = useStyles();\r\n\r\n  // define our auxiliary view content\r\n  const viewAuxiliaryContent    = fassets.get('AppMotif.auxViewContent.*@withKeys');\r\n  const curViewAuxiliaryContent = useMemo(() => resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent), [curView, viewAuxiliaryContent]);\r\n  const {TitleComp, FooterComp} = curViewAuxiliaryContent;\r\n\r\n  // no-op when no user is signed-in\r\n  if (!curUser.isUserSignedIn()) {\r\n    return (\r\n      <>\r\n        {children}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n\r\n      {/* Title Bar */}\r\n      <AppBar className={classes.appBar}\r\n              position=\"absolute\">\r\n        <Toolbar className={classes.toolbar}\r\n                 disableGutters={false}>\r\n\r\n          {/* Left Nav Activation Button openLeftNav */}\r\n          <IconButton className={classes.menuButton}\r\n                      color=\"inherit\"\r\n                      onClick={openLeftNav}>\r\n            <MenuIcon/>\r\n          </IconButton>\r\n\r\n          {/* Title */}\r\n          <div className={classes.title}>\r\n            <TitleComp/>\r\n          </div>\r\n\r\n          {/* User Profile Menu */}\r\n          <UserMenu curUser={curUser}/>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Left Nav */}\r\n      <LeftNav/>\r\n\r\n      {/* Page Content */}\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n\r\n      {/* Optional Bottom Bar */}\r\n      {FooterComp && (\r\n         <AppBar className={classes.bottomBar}\r\n                 position=\"absolute\">\r\n           <Toolbar className={classes.toolbar}\r\n                    disableGutters={false}>\r\n             <FooterComp/>\r\n           </Toolbar>\r\n         </AppBar>\r\n       )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nAppMotif.propTypes = {\r\n  children: PropTypes.node.isRequired, // main page content (like eateries and discovery)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  app: {\r\n    display: 'flex', // KJB: does not seem to be doing anything\r\n  },\r\n\r\n  appBar: {\r\n    // ***Dashboard Sample***\r\n    // zIndex:     theme.zIndex.drawer + 1,\r\n    // transition: theme.transitions.create(['width', 'margin'], {\r\n    //   easing:   theme.transitions.easing.sharp,\r\n    //   duration: theme.transitions.duration.leavingScreen,\r\n    // }),\r\n  },\r\n\r\n  bottomBar: {\r\n    top:        'auto',\r\n    bottom:     0,\r\n  },\r\n\r\n  toolbar: {\r\n    // ***Dashboard Sample***\r\n    // paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: 36, // proper spacing between menu button and title\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',                 // content window is height is same as our viewport (100%)\r\n    overflow: 'auto',                // add scrollbar ONLY when necessary\r\n\r\n    paddingTop:    '4em', // HACK: so ToolBar doesn't cover up ... must be a better way\r\n    paddingBottom: '4em', // HACK: so BottomBar doesn't cover up ... must be a better way\r\n    // padding: theme.spacing(3), // ... from sample content ... sample: 8 * 3\r\n  },\r\n}) );\r\n\r\n\r\nfunction resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent) {\r\n  const matchKey = `AppMotif.auxViewContent.${curView}`;\r\n  const [, curViewAuxiliaryContent] = viewAuxiliaryContent.find( ([key]) => key === matchKey ) || fallbackViewAuxiliaryContent;\r\n  return curViewAuxiliaryContent;\r\n}\r\n\r\nconst fallbackViewAuxiliaryContent = ['AppMotif.auxViewContent.FALLBACK', {\r\n  TitleComp: () => (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      App Motif\r\n    </Typography>\r\n  ),\r\n}];\r\n","import React,\r\n       {useMemo}          from 'react';\r\nimport {useSelector}      from 'react-redux'\r\nimport PropTypes          from 'prop-types';\r\nimport {makeStyles}       from '@material-ui/core/styles';\r\nimport {MuiThemeProvider,      // NOTE: MuiThemeProvider **SHOULD** be at the root of ALL visible components\r\n        createMuiTheme}   from '@material-ui/core/styles';\r\nimport CssBaseline        from '@material-ui/core/CssBaseline';\r\nimport AppMotif           from './AppMotif';\r\nimport Notify             from 'util/notify';\r\nimport {getUITheme}       from '../state';\r\n\r\n\r\n/**\r\n * MainLayout is a re-usable top-level component that promotes the\r\n * proper Material-UI (MUI) theming/styling WITH a responsive layout.\r\n * \r\n * The following items are provided through this component:\r\n *\r\n * - a **Responsive Design** that auto adjusts for desktops, cell\r\n *   phones, and portable devices\r\n *\r\n * - a **UI Theme** allowing the user to choose from light/dark\r\n *   renditions\r\n *\r\n * - an **About Dialog** is promoted from information gleaned from the\r\n *   `package.json`\r\n *\r\n * - the **Notify** utility is activated, supporting programmatic\r\n *   **toasts, alerts, and confirmations**\r\n * \r\n * Please refer to the **`baseUI` README** for more information.\r\n */\r\nexport default function MainLayout({children}) {\r\n\r\n  const uiTheme    = useSelector((appState) => getUITheme(appState), []);\r\n  const themeInUse = useMemo(() => uiTheme==='dark' ? darkTheme : lightTheme, [uiTheme]);\r\n  const classes    = useStyles();\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeInUse}>\r\n      <CssBaseline/>\r\n      <Notify/>\r\n      <main className={classes.main}>\r\n        <AppMotif>\r\n          {children}\r\n        </AppMotif>\r\n      </main>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nMainLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\n\r\nconst lightTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n\r\n  palette: {\r\n    type: 'light',\r\n    // AI: More theming to consider\r\n    // primary: {\r\n    //   main: '#37b44e',\r\n    // },\r\n    // secondary: {\r\n    //   main: '#000',\r\n    // },\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n  main: {\r\n    width:        'auto',\r\n    display:      'block', // Fix IE 11 issue.\r\n // marginLeft:   theme.spacing(3), // N/A: bad news for the overall layout\r\n // marginRight:  theme.spacing(3),\r\n\r\n // reactive design // N/A:  THIS IS CAUSING HAVOC on my main content container overall width\r\n // [theme.breakpoints.up(400 + theme.spacing(3 * 2))]: {\r\n //   width:       400,\r\n //   marginLeft:  'auto',\r\n //   marginRight: 'auto',\r\n // },\r\n  },\r\n}) );\r\n","import React,\r\n       {useMemo,\r\n        useCallback} from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch} from 'react-redux'\r\n\r\nimport _baseUIAct    from '../actions';\r\nimport {getUITheme}  from '../state';\r\n\r\nimport Chip          from '@material-ui/core/Chip';\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport MoonIcon      from '@material-ui/icons/Brightness3';\r\nimport SunIcon       from '@material-ui/icons/WbSunny';\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\n\r\n\r\n/**\r\n * ToggleUITheme: our user-profile menu items (in the App Header)\r\n * \r\n * NOTE: Because this is a \"custom\" component that is held in Menu\r\n *       (a ButtonBase MenuItem) it must be able to hold a ref ... hence\r\n *       the React.forwardRef()!\r\n *       see: https://material-ui.com/guides/migration-v3/#button\r\n *            https://material-ui.com/guides/composition/#caveat-with-refs\r\n *            AVOIDS following log:\r\n *            Warning: Function components cannot be given refs. Attempts to access\r\n *                     this ref will fail. Did you mean to use React.forwardRef()?\r\n * NOTE: Subsequent Discovery: I think this is really due to the fact that\r\n *       we were injecting <Divider/> too!\r\n *       This React.forwardRef() was NOT needed in src/features/common/auth/comp/AuthUserMenu.js,\r\n *       where it simply injected a series of <UserMenuItem>s in a React.Fragment ... hmmmm\r\n */\r\nconst ToggleUITheme = React.forwardRef( (props, ref) => {\r\n  const uiTheme = useSelector((appState) => getUITheme(appState), []);\r\n\r\n  const ChipIcon = useMemo(() => uiTheme==='light' ? MoonIcon  : SunIcon,    [uiTheme]);\r\n  const label    = useMemo(() => uiTheme==='light' ? 'to dark' : 'to light', [uiTheme]);\r\n\r\n  const dispatch      = useDispatch();\r\n  const toggleUITheme = useCallback(() => dispatch( _baseUIAct.toggleUITheme() ), []);\r\n\r\n  return (\r\n    <span {...props} ref={ref}>\r\n      <UserMenuItem onClick={toggleUITheme}>\r\n        <Chip label={label}\r\n              icon={<ChipIcon/>}/>\r\n      </UserMenuItem>\r\n      <Divider/>\r\n    </span>\r\n  );\r\n});  \r\nexport default ToggleUITheme;\r\n","import React,\r\n       {useMemo,\r\n        useCallback} from 'react';\r\n\r\nimport {useSelector,\r\n        useDispatch} from 'react-redux'\r\n\r\nimport _baseUIAct           from '../actions';\r\nimport {getResponsiveMode}  from '../state';\r\n\r\nimport Chip          from '@material-ui/core/Chip';\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport CheckedIcon    from '@material-ui/icons/Check';\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\n\r\nimport {confirm}     from 'util/notify';\r\n\r\n\r\n/**\r\n * MaintainResponsiveMode: our user-profile menu items (in the App Header)\r\n * \r\n * NOTE: Because this is a \"custom\" component that is held in Menu\r\n *       (a ButtonBase MenuItem) it must be able to hold a ref ... hence\r\n *       the React.forwardRef()!\r\n *       see: https://material-ui.com/guides/migration-v3/#button\r\n *            https://material-ui.com/guides/composition/#caveat-with-refs\r\n *            AVOIDS following log:\r\n *            Warning: Function components cannot be given refs. Attempts to access\r\n *                     this ref will fail. Did you mean to use React.forwardRef()?\r\n * NOTE: Subsequent Discovery: I think this is really due to the fact that\r\n *       we were injecting <Divider/> too!\r\n *       This React.forwardRef() was NOT needed in src/features/common/auth/comp/AuthUserMenu.js,\r\n *       where it simply injected a series of <UserMenuItem>s in a React.Fragment ... hmmmm\r\n */\r\nconst MaintainResponsiveMode = React.forwardRef( (props, ref) => {\r\n\r\n  const responsiveMode = useSelector((appState) => getResponsiveMode(appState), []);\r\n\r\n  const ChipIcon = useMemo(() => responsiveMode==='off' ? ()=>null : CheckedIcon, [responsiveMode]);\r\n\r\n  const dispatch                = useDispatch();\r\n  const maintainResponsiveMode  = useCallback(() => {\r\n    confirm.success({ \r\n      msg: `The eatery-nod-w app is designed with mobile devices in mind (i.e. cell phones).\r\n\r\nWhen the \"responsive\" mode is enabled, selected screens will dynamically adjust to take advantage of the additional screen real estate.  As an example, a simple list can morph into a detailed table.\r\n\r\nYou can define the \"responsive\" boundary where additional content is manifest (based on the screen width), or disable it altogether.\r\n\r\nSet the \"responsive\" boundary to:\r\n(** is current)`,\r\n      actions: [\r\n        ...defineActions(responsiveMode, dispatch),\r\n        { txt: 'Close' },\r\n      ]\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <span {...props} ref={ref}>\r\n      <UserMenuItem onClick={maintainResponsiveMode}>\r\n        <Chip label=\"responsive\"\r\n              icon={<ChipIcon/>}/>\r\n      </UserMenuItem>\r\n      <Divider/>\r\n    </span>\r\n  );\r\n});  \r\nexport default MaintainResponsiveMode;\r\n\r\n\r\nconst breakpoints = [\r\n//{name: 'Phone',      value: 'xs'},  // xs, extra-small:    0px ... breakpoint ranges are from this point TO the next range (inclusive)\r\n  {name: 'Tablet',     value: 'sm'},  // sm, small:        600px\r\n  {name: 'Desktop',    value: 'md'},  // md, medium:       960px\r\n  {name: 'Landscape',  value: 'lg'},  // lg, large:       1280px\r\n//{name: 'Super-Wide', value: 'xl'},  // xl, extra-large: 1920px\r\n  {name: 'Disable',    value: 'off'},\r\n];\r\n\r\nconst defineActions = (curResponsiveMode, dispatch) => breakpoints.map( (breakpoint) => ({\r\n  txt:    `${ curResponsiveMode===breakpoint.value ? '**' : '' }${breakpoint.name}`,\r\n  action: () => dispatch( _baseUIAct.setResponsiveMode(breakpoint.value) ),\r\n}) );\r\n","import React         from 'react';\r\n\r\nimport {alert}       from 'util/notify';\r\n\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport UserMenuItem  from 'features/common/baseUI/comp/UserMenuItem';\r\n\r\n\r\n/**\r\n * About: display info about this app (gleaned from package.json)\r\n * \r\n * NOTE: Because this is a \"custom\" component that is held in Menu\r\n *       (a ButtonBase MenuItem) it must be able to hold a ref ... hence\r\n *       the React.forwardRef()!\r\n *       see: https://material-ui.com/guides/migration-v3/#button\r\n *            https://material-ui.com/guides/composition/#caveat-with-refs\r\n *            AVOIDS following log:\r\n *            Warning: Function components cannot be given refs. Attempts to access\r\n *                     this ref will fail. Did you mean to use React.forwardRef()?\r\n * NOTE: Subsequent Discovery: I think this is really due to the fact that\r\n *       we were injecting <Divider/> too!\r\n *       This React.forwardRef() was NOT needed in src/features/common/auth/comp/AuthUserMenu.js,\r\n *       where it simply injected a series of <UserMenuItem>s in a React.Fragment ... hmmmm\r\n */\r\nconst About = React.forwardRef( (props, ref) => (\r\n  <span {...props} ref={ref}>\r\n    <Divider/>\r\n    <UserMenuItem onClick={showAbout}>About ...</UserMenuItem>\r\n  </span>\r\n) );\r\nexport default About;\r\n\r\nfunction showAbout() {\r\n  const name    = process.env.REACT_APP_NAME        || 'UNKNOWN name (from package.json: name)';\r\n  const desc    = process.env.REACT_APP_DESCRIPTION || 'UNKNOWN desc (from package.json: description)';\r\n  const ver     = process.env.REACT_APP_VERSION     || 'UNKNOWN (from package.json: version)';\r\n  const docsUrl = process.env.REACT_APP_ABOUT_DOCS;\r\n  const histUrl = process.env.REACT_APP_ABOUT_HIST;\r\n\r\n  const msg = `${name}\\n\\n${desc}\\n\\nversion: ${ver}`;\r\n\r\n  const actions = [];\r\n  if (docsUrl)\r\n    actions.push({ txt: 'Docs',    action: () => window.open(docsUrl, '_blank') });\r\n  if (histUrl)\r\n    actions.push({ txt: 'History', action: () => window.open(histUrl, '_blank') });\r\n  actions.push({ txt: 'Close' });\r\n\r\n  alert.success({msg, actions});\r\n}\r\n","import React                  from 'react';\r\nimport {createFeature,\r\n        fassetValidations}    from 'feature-u';\r\n\r\nimport _baseUI                from './featureName';\r\nimport _baseUIAct             from './actions';\r\nimport reducer                from './state';\r\nimport * as _baseUISel        from './state';\r\nimport logic                  from './logic';\r\n\r\nimport MainLayout             from './comp/MainLayout';\r\nimport ToggleUITheme          from './comp/ToggleUITheme';\r\nimport MaintainResponsiveMode from './comp/MaintainResponsiveMode';\r\nimport About                  from './comp/About';\r\n\r\n// feature: baseUI <<< full details in README\r\n//          Provides a UI foundation for an entire application.\r\n//          It manages the following characteristics:\r\n//          - a Responsive Design that auto adjusts for desktops, cell phones, and\r\n//            portable devices.\r\n//          - a UI Theme allowing the user to choose from light/dark renditions\r\n//          - when an active user is signed-in, the following items are also\r\n//            manifest:\r\n//            - a \"Left Nav\" menu\r\n//            - a \"User Menu\" menu\r\n//            - a \"Current View\" state (orchestrating which application view is active)\r\n//            - a \"Tool Bar\" with various artifacts (ex: title bar and footer)\r\nexport default createFeature({\r\n  name: _baseUI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    define: {\r\n      'actions.changeView': _baseUIAct.changeView, // changeView(viewName)\r\n      'sel.curView':        _baseUISel.curView,    // curView(appState): string\r\n    },\r\n\r\n    defineUse: {\r\n      // inject User Menu entries\r\n      // ... to ToggleUITheme ('light'/'dark')\r\n      'AppMotif.UserMenuItem.aa1_UIThemeToggle': ToggleUITheme,\r\n      // ... to MaintainResponsiveMode ('md'/'lg'/'off')\r\n      'AppMotif.UserMenuItem.aa2_MaintainResponsiveMode': MaintainResponsiveMode,\r\n      // ... to display About info (gleaned from package.json)\r\n      'AppMotif.UserMenuItem.zz8_About': About,\r\n    },\r\n\r\n    use: [\r\n      // full details in README\r\n      ['AppMotif.UserMenuItem.*',   {required: true,  type: fassetValidations.comp}],\r\n      ['AppMotif.LeftNavItem.*',    {required: true,  type: fassetValidations.comp}],\r\n      ['AppMotif.auxViewContent.*', {required: false, type: fassetValidations.any}],\r\n    ],\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n\r\n  // inject our baseUI components into the root of our app\r\n  appWillStart({fassets, curRootAppElm}) {\r\n    return (\r\n      <MainLayout>\r\n        {curRootAppElm}\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n});\r\n","import {generateActions} from 'action-u';\r\nimport _location         from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_location]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    setLocation: { // actions.setLocation(loc): Action\r\n                   // > set current GPS location\r\n                   actionMeta: {\r\n                     traits: ['loc'],\r\n                   },\r\n    },            \r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'location';\r\n","import {reducerHash}        from 'astx-redux-util';\r\nimport {slicedReducer}      from 'feature-redux';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport _location            from './featureName';\r\nimport _locationAct         from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our location.\r\n// ***\r\n\r\n// location: {lat, lng} ... GPS location\r\nconst reducer = slicedReducer(_location, expandWithFassets( (fassets) => reducerHash({\r\n\r\n  // standard location location retention\r\n  [_locationAct.setLocation]: (state, action) => action.loc,\r\n\r\n  // setup guest user\r\n  // ... for \"guest\" user signIn, force location to the \"guest\" loc (matching loc of mock data)\r\n  [fassets.actions.signIn.complete]: (state, action) => action.user.guestLoc || state,\r\n\r\n  // tear down guest user\r\n  // ... for \"guest\" user signOut, reset back to original \"real\" location (for subsequent \"real\" signin)\r\n  [fassets.actions.signOut]: (state, action) => action.user.originalLoc,\r\n\r\n}, null))); // initialState\r\n\r\nexport default reducer;\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n\r\n// NOTE: in this case, our feature state root IS our location (very simple)!\r\n//       ... we use slicedReducer as a single-source-of-truth\r\nexport const getLocation = (appState) => reducer.getSlicedState(appState);\r\n","import featureFlags  from 'featureFlags';\r\n\r\n/**\r\n * Return the current device location asynchronously (via a promise).\r\n * \r\n * NOTE: This service method can be mocked via: featureFlags.mockGPS\r\n *\r\n * @returns {Promise} the current device location {lat, lng}\r\n */\r\nexport const getCurPos = featureFlags.mockGPS ? getCurPos_mock : getCurPos_real;\r\n\r\n\r\n//***\r\n//*** our REAL implementation\r\n//***\r\n\r\nfunction getCurPos_real() {\r\n\r\n  return new Promise( (resolve, reject) => {\r\n\r\n    // insure geolocation is available in this browser\r\n    if ( !('geolocation' in navigator)) {\r\n      // NOTE: reject() passes error into .catch(), throw does NOT\r\n      return reject(new Error('geolocation is NOT available in this browser'));\r\n    }\r\n\r\n    // issue the location request\r\n    navigator.geolocation.getCurrentPosition(\r\n\r\n      // success callback\r\n      (position) => {\r\n        // communicate device location\r\n        // console.log(`xx getCurPos_real() returning: (${position.coords.latitude}, ${position.coords.longitude}) ... full structure: `, position);\r\n        return resolve({lat: position.coords.latitude, \r\n                        lng: position.coords.longitude});\r\n      },\r\n\r\n      // error callback\r\n      (geoErr) => {\r\n\r\n        // NOTE: this geoErr object is NOT a derivation of JS Error\r\n        //       Therefore we throw our own error.\r\n        //       ... allowing downstream processes to do value-added adornment\r\n        //           via: util/ErrorExtensionPolyfill.js\r\n        //           ex:  err.defineAttemptingToMsg('...')\r\n        // console.log('xx getCurPos_real() geoErr: ', geoErr)\r\n        const err = new Error(geoErr.message);  // ex: \"User denied Geolocation\" -or- \"Timeout expired\" ... etc.\r\n\r\n        // hold onto the internals of geoErr (code -and- constants)\r\n        err.code                 = geoErr.code;\r\n        err.PERMISSION_DENIED    = geoErr.PERMISSION_DENIED;    // user denied the request for Geolocation\r\n        err.POSITION_UNAVAILABLE = geoErr.POSITION_UNAVAILABLE; // position information is unavailable\r\n        err.TIMEOUT              = geoErr.TIMEOUT;              // the geo location request timed out\r\n\r\n        // that's all we can do :-)\r\n        return reject(err);\r\n      },\r\n\r\n      // geolocation options\r\n      {\r\n        enableHighAccuracy: true, // obtain the best possible result      ... DEFAULT: false\r\n        //timeout:          5000, // timeout                              ... DEFAULT: wait FOREVER\r\n        //maximumAge:       0,    // acceptable age of cached loc (mills) ... DEFAULT: 0 - do NOT use cached position\r\n      });\r\n  });\r\n}\r\n\r\n\r\n\r\n//***\r\n//*** our MOCK implementation\r\n//***\r\n\r\nfunction getCurPos_mock() {\r\n\r\n  const GlenCarbonIL = {lat: 38.752209, lng: -89.986610};\r\n  const defaultLoc   = GlenCarbonIL;\r\n  const mockLoc      = featureFlags.mockGPS.lat ? featureFlags.mockGPS : defaultLoc;\r\n\r\n  // console.log(`xx getCurPos_mock() request ... mocked to: `, mockLoc);\r\n  return new Promise( (resolve, reject) => {\r\n    // setTimeout(() => { // TEMPORARY: for testing delay just a bit\r\n\r\n    // TEMPORARY: for testing, simulate error condition\r\n    //            ... NOTE: reject() passes error into .catch(), throw does NOT\r\n    // return reject(new Error('Simulated Error in Expo GPS Location acquisition') );\r\n\r\n    // communicate device location\r\n    return resolve(mockLoc);\r\n    // }, 10000); // TEMPORARY: for testing delay just a bit\r\n  });\r\n\r\n}\r\n","import {createFeature}     from 'feature-u';\r\nimport {createBootstrapFn} from 'features/common/bootstrap/bootstrapFn';\r\nimport _location           from './featureName';\r\nimport _locationAct        from './actions';\r\nimport reducer,\r\n       {getLocation}       from './state';\r\nimport {getCurPos}         from 'util/deviceLocation';\r\n\r\n// feature: location\r\n//          initialize the GPS location for use by the app (full details in README)\r\nexport default createFeature({\r\n  name: _location,\r\n\r\n  reducer,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    defineUse: {\r\n      'bootstrap.location': createBootstrapFn('Waiting for GPS Location',\r\n                                              ({dispatch, fassets}) => {\r\n                                                return getCurPos()\r\n                                                  .then( (location) => {\r\n                                                    // set the current location\r\n                                                    dispatch( _locationAct.setLocation(location) );\r\n                                                  })\r\n                                                  .catch( (err) => {\r\n                                                    // set a fallback location ... Glen Carbon IL\r\n                                                    dispatch( _locationAct.setLocation({lat: 38.752209, lng: -89.986610}) );\r\n                                                                \r\n                                                    // alter the error to be an expected condition\r\n                                                    // ... allowing the bootstrap to: complete -and- disclose to user\r\n                                                    //     NOTE: we also expose the real error (via err.message) so as to identify various conditions\r\n                                                    throw err.defineUserMsg(`Unable to get your GPS location (${err.message}) ... falling back to our base location (Glen Carbon)`);\r\n                                                  })\r\n                                              }),\r\n    },\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      //*** public selectors ***\r\n                          // GPS location {lat, lng}\r\n      'sel.getLocation': getLocation,\r\n\r\n    }\r\n  },\r\n\r\n});\r\n","import {createLogic}      from 'redux-logic';\r\nimport _logActions        from './featureName';\r\nimport featureFlags       from 'featureFlags';\r\n\r\nlet lastState = null;\r\n\r\n/**\r\n * Log all dispatched actions.\r\n *\r\n * TODO: retrofit to use real logger:\r\n *       using the following Log levels:\r\n *         - TRACE:   see dispatched actions\r\n *         - VERBOSE: see dispatched actions INCLUDING action content (CAUTION: action content can be BIG)\r\n */\r\nexport const actionLogger = createLogic({\r\n\r\n  name: `${_logActions}.actionLogger`,\r\n  type: '*', // monitor ALL action types\r\n\r\n  transform({getState, action}, next) {\r\n\r\n    if (featureFlags.log === 'verbose') { // group action/state together\r\n      console.group(`Action: ${action.type}`);\r\n    }\r\n\r\n    console.log('Dispatched Action: ', action);\r\n\r\n    // TODO: retrofit to use log-u:\r\n    // // log dispatched action\r\n    // if (log.isVerboseEnabled()) {\r\n    //   log.verbose(()=> `Dispatched Action: ${FMT(action.type)} with content:\\n${FMT(action)}`);\r\n    // }\r\n    // else {\r\n    //   log.trace(()=>   `Dispatched Action: ${FMT(action.type)}`);\r\n    // }\r\n\r\n    // continue processing\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    if (featureFlags.log === 'verbose') { // state can be big ... log conditionally\r\n\r\n      const curState = getState();\r\n      if (curState === lastState) {\r\n        console.log('Current State: UNCHANGED');\r\n      }\r\n      else {\r\n        console.log('Current State: ', curState);\r\n      }\r\n      lastState = curState;\r\n\r\n      console.groupEnd();\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  actionLogger,\r\n];\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'logActions';\r\n","import {createFeature}  from 'feature-u';\r\nimport _logActions      from './featureName';\r\nimport logic            from './logic';\r\nimport featureFlags     from 'featureFlags';\r\n\r\n// feature: logActions\r\n//          log all dispatched actions and resulting state (full details in README)\r\nexport default createFeature({\r\n  name:    _logActions,\r\n  enabled: featureFlags.log ? true : false, // NOTE: feature-u requires boolean, but featureFlags.log can be a string (e.g. 'verbose')\r\n  logic,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createFeature}    from 'feature-u';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// feature: pwa\r\n//          orchestrates the Progressive Web App hooks (as defined by Create React App)\r\nexport default createFeature({\r\n  name:    'pwa',\r\n\r\n  appDidStart() {\r\n    // FROM: CRA (Create React App):\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: http://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n  }\r\n});\r\n","import React         from 'react';\r\n\r\nimport {notify,\r\n        toast,\r\n        alert,\r\n        confirm}     from 'util/notify';\r\n\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport ListItem      from '@material-ui/core/ListItem';\r\nimport ListItemIcon  from '@material-ui/core/ListItemIcon';\r\nimport ListItemText  from '@material-ui/core/ListItemText';\r\nimport MsgIcon       from '@material-ui/icons/LowPriority';\r\n\r\n\r\n/**\r\n * SandboxLeftNavItem: our Sandbox entry into the LeftNav.\r\n */\r\nexport default function SandboxLeftNavItem() {\r\n\r\n  // render our menu item\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* Sandbox \"toast\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox toasts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>toast.success({msg: 'success toast'}) )}\r\n    {doTest(\"info\",    ()=>toast.info   ({msg: 'info toast'}) )}\r\n    {doTest(\"warn\",    ()=>toast.warn   ({msg: 'warn toast'}) )}\r\n    {doTest(\"error\",   ()=>toast.error  ({\r\n       msg: 'error toast',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: error toast CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: error toast CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"alert\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox alerts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>alert.success({msg: 'success alert'}) )}\r\n    {doTest(\"info\",    ()=>alert.info   ({msg: 'info alert'}) )}\r\n    {doTest(\"warn\",    ()=>alert.warn   ({msg: 'warn alert'}) )}\r\n    {doTest(\"error\",   ()=>alert.error  ({\r\n       msg: 'error alert',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => alert.success({msg: 'WowZee: error alert CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => alert.success({msg: 'WooWoo: error alert CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"confirm\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox confirms ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>confirm.success({msg: 'success confirm', actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"info\",    ()=>confirm.info   ({msg: 'info confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"warn\",    ()=>confirm.warn   ({msg: 'warn confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"error\",   ()=>confirm.error  ({msg: 'error confirm'  , actions:[{txt:'Okey Dokey'}] }) )}\r\n\r\n\r\n\r\n    {/* Sandbox \"notify\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox raw notifies ... \"/>\r\n    </ListItem>\r\n    {doTest(\"notify\",   ()=> notify({\r\n       msg: 'my notify\\nNow is the time for every good man to come to the aid of his country ... I really hope this works for a really long line\\nnext next line',\r\n       position: 'top-center',\r\n       duration: null, // do this to keep it up (requiring user acknowledgment)\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: notify CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: notify CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst doTest = (label, cb) => (\r\n  <ListItem button\r\n            onClick={cb}>\r\n    <ListItemIcon><MsgIcon/></ListItemIcon>\r\n    <ListItemText primary={label}/>\r\n  </ListItem>\r\n);\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from 'featureFlags'\r\nimport SandboxLeftNavItem  from './comp/SandboxLeftNavItem';\r\n\r\n// feature: sandbox\r\n//          promote interactive tests (full details in README)\r\nexport default createFeature({\r\n  name:    'sandbox',\r\n\r\n  enabled: featureFlags.sandbox,\r\n\r\n  fassets: {\r\n    defineUse: {\r\n      'AppMotif.LeftNavItem.zz5_sandbox': SandboxLeftNavItem, // inject our entries into the LeftNav\r\n    },\r\n  },\r\n});\r\n","import auth                          from './common/auth/feature';\r\nimport authService                   from './common/auth/subFeatures/authService/feature';\r\nimport authServiceFirebase           from './common/auth/subFeatures/authServiceFirebase/feature';\r\nimport authServiceMock               from './common/auth/subFeatures/authServiceMock/feature';\r\nimport bootstrap                     from './common/bootstrap/feature';\r\nimport discovery                     from './discovery/feature';\r\nimport discoveryService              from './discovery/subFeatures/discoveryService/feature';\r\nimport discoveryServiceGooglePlaces  from './discovery/subFeatures/discoveryServiceGooglePlaces/feature';\r\nimport discoveryServiceMock          from './discovery/subFeatures/discoveryServiceMock/feature';\r\nimport eateries                      from './eateries/feature';\r\nimport eateryService                 from './eateries/subFeatures/eateryService/feature';\r\nimport eateryServiceFirebase         from './eateries/subFeatures/eateryServiceFirebase/feature';\r\nimport eateryServiceMock             from './eateries/subFeatures/eateryServiceMock/feature';\r\nimport initFirebase                  from './common/initFirebase/feature';\r\nimport initGooglePlaces              from './common/initGooglePlaces/feature';\r\nimport baseUI                        from './common/baseUI/feature';\r\nimport location                      from './common/location/feature';\r\nimport logActions                    from './common/diagnostic/logActions/feature';\r\nimport pwa                           from './common/pwa/feature';\r\nimport sandbox                       from './common/diagnostic/sandbox/feature';\r\n\r\n// accumulate/promote ALL features that make up our app\r\nexport default [\r\n\r\n\r\n  //***\r\n  //*** app-specific features\r\n  //***\r\n\r\n  eateries,\r\n  eateryService,\r\n  eateryServiceFirebase,\r\n  eateryServiceMock,\r\n\r\n  discovery,\r\n  discoveryService,\r\n  discoveryServiceGooglePlaces,\r\n  discoveryServiceMock,\r\n\r\n\r\n  //***\r\n  //*** common app-neutral features\r\n  //***\r\n\r\n  baseUI,\r\n  \r\n  auth,\r\n  authService,\r\n  authServiceFirebase,\r\n  authServiceMock,\r\n  \r\n  bootstrap,\r\n  \r\n  initFirebase,\r\n  initGooglePlaces,\r\n  \r\n  location,\r\n  \r\n  pwa,\r\n\r\n  // diagnostic features ...\r\n  logActions,\r\n  sandbox,\r\n];\r\n","import noOp from 'util/noOp';\r\n\r\n/**\r\n * A set of diagnostic conditional functions:\r\n *   - that logs a description of the activity\r\n *   - and enables/disables logic (an alternative to commenting out code)\r\n *\r\n * @param {string} desc - a description used to log activity (WHEN\r\n * enabled).\r\n *\r\n * @param {function} doThis - the logic to execute (WHEN enabled).\r\n * \r\n * @private\r\n */\r\n\r\n// ... do$/skip$ ... nice in that you can find ALL directives pretty fast (both enabled/disabled)\r\n\r\nexport function do$(desc, doThis=noOp) {\r\n  console.log(`***DIAGNOSTIC*** ${desc}`);\r\n  return doThis();\r\n}\r\n\r\nexport function skip$(desc, doThis) {\r\n  // no-op\r\n  return null;\r\n}\r\n\r\n//***\r\n//*** various aliases\r\n//***\r\n\r\n// ... diag$ / diag$.skip ... nice in that the semantics are better for LOG only\r\nexport const diag$ = do$;\r\ndiag$.skip = skip$;\r\n\r\n// ... YES$ / NO$ ... hmmm\r\nexport const YES$ = do$;\r\nexport const NO$  = skip$;\r\n","import React                   from 'react';\r\nimport {launchApp}             from 'feature-u';\r\nimport features                from 'features';\r\nimport {applyMiddleware,\r\n        compose,\r\n        createStore}           from 'redux';\r\nimport {createLogicMiddleware} from 'redux-logic';\r\nimport {featureRoute, \r\n        PRIORITY}              from 'feature-router';\r\nimport SplashScreen            from 'util/SplashScreen';\r\nimport {diag$}                 from 'util/diagnosticUtil';\r\n\r\n\r\n// ***\r\n// *** feature-u Ingegration Tests ---------------------------------------------\r\n// ***\r\n\r\nexport default function configureFeatureUIntegrationTests(reducerAspect, logicAspect, routeAspect) {\r\n\r\n  // NOTE: run following tests mutually exclusive\r\n\r\n  // --- feature-redux -----------------------------------------------------------\r\n\r\n  diag$.skip('feature-redux plugin: test PUBLIC allowNoReducers$', () => {\r\n    test_allowNoReducers$();\r\n  });\r\n\r\n  diag$.skip('feature-redux plugin: test HIDDEN createReduxStore$', () => {\r\n    // override reducerAspect's creation of redux store (showing default implementation -WITH- our log)\r\n    reducerAspect.config.createReduxStore$ = function (appReducer, middlewareArr) {\r\n      console.log('OVERRIDING createReduxStore$ ... LOOK FOR THIS LOG');\r\n      return  middlewareArr.length === 0\r\n               ? createStore(appReducer)\r\n               : createStore(appReducer,\r\n                             compose(applyMiddleware(...middlewareArr)));\r\n    };\r\n  });\r\n\r\n  // --- feature-redux-logic -----------------------------------------------------\r\n\r\n  diag$.skip('feature-redux-logic plugin: test PUBLIC allowNoLogic$', () => {\r\n    test_allowNoLogic$();\r\n  });\r\n  \r\n  diag$.skip('feature-redux-logic plugin: test HIDDEN createLogicMiddleware$', () => {\r\n    // override logicAspect's creation of redux-logic middleware (showing default implementation)\r\n    logicAspect.config.createLogicMiddleware$ = function(app, appLogic) {\r\n      console.log('OVERRIDING createLogicMiddleware$ ... LOOK FOR THIS LOG');\r\n      return createLogicMiddleware(appLogic,\r\n                                   { // inject our app as a redux-logic dependancy\r\n                                     app,\r\n                                   });\r\n    };\r\n  });\r\n\r\n  // --- feature-router ----------------------------------------------------------\r\n\r\n  // NOTE: PUBLIC routeAspect.config.fallbackElm$: reactElm ... fallback when NO routes are in effect (REQUIRED CONFIGURATION)\r\n  //       is tested by eatery-nod directly\r\n\r\n  // NOTE: PUBLIC routeAspect.config.componentWillUpdateHook$: void ... invoked during react componentWillUpdate() life-cycle (OPTIONAL)\r\n  //       is tested by eatery-nod directly\r\n\r\n  diag$.skip('feature-router plugin: test PUBLIC allowNoRoutes$', () => {\r\n    test_allowNoRoutes$();\r\n  });\r\n\r\n  // --- rename Aspect.name ----------------------------------------------------------\r\n\r\n  diag$.skip('TEST ability to rename Aspect.name (on various plugin projects)', () => {\r\n    test_renameAspectName();\r\n  });\r\n\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoReducers$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoReducers$() {\r\n\r\n    diag$('test_allowNoReducers$() test PUBLIC allowNoReducers$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllReducers() {\r\n      features.forEach( (feature) => {\r\n        if (feature.reducer)\r\n          delete feature.reducer;\r\n      });\r\n    };\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoReducers$() 1st: insure allowNoReducers$ is NOT referenced when our features HAVE reducers ... should run normally', () => {\r\n      reducerAspect.config.allowNoReducers$ = (s) => \"MY REDUCER\";\r\n    });\r\n    // expecting app to run normally!\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO reducers ... expecting: thrown exception', () => {\r\n      removeAllReducers();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-redux found NO reducers within your features\r\n    //               ... did you forget to register Feature.reducer aspects in your features?\r\n    //               (please refer to the feature-redux docs to see how to override this behavior).\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 3rd: test allowNoReducers$ = true ... when our features HAVE NO reducers ... expecting: forced log', () => {\r\n      removeAllReducers();\r\n      reducerAspect.config.allowNoReducers$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux*** reducerAspect: \r\n    //                     WARNING: NO reducers were found in your features (i.e. Feature.reducer),\r\n    //                              but client override (reducerAspect.config.allowNoReducers$=truthy;)\r\n    //                              directed a continuation WITH the identity reducer.\r\n\r\n\r\n    diag$.skip('test_allowNoReducers$() 4th: test allowNoReducers$ = reducerFn ... when our features HAVE NO reducers ... expecting: forced log', () => {\r\n      removeAllReducers();\r\n      reducerAspect.config.allowNoReducers$ = (s) => 'MY REDUCER';\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux*** reducerAspect: \r\n    //                     WARNING: NO reducers were found in your features (i.e. Feature.reducer),\r\n    //                              but client override (reducerAspect.config.allowNoReducers$=reducerFn;)\r\n    //                              directed a continuation WITH the specified reducer.\r\n\r\n  } // end of ... test_allowNoReducers$\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoLogic$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoLogic$() {\r\n\r\n    diag$('test_allowNoLogic$() test PUBLIC allowNoLogic$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllLogic() {\r\n      features.forEach( (feature) => {\r\n        if (feature.logic)\r\n          delete feature.logic;\r\n      });\r\n    };\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoLogic$() 1st: insure allowNoLogic$ is NOT referenced when our features HAVE logic ... should run normally', () => {\r\n      logicAspect.config.allowNoLogic$ = ['simulatedLogicNotSoWell'];\r\n    });\r\n    // expecting app to run normally!\r\n\r\n\r\n    diag$.skip('test_allowNoLogic$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO logic ... expecting: thrown exception', () => {\r\n      removeAllLogic();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-redux-logic found NO logic modules within your features\r\n    //               ... did you forget to register Feature.logic aspects in your features?\r\n    //               (please refer to the feature-redux-logic docs to see how to override this behavior).\r\n\r\n    diag$.skip('test_allowNoLogic$() 3rd: test allowNoLogic$ = true ... when our features HAVE NO logic ... expecting: forced log', () => {\r\n      removeAllLogic();\r\n      logicAspect.config.allowNoLogic$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux-logic*** logicAspect: \r\n    //                     WARNING: NO logic modules were found in your Features (i.e. Feature.logic),\r\n    //                              but client override (logicAspect.config.allowNoLogic$=truthy;)\r\n    //                              directed a continuation WITHOUT redux-logic.\r\n\r\n    diag$.skip('test_allowNoLogic$() 4th: test allowNoLogic$ = [myLogic] ... when our features HAVE NO logic ... expecting: forced log', () => {\r\n      removeAllLogic();\r\n      logicAspect.config.allowNoLogic$ = ['simulatedLogicNotSoWell'];\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-redux-logic*** logicAspect:\r\n    //                     WARNING: NO logic modules were found in your Features (i.e. Feature.logic),\r\n    //                              but client override (logicAspect.config.allowNoLogic$=[{logicModules}];)\r\n    //                              directed a continuation WITH specified logic modules.\r\n\r\n  } // end of ... test_allowNoLogic$\r\n\r\n\r\n  // ***\r\n  // *** test_allowNoRoutes$() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_allowNoRoutes$() {\r\n\r\n    diag$('test_allowNoRoutes$() test PUBLIC allowNoRoutes$ ... disable feature-u logging, so as to see forced logs', () => {\r\n      launchApp.diag.logf.disable();\r\n    });\r\n\r\n    function removeAllRoutes() {\r\n      features.forEach( (feature) => {\r\n        if (feature.route)\r\n          delete feature.route;\r\n      });\r\n    };\r\n\r\n    const fallbackRoute = featureRoute({\r\n      priority: PRIORITY.HIGH,\r\n      content({app, appState}) {\r\n        return <SplashScreen msg=\"KOOL: This is a route supplied by routeAspect.config.allowNoRoutes$ !!!\"/>;\r\n      },\r\n    });\r\n\r\n\r\n    // NOTE: run following sub-tests mutually exclusive\r\n\r\n    diag$.skip('test_allowNoRoutes$() 1st: insure allowNoRoutes$ is NOT referenced when our features HAVE routes ... should run normally', () => {\r\n      routeAspect.config.allowNoRoutes$ = [fallbackRoute];\r\n    });\r\n    // expecting app to run normally!\r\n\r\n    diag$.skip('test_allowNoRoutes$() 2nd: test DEFAULT EXCEPTION ... when our features HAVE NO routes ... expecting: thrown exception', () => {\r\n      removeAllRoutes();\r\n    });\r\n    // expecting Exception:\r\n    //   ***ERROR*** feature-router found NO routes within your features\r\n    //               ... did you forget to register Feature.route aspects in your features?\r\n    //               (please refer to the feature-router docs to see how to override this behavior).\r\n\r\n    diag$.skip('test_allowNoRoutes$() 3rd: test allowNoRoutes$ = true ... when our features HAVE NO routes ... expecting: forced log', () => {\r\n      removeAllRoutes();\r\n      routeAspect.config.allowNoRoutes$ = true;\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-router*** routeAspect: \r\n    //                     WARNING: NO routes were found in your Features (i.e. Feature.route),\r\n    //                              but client override (routeAspect.config.allowNoRoutes$=truthy;)\r\n    //                              directed a continuation WITHOUT feature-router.\r\n\r\n    diag$.skip('test_allowNoRoutes$() 4th: test allowNoRoutes$ = [routes] ... when our features HAVE NO routes ... expecting: forced log', () => {\r\n      removeAllRoutes();\r\n      routeAspect.config.allowNoRoutes$ = [fallbackRoute];\r\n    });\r\n    // expecting Forced Log:\r\n    //   ***feature-u*** - ***feature-router*** routeAspect: \r\n    //                     WARNING: NO routes were found in your Features (i.e. Feature.route),\r\n    //                              but client override (routeAspect.config.allowNoRoutes$=[{routes}];)\r\n    //                              directed a continuation WITH specified routes.\r\n\r\n  } // end of ... test_allowNoRoutes$\r\n\r\n\r\n  // ***\r\n  // *** test_renameAspectName() -------------------------------------------------\r\n  // ***\r\n\r\n  function test_renameAspectName() {\r\n\r\n    diag$('test_renameAspectName() TEST ability to rename Aspect.name ... enable feature-u logging, so as to see the fun', () => {\r\n      launchApp.diag.logf.enable();\r\n    });\r\n\r\n    // NOTE: you may run following sub-tests together if you like\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:reducer TO: Aspect.name:reducerX', () => {\r\n\r\n      // rename Aspect.name:reducer\r\n      reducerAspect.name = 'reducerX';         \r\n\r\n      // rename all feature usage of Feature.reducer TO Feature.reducerX\r\n      features.forEach( (feature) => {\r\n        if (feature.reducer) {\r\n          feature.reducerX = feature.reducer;\r\n          delete feature.reducer;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .reducer   ... 11\r\n      //     .reducerX  ... 11\r\n      // >>> :reducer   ... 22\r\n      //     :reducerX  ... 22\r\n    });\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:logic TO: Aspect.name:logicX', () => {\r\n\r\n      // rename Aspect.name:logic\r\n      logicAspect.name = 'logicX';         \r\n\r\n      // rename all feature usage of Feature.logic TO Feature.logicX\r\n      features.forEach( (feature) => {\r\n        if (feature.logic) {\r\n          feature.logicX = feature.logic;\r\n          delete feature.logic;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .logic   ...  8\r\n      //     .logicX  ...  8\r\n      // >>> :logic   ... 15\r\n      //     :logicX  ... 15\r\n    });\r\n\r\n    diag$('test_renameAspectName() RENAME Aspect.name:route TO: Aspect.name:routeX', () => {\r\n\r\n      // rename Aspect.name:route\r\n      routeAspect.name = 'routeX';         \r\n\r\n      // rename all feature usage of Feature.route TO Feature.routeX\r\n      features.forEach( (feature) => {\r\n        if (feature.route) {\r\n          feature.routeX = feature.route;\r\n          delete feature.route;\r\n        }\r\n      });\r\n      // WORKED!!!\r\n      // ... analyzing logs occurances (old name NEVER appears):\r\n      // >>> .route   ...  4\r\n      //     .routeX  ...  4\r\n      // >>> :route   ... 17\r\n      //     :routeX  ... 17\r\n    });\r\n\r\n  } // end of ... test_renameAspectName\r\n\r\n} // end of ... configureFeatureUIntegrationTests\r\n\r\n\r\n","import 'util/ErrorExtensionPolyfill';\r\nimport React                 from 'react';\r\nimport ReactDOM              from 'react-dom';\r\nimport {launchApp}           from 'feature-u';\r\nimport {createReducerAspect} from 'feature-redux';\r\nimport {createLogicAspect}   from 'feature-redux-logic';\r\nimport {createRouteAspect}   from 'feature-router';\r\nimport features              from 'features';\r\nimport SplashScreen          from 'util/SplashScreen';\r\nimport configureEateryNodDiagnostics  from 'util/configureEateryNodDiagnostics';\r\n\r\n// launch our application, exposing the feature-u Fassets object (facilitating cross-feature-communication)!\r\nexport default launchApp({\r\n  aspects: appAspects(),\r\n  features,\r\n  registerRootAppElm(rootAppElm) {\r\n    ReactDOM.render(rootAppElm,\r\n                    document.getElementById('root'));\r\n  }\r\n});\r\n\r\n\r\n// accumulate/configure the Aspect plugins matching our app's run-time stack\r\nfunction appAspects() {\r\n\r\n  // define our framework run-time stack\r\n  const reducerAspect = createReducerAspect();\r\n  const logicAspect   = createLogicAspect();\r\n  const routeAspect   = createRouteAspect();\r\n  const aspects = [\r\n    reducerAspect, // redux          ... extending: Feature.reducer\r\n    logicAspect,   // redux-logic    ... extending: Feature.logic\r\n    routeAspect,   // Feature Routes ... extending: Feature.route\r\n  ];\r\n\r\n  // configure Aspects (as needed)\r\n  // ... StateRouter fallback screen (when no routes are in effect)\r\n  routeAspect.config.fallbackElm$ = <SplashScreen msg=\"I'm trying to think but it hurts!\"/>;\r\n\r\n  // configure our app's overall diagnostics (non-production code)\r\n  configureEateryNodDiagnostics(reducerAspect, logicAspect, routeAspect);\r\n\r\n  // beam me up Scotty :-)\r\n  return aspects;\r\n}\r\n","import ReactDOMServer from 'react-dom/server';\r\nimport {launchApp}    from 'feature-u';\r\nimport {diag$}        from 'util/diagnosticUtil';\r\nimport logActions     from 'features/common/diagnostic/logActions/feature'; // enable eatery-nod \"logActions\" feature\r\nimport sandbox        from 'features/common/diagnostic/sandbox/feature';    // enable eatery-nod \"sandbox\" feature (in left-nav)\r\nimport configureFeatureUIntegrationTests  from 'util/configureFeatureUIntegrationTests';\r\n\r\n\r\n/**\r\n * Configure eatery-nod diagnostics (non-production code).\r\n */\r\nexport default function configureEateryNodDiagnostics(reducerAspect, logicAspect, routeAspect) {\r\n\r\n  // --- eatery-nod sandbox ... ------------------------------------------\r\n  diag$.skip('enable eatery-nod \"sandbox\" feature (in left-nav)', () => {\r\n    sandbox.enabled = true;\r\n  });\r\n\r\n  // --- eatery-nod logging ... ------------------------------------------\r\n  diag$.skip('enable eatery-nod \"logActions\" feature', () => {\r\n    logActions.enabled = true;\r\n  });\r\n\r\n  // --- feature-u logging probes of eatery-nod app ... ------------------\r\n  diag$.skip('enable feature-u logging', () => {\r\n    launchApp.diag.logf.enable();\r\n  });\r\n  diag$.skip('show feature-u react elms as object blobs', () => {\r\n    launchApp.diag.logf.elm2html = (elm) => elm;\r\n  });\r\n  diag$.skip('show feature-u react elms as html markup', () => {\r\n    // NOTE: UNTESTED: react-native / expo had issues resolving this in node\r\n    launchApp.diag.logf.elm2html = (elm) => ReactDOMServer.renderToStaticMarkup(elm);\r\n  });\r\n\r\n  // --- feature-u integration tests ... ---------------------------------\r\n  diag$.skip('perform feature-u integration tests', () => {\r\n    configureFeatureUIntegrationTests(reducerAspect, logicAspect, routeAspect);\r\n  });\r\n}\r\n","export {default} from 'app'; // redirect to app.js\r\n"],"sourceRoot":""}