{"version":3,"sources":["util/ErrorExtensionPolyfill.js","util/verify.js","util/withState.js","features/util/device/actions.js","features/util/device/featureName.js","features/util/layout/comp/UserMenu.js","features/util/layout/comp/UserMenuItem.js","features/util/device/comp/ToggleUITheme.js","featureFlags.js","util/noOp.js","util/notify.js","util/discloseError.js","features/util/device/deviceService/DeviceService.js","features/util/device/state.js","features/util/device/logic.js","features/util/device/feature.js","features/util/bootstrap/bootstrapFn.js","features/util/device/deviceService/feature.js","util/iForms/IFormMeta.js","features/auth/authService/User.js","features/auth/state.js","features/auth/featureName.js","features/auth/signInFormMeta.js","features/auth/actions.js","features/auth/logic.js","util/Transition.js","features/auth/comp/SignInVerifyScreen.js","util/iForms/comp/ITextField.js","features/auth/comp/SignInScreen.js","util/SplashScreen.js","features/auth/route.js","features/auth/comp/AuthUserMenu.js","features/auth/feature.js","features/auth/authService/AuthServiceAPI.js","features/auth/authService/feature.js","features/auth/authService/authServiceFirebase/AuthServiceFirebase.js","features/auth/authService/authServiceFirebase/feature.js","features/auth/authService/authServiceMock/AuthServiceMock.js","features/auth/authService/authServiceMock/feature.js","features/eateries/state.js","features/eateries/featureName.js","features/eateries/eateryFilterFormMeta.js","features/eateries/actions.js","features/eateries/logic.js","features/eateries/comp/EateryDetailScreen.js","features/eateries/comp/EateriesListScreen.js","util/iForms/comp/IRadioField.js","features/eateries/comp/EateryFilterScreen.js","features/eateries/route.js","features/eateries/comp/EateryLeftNavItem.js","features/eateries/comp/EateriesTitle.js","features/eateries/comp/EateriesFooter.js","features/eateries/feature.js","features/eateries/eateryService/EateryServiceAPI.js","features/eateries/eateryService/feature.js","features/eateries/eateryService/eateryServiceFirebase/EateryServiceFirebase.js","features/eateries/eateryService/eateryServiceFirebase/feature.js","features/eateries/eateryService/eateryServiceMock/EateryServiceMock.js","features/eateries/eateryService/eateryServiceMock/feature.js","features/util/bootstrap/actions.js","features/util/bootstrap/featureName.js","features/util/bootstrap/logic.js","features/util/bootstrap/state.js","features/util/bootstrap/route.js","features/util/bootstrap/feature.js","features/util/layout/actions.js","features/util/layout/featureName.js","features/util/layout/state.js","features/util/layout/comp/LeftNav.js","features/util/layout/comp/AppLayout.js","features/util/layout/comp/MainLayout.js","features/util/layout/feature.js","features/util/pwa/serviceWorker.js","features/util/pwa/feature.js","features/util/diagnostic/logActions/logic.js","features/util/diagnostic/logActions/featureName.js","features/util/diagnostic/logActions/feature.js","features/util/diagnostic/sandbox/comp/SandboxLeftNavItem.js","features/index.js","features/util/diagnostic/sandbox/feature.js","app.js","index.js"],"names":["Error","prototype","defineUserMsg","userMsg","this","expected","isExpected","isUnexpected","defineAttemptingToMsg","attemptingToMsg","concat","formatUserMsg","prior_toString","toString","call","verify","condition","msg","prefix","msgPrefix","withState","_ref","arguments","length","undefined","mapStateToProps","mapDispatchToProps","mergeProps","options","component","unknownArgs","Object","objectWithoutProperties","check","unknownArgKeys","keys","withStateHoF","connect","generateActions","root","defineProperty","toggleUITheme","actionMeta","setLoc","traits","withFassets","userMenuItems","_React$useState","React","useState","_React$useState2","slicedToArray","anchorUserMenu","setAnchorUserMenu","userMenuOpen","Boolean","_closeUserMenu","react_default","a","createElement","IconButton_default","color","onClick","event","currentTarget","AccountCircle_default","Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","closeUserMenu","map","_ref2","_ref3","fassetsKey","UserMenuItem","key","mapFassetsToProps","props","MenuItem_default","assign","apply","children","ToggleUIThemeWithState","uiTheme","ChipIcon","MoonIcon","SunIcon","label","UserMenuItem_UserMenuItem","Chip_default","icon","appState","fassets","sel","getUITheme","dispatch","_deviceAct","featureFlags","useWIFI","mockGPS","lat","lng","log","sandbox","noOp","withStyles","theme","variantSuccess","whiteSpace","variantInfo","variantWarning","variantError","build","maxSnack","dense","className","classes","NotifyAPI_withSnackBar","_singleton","NotifyAPI","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","assertThisInitialized","_this2","_ref$duration","duration","_ref$level","level","_ref$position","position","_ref$modal","modal","_ref$actions","actions","isString","levelVariant","isArray","forEach","action","indx","txt","isFunction","autoHideDuration","actionsCbMap","reduce","identityFn","actionButtons","Button_default","size","snackbarKey","enqueueSnackbar","variant","onClickAction","e","closeSnackbar","clientAction","target","textContent","setTimeout","Fragment","Component","success","info","warn","error","top-left","top-center","top-right","bottom-left","bottom-center","bottom-right","p","withSnackbar","notify","directive","display","toastBase","_ref2$duration","funcQual","toast","alertBase","alert","confirmBase","_ref4","confirm","displayName","DYNAMIC_DEFAULT","discloseError","err","_ref$showUser","showUser","_ref$logIt","logIt","console","deviceService_DeviceService","DeviceService","deviceService","defaultLoc","mockLoc","getCurPos","Promise","resolve","reject","mock_getCurPos_asNeeded","deviceStorage","getItem","setItem","decodeCredentials","email","pass","encodeCredentials","removeItem","encoding","window","btoa","encodedCredentials","clearStr","atob","_clearStr$split","split","_clearStr$split2","_localStorageAvailable","type","storage","x","DOMException","code","name","storageAvailable","keyName","keyValue","localStorage","reducer","slicedReducer","combineReducers","reducerHash","state","fetchUITheme","loc","gfs","getSlicedState","persistUITheme","expandWithFassets","createLogic","String","process","done","getState","storeUITheme","createFeature","logic","defineUse","AppLayout.UserMenuItem.UIThemeToggle","ToggleUITheme","bootstrap.location","what","fn","bootstrapWhat","createBootstrapFn","then","location","catch","define","sel.getUITheme","sel.getDeviceLoc","IFormMeta","formDesc","formSchema","formActionsAccessor","formStateSelector","mapDomain2Form","mapForm2Domain","validate","fieldNames","fields","labels","fieldName","describe","FORM","domain","values","castValues","validationOptions","abortEarly","asyncValidate","yupErrs","msgs","inner","yupErr","path","message","registrar","formActionGenesis","appInjectedFormActions","myFormActions","ratify","fieldChanged","fieldTouched","close","formLogic","formActions","allow","formState","api","inProcess","objectSpread","value","cast","formReducer","_reducerHash","normalizedFieldNames","sort","normalizedValueProps","isEqual","formMsg","validating","newState","IForm","isValidationExposed","getLabel","getValue","isValid","getMsg","getExposedMsg","handleFieldChanged","handleFieldTouched","handleProcess","preventDefault","handleClose","User","_ref$name","_ref$email","_ref$emailVerified","emailVerified","_ref$pool","pool","toStruct","user","_authAct","signIn","complete","checkEmailVerified","userProfileChanged","signOut","signInForm","signInFormMeta","curUser","createSelector","curUserStruct","Yup","shape","required","min","max","_authSel","autoSignIn","haveDeviceCredentials","noDeviceCredentials","resendEmailVerification","startAuthorization","bootstrapComplete","checkDeviceCredentials","credentials","fetchCredentials","_action$credentials","manualSignIn","processSignIn","_ref5","warnTimeout","_ref6","authService","storeCredentials","supplementSignInComplete","_ref7","signInCleanup","_ref8","transform","_ref9","next","refreshUser","_ref10","_ref11","removeCredentials","toConsumableArray","TransitionSlide","Slide_default","direction","timeout","TransitionZoom","Zoom_default","CenterItems","Grid_default","container","justify","alignItems","SignInVerifyScreenWithState","fullScreen","Dialog_default","TransitionComponent","DialogTitle_default","disableTypography","titleBar","Typography_default","title","noWrap","DialogContent_default","Avatar_default","lockAvatar","LockOpen_default","DialogContentText_default","entry","Check_default","Mail_default","ExitToApp_default","SignInVerifyScreenWithStyles","padding","palette","common","white","backgroundColor","primary","main","flexGrow","margin","spacing","unit","marginRight","inProgress","withMobileDialog","breakpoint","ITextField","iForm","extraProps","fieldLabel","prop","managedProps","fieldMsg","helperText","TextField_default","disabled","onChange","onBlur","SignInScreenWithState","formLabel","formInProcess","formErrMsg","onSubmit","invisible","SignInScreen_CenterItems","autoFocus","fullWidth","placeholder","FormHelperText_default","LinearProgress_default","stateProps","dispatchProps","ownProps","SignInScreenWithStyles","border","SplashScreen","favicon","src","alt","progress","defaultProps","SplashScreen_withStyles","width","featureRoute","priority","PRIORITY","HIGH","content","isUserSignedIn","isUserSignedInUnverified","comp_SignInVerifyScreen","comp_SignInScreen","getAuthStatus","util_SplashScreen","doL8tr","actions.userProfileChanged","actions.signOut","sel.curUser","AppLayout.UserMenuItem.AuthUserMenu","AuthUserMenu","route","AuthServiceAPI","constructor","use","fassetsValue","AuthServiceFirebase","currentAppUser","firebase","auth","signInWithEmailAndPassword","fbUser","database","ref","uid","once","snapshot","userProfile","val","_this3","currentUser","reload","sendEmailVerification","_this4","enabled","appWillStart","curRootAppElm","initFireBase","AuthServiceMock","clone","_reducerHash3","_reducerHash4","dbPool","_eateriesAct","changed","eateries","listView","filterForm","eateryFilterFormMeta","filter","distance","sortOrder","selectedEateryId","viewDetail","eateryId","spin","spinMsg","getDbPool","getListViewFilter","getFilteredEateries","e1","e2","localeCompare","getSelectedEatery","getSpinMsg","distanceMsg","sortOrderMsg","typeError","nullable","positive","matches","_eateriesSel","add","eateryDetail","fail","remove","curPoolMonitor","wrapUp","monitorDbPool","eateryService","monitorDbEateryPool","getDeviceLoc","defaultFilter","processFilter","changeView","filteredEateries","Math","ceil","floor","randomEateryId","random","id","spinComplete","addToPoolPrep","discoveryService","fetchEateryDetail","eatery","addToPool","addEatery","removeFromPool","removeEatery","EateryDetailScreenWithState","handleSpin","inline","Close_default","List_default","ListItem_default","ListItemText_default","ListItemIcon_default","Navigation_default","Link_default","href","navUrl","underline","addr","Phone_default","phone","icons_Link_default","website","DialogActions_default","bottomBar","SwapCalls_default","EateryDetailScreenWithFassets","EateryDetailScreenWithStyles","EateriesListScreenWithState","selectedEatery","showDetail","currentDistance","list","subTxt","push","button","divider","Restaurant_default","secondary","listContent","comp_EateryDetailScreen","EateriesListScreenWithStyles","IRadioField","row","rowProp","msgDom","FormControl_default","FormLabel_default","RadioGroup_default","Op","FormControlLabel_default","control","Radio_default","checked","propTypes","PropTypes","string","isRequired","any","EateryFilterScreenWithState","sortOrderRadioProps","EateryFilterScreen_CenterItems","FilterList_default","EateryFilterScreenWithStyles","eateries_route","comp_EateryFilterScreen","getView","comp_EateriesListScreen","EateryLeftNavItemWithState","handleFilter","major","RestaurantMenu_default","primaryTypographyProps","ListItemSecondaryAction_default","minor","Tune_default","Divider_default","EateryLeftNavItemWithFassets","EateriesTitleWithState","actions.addEatery","actions.removeEatery","sel.getEateryDbPool","_defineUse","EateryLeftNavItem","TitleComp","EateriesTitle","FooterComp","EateriesFooter","appDidStart","EateryServiceAPI","baseLoc","monitorCB","EateryServiceFirebase","dbRef","off","on","geodist","set","EateryServiceMock","initialEateryPoolIds","hash","eateriesMockDB","ChIJ-6rxFimpIIYRCrq8YVb3Ujs","ChIJ01VeXQymIIYRI6lnasCzx3M","ChIJ28cfCwymIIYRmTnBVitvmZ0","ChIJ2_bmEw6vIIYRS7ztDnnLpNg","ChIJ2ybOvA2mIIYRMRjz-wyjyu4","ChIJ6U-QewymIIYRzP5x_fdjwEw","ChIJ6b-WfSOmIIYRHRWCCIzhh08","ChIJ6yNtftWuIIYRJrESGu4C5fM","ChIJ6yVNhImlIIYR8tQxm8GDdi0","ChIJ6zsQedWuIIYRYmlx6sWCkUw","ChIJ76kBGjFcJ4YRwmBQteVXEyk","ChIJ7SpQ6RGmIIYRsuU_zP71sBI","ChIJ8VL0ug2mIIYRDrOWNVA6nhY","ChIJ8W3hFQymIIYRQObKMMNMyRo","ChIJ8dWgxgymIIYRyt8bRdLUXXU","ChIJ9Uw1l75cJ4YRXJ2HT-BttUU","ChIJDVhB0w2mIIYRZVLScBsQtTo","ChIJDxnIrtelIIYR8sJkRU4JuTM","ChIJDyC9Ig6mIIYRDWmrSR08N54","ChIJETttTjKkIIYRfnaTcqDqbnw","ChIJFYDeXQymIIYRh1Cion6Ta9I","ChIJG_d8TP5eJ4YR6wK6RwXBFkc","ChIJO8UE__pZJ4YROei1_1_xklM","ChIJRQDMLA2mIIYR-ZQnRWmSdnU","ChIJT4MvDBKmIIYRFjCBCX693Yc","ChIJTz6VoQumIIYRAXvVrezBp-U","ChIJW3d2Wc2lIIYRu-qs_NaSOkg","ChIJWegGCA6mIIYRYAiMKN4T4CM","ChIJX0qVUw2mIIYRNZcBBOu8Xfs","ChIJXUB3oBGmIIYRDRcvPi-pdDM","ChIJXXjcfZhcJ4YRWnFiE4ofXes","ChIJYbYLMBimIIYR_jUx5ds4Quo","ChIJaS5FoBGmIIYRTXOjqm3XxI0","ChIJaVmoJg6vIIYR9iB3FoxFfEQ","ChIJf-CSq3SmIIYR1QNnxY9r5wo","ChIJfV2h73KmIIYRRDpBV-crpB8","ChIJgTgvHA6mIIYR8-Hw_kHU-f0","ChIJi2AxW3SmIIYRmML7jsbqtb8","ChIJiUWE9A2mIIYRngo31C8qPSw","ChIJnUfNIiOmIIYRibUzWhx-PBg","ChIJnYiUJxtcJ4YRkAFmz9vshEU","ChIJp6mGj3GmIIYRfS0qjpoGsmo","ChIJpdlCODylIIYRyeE-wYHtahE","ChIJryxqrxCmIIYRtUFAh4d96BY","ChIJs_quaAymIIYRUwRs2-LHWqA","ChIJt2f3WgymIIYRb1B1S_gWc3I","ChIJu2hvxRGmIIYRaS0qajrz0ZE","ChIJuwqeNamlIIYRiCYSjKciG5c","ChIJv2VvX3GmIIYRlCIIn4WtIYY","ChIJvTnAEW6mIIYRqA7o0JRIRyA","ChIJzXUQJhimIIYR7wBw72LWWZs","discoverySearchPage1","pagetoken","discoveries","discoverySearchPage2","divisionHit","setStatus","bootstrap_logic","_bootstrapAct","bootstrapFns","get","wrapup","bootstrapFnFinished","bootstrapFn","nextBootstrapFn","find","status","statusMsg","getBootstrapStatusMsg","isBootstrapComplete","actions.bootstrapComplete","_layoutAct","viewName","_openLeftNav","openLeftNav","LeftNavWithFassets","leftNavItems","leftNavVisible","setLeftNavVisible","closeLeftNav","Drawer_default","leftNav","onKeyDown","AppBar_default","Toolbar_default","LeftNavItem","AppLayoutWithState","curView","viewAuxiliaryContent","curViewAuxiliaryContent","matchKey","fallbackViewAuxiliaryContent","resolveCurViewAuxiliaryContent","app","appBar","toolbar","disableGutters","menuButton","icons_Menu_default","comp_UserMenu","comp_LeftNav","AppLayoutWithFassets","top","bottom","height","overflow","paddingTop","paddingBottom","lightTheme","createMuiTheme","typography","useNextVariants","darkTheme","MainLayoutWithState","themeInUse","theRestOfTheStory","comp_AppLayout","styles","CssBaseline_default","MainLayoutWithFassets","actions.changeView","sel.getView","fassetValidations","comp","comp_MainLayout","hostname","match","navigator","serviceWorker","ready","registration","unregister","lastState","logActions_logic","group","curState","groupEnd","doTest","cb","LowPriority_default","features","device","authServiceFirebase","authServiceMock","eateryServiceFirebase","eateryServiceMock","bootstrap","layout","pwa","logActions","AppLayout.LeftNavItem.sandbox","launchApp","aspects","reducerAspect","createReducerAspect","logicAspect","createLogicAspect","routeAspect","createRouteAspect","config","fallbackElm$","appAspects","registerRootAppElm","rootAppElm","ReactDOM","render","document","getElementById","__webpack_require__","d","__webpack_exports__"],"mappings":"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","file":"static/js/main.7882a275.chunk.js","sourcesContent":["/**\r\n * Standardize the ability to handle ALL errors more generically, by\r\n * adding these value-added extensions to ALL Error objects (via this\r\n * Error class polyfill - a monkey patch).\r\n * \r\n * All Error instances (created anywhere) are extended to include the\r\n * following characteristics:\r\n * \r\n * - A new error.userMsg property is defined.\r\n * \r\n *   This message is intended to be seen by users, so it should be\r\n *   suitable for human consumption:\r\n *     - both in meaning, \r\n *     - and in sanitation (so as to not reveal any internal\r\n *       architecture)\r\n * \r\n *   By default, error.userMsg = 'Unexpected Condition'\r\n *   and can be changed by: \r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n * - There is a delineation of expected vs. unexpected conditions.  For\r\n *   example:\r\n * \r\n *     - An error communicating \"invalid password\" is an expected\r\n *       condition, because it is stimulated by user input.\r\n * \r\n *     - Contrast that with an error communicating \"DB is down\", which is\r\n *       an unexpected condition, because this is outside the user's\r\n *       control.\r\n * \r\n *   This distinction is controlled by whether an error.userMsg has\r\n *   been defined (expected) or not (unexpected).\r\n * \r\n *   In other words, all errors start out as unexpected, and can be\r\n *   changed to expected by simply invoking:\r\n *     + error.defineUserMsg(userMsg): error\r\n * \r\n *   This distinction may be programmatically delineated through one of\r\n *   the following methods:\r\n *     + error.isExpected(): boolean\r\n *     + error.isUnexpected(): boolean\r\n * \r\n * - A new error.attemptingToMsg property is defined.\r\n * \r\n *   This message is also intended to be seen by users, and provides\r\n *   additional detail of what was being attempted (over and above the\r\n *   error.userMsg).\r\n * \r\n *   By default, error.attemptingToMsg = ''\r\n *   and can be changed by: \r\n *     + error.defineAttemptingToMsg(attemptingToMsg): error\r\n * \r\n * - A new error.formatUserMsg() is provided that combines all\r\n *   user-specific messages (userMsg and attemptingToMsg).\r\n * \r\n *     + error.formatUserMsg(): string\r\n * \r\n * - The toString() method has been extended to suffix the base\r\n *   toString() with user-specific messages.\r\n * \r\n * - All of the new \"defining\" methods return the receiving error,\r\n *   so as to allow them to be conveniently chained.  For example:\r\n * \r\n *     throw new Error('catastrophic details here').defineAttemptingToMsg('sign in');\r\n * \r\n * **Usage Scenarios** are as follows:\r\n * \r\n * - Error Origination\r\n * \r\n *   In throwing a new Error, you can:\r\n *     throw new Error('internal technical error details')\r\n *                 .defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                 .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n * \r\n * - Error Pass Through\r\n * \r\n *   Within a mid-level service, you may capture an error from a lower\r\n *   point and supplement it as follows:\r\n * \r\n *     catch(err) {\r\n *       throw err.defineUserMsg('You did not bla')           // ONLY INVOKE if this is an expected condition - otherwise default to: 'Unexpected Condition'\r\n *                .defineAttemptingToMsg('log into the app'); // optionally provide additional clarification in either case (expected/unexpected)\r\n *     }\r\n * \r\n * - Error Consumption (by client)\r\n * \r\n *   Using these enhancements, the client can abstractly apply various\r\n *   heuristics, such as:\r\n *\r\n *     - if logging is necessary\r\n *       * if so, reveal complete context (internal details and user context)\r\n *     - if user notification necessary\r\n *       * if so supply info suitable for human consumption\r\n * \r\n *   For more usage scenarios, please refer to the discloseError.js utility.\r\n */\r\n\r\n/* eslint-disable no-extend-native */  // we are very careful NOT to break native behavior of the Error object\r\n\r\nif (!Error.prototype.defineUserMsg) { // key off of one of several extension points\r\n\r\n  /**\r\n   * Define a user-specific message, that is applicable for human\r\n   * consumption:\r\n   *  - both in meaning, \r\n   *  - and in sanitization (so as to not reveal any internal architecture).\r\n   *\r\n   * This method also delineates the error as an expected condition.\r\n   *\r\n   * @param {String} userMsg the user message to define\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineUserMsg = function(userMsg) {\r\n    this.userMsg  = userMsg;\r\n    this.expected = true;\r\n    return this;\r\n  };\r\n  Error.prototype.userMsg = \"Unexpected Condition\"; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * expected (say user input error),\r\n   * or not (say a catestrophic error).\r\n   *\r\n   * @return {boolean} error expected (true) or not (false).\r\n   */\r\n  Error.prototype.isExpected = function() {\r\n    return this.expected;\r\n  };\r\n  Error.prototype.expected = false; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether this error was\r\n   * unexpected (say a catestrophic error),\r\n   * or not (say user input error).\r\n   *\r\n   * @return {boolean} error unexpected (true) or not (false).\r\n   */\r\n  Error.prototype.isUnexpected = function() {\r\n    return !this.expected;\r\n  };\r\n\r\n\r\n  /**\r\n   * Define a user-specific 'attempting to' message, that provides\r\n   * additional details of what was being attempted.\r\n   *\r\n   * Errors with this context are prefixed with ' ... attempting to: ',\r\n   * so word your phrasing appropriatly.\r\n   * \r\n   * Multiple attempting-to phrases can be used, which will be\r\n   * combined with the ', -and- ' phrase.\r\n   *\r\n   * @param {String} attemptingToMsg the user-specific attempting\r\n   * to' message.\r\n   *\r\n   * @return {Error} self, supporting convenient Error method chaining.\r\n   */\r\n  Error.prototype.defineAttemptingToMsg = function(attemptingToMsg) {\r\n    if (this.attemptingToMsg) // append multiples\r\n      this.attemptingToMsg += `, -and- ${attemptingToMsg}`;\r\n    else                      // initial definition\r\n      this.attemptingToMsg += ` ... attempting to: ${attemptingToMsg}`;\r\n    return this;\r\n  };\r\n  Error.prototype.attemptingToMsg = ''; // prototype provides the default\r\n\r\n\r\n  /**\r\n   * Format a user-specific message, combining all user-specific contexts.\r\n   *\r\n   * @return {string} formatted user message.\r\n   */\r\n  Error.prototype.formatUserMsg = function() {\r\n    return this.userMsg + this.attemptingToMsg;\r\n  };\r\n\r\n\r\n  /**\r\n   * Extend the Error toString() to prefix user-specfic context.\r\n   */\r\n  const prior_toString = Error.prototype.toString; // monkey patch\r\n  Error.prototype.toString = function() {\r\n    return prior_toString.call(this) + '\\n\\nUser Msg: ' + this.formatUserMsg();\r\n  };\r\n\r\n\r\n  // L8TR:\r\n  // /**\r\n  //  * Define an indicator as to the cause of this error ... used to apply\r\n  //  * various heuristics, such as whether logging is necessary.\r\n  //  *\r\n  //  * The following indicators are available:\r\n  //  *   Error.Cause {\r\n  //  *     UNEXPECTED_CONDITION        [default]\r\n  //  *     RECOGNIZED_USER_ERROR\r\n  //  *   }\r\n  //  *\r\n  //  * @param {String} cause one of Error.Cause.\r\n  //  *\r\n  //  * @return {Error} self, supporting convenient Error method chaining.\r\n  //  */\r\n  // Error.prototype.defineCause = function(cause) {\r\n  //   this.cause = cause;\r\n  //   return this;\r\n  // };\r\n  // \r\n  // Error.Cause = {\r\n  //   UNEXPECTED_CONDITION:    'UNEXPECTED_CONDITION',\r\n  //   RECOGNIZED_USER_ERROR: 'RECOGNIZED_USER_ERROR'\r\n  // };\r\n  // \r\n  // Error.prototype.cause = Error.Cause.UNEXPECTED_CONDITION; // prototype provides the default\r\n\r\n}\r\n","/**\r\n * A convenience assertion utility, typically used to validate\r\n * pre-conditions of a routine.\r\n *\r\n * **Advanced**: verify.prefix(msgPrefix) returns a higher-order\r\n *               verify() function where all messages are prefixed.\r\n *\r\n * @param {truthy} condition - a \"truthy\" condition which\r\n * must be satisfied.\r\n *\r\n * @param {string} msg - a message clarifying the condition being\r\n * checked.\r\n * \r\n * @throws {Error} an Error is thrown when the supplied condition is\r\n * NOT met.\r\n * \r\n * @private\r\n */\r\nexport default function verify(condition, msg) {\r\n  if (!condition) {\r\n    // TODO: don't think there is any benefit in logging this console.error \r\n    // console.error(`verify() constraint issue: ${msg}`); // supplement exception with error log (for react-native exposure)\r\n    throw new Error(msg);\r\n  }\r\n}\r\n\r\nverify.prefix = function(msgPrefix) {\r\n  return (condition, msg) => verify(condition, msgPrefix+msg);\r\n};\r\n","import {connect} from 'react-redux';\r\nimport verify    from './verify';\r\n\r\n/**\r\n * Promotes a \"wrapped\" Component (an HoC - Higher-order Component)\r\n * that injects redux state props into a `component`, as specified by\r\n * the various named parameters.\r\n * \r\n * This is a simple wrapper around redux connect(), promoting the\r\n * following improvements:\r\n *\r\n * 1. Removes the ambiguity of `connect()` _(connect to what?)_ by\r\n *    using a more explicit function name: `withState()`\r\n *\r\n * 2. By employing \"named\" parameters:\r\n *    - it is self documenting\r\n *    - the quirkiness of parameter variability is removed\r\n *      ... no more `undefined` positional parameters\r\n *    - parameter order is up to the client\r\n *\r\n * 3. Provides a \"convenient\" way to directly emit the\r\n *    HoC, by directly passing the `component`.\r\n *\r\n *    When the `component` is **not supplied**, it\r\n *    operates in the original way - returning the\r\n *    HoF _(allowing for \"functional composition\")_.\r\n *\r\n * Central to this process, a Higher-order Function (HoF) is created\r\n * that encapsulates this \"mapping knowledge\".  Ultimately, this\r\n * HoF must be invoked (passing the `component`), which exposes the HoC\r\n * (the \"wrapped\" Component).\r\n * \r\n * ```js\r\n * + withStateHoF(component): HoC\r\n * ```\r\n * \r\n * There are two ways to use `withState()`:\r\n * \r\n * 1. By directly passing the `component` parameter, the HoC will be\r\n *    returned _(internally invoking the HoF)_.  This is the most\r\n *    common use case.\r\n * \r\n * 2. By omitting the `component` parameter, the HoF will be\r\n *    returned.  This is useful to facilitate \"functional composition\"\r\n *    _(in functional programming)_.  In this case it is the client's\r\n *    responsibility to invoke the HoF _(either directly or\r\n *    indirectly)_ in order to expose the HoC.\r\n * \r\n * **Please Note** this function uses named parameters.\r\n *\r\n * @param {function}        [mapStateToProps]    same as redux connect() docs.\r\n * @param {object|function} [mapDispatchToProps] same as redux connect() docs.\r\n * @param {function}        [mergeProps]         same as redux connect() docs.\r\n * @param {object}          [options]            same as redux connect() docs.\r\n * @param {ReactComp}       [component]         optionally, the React Component\r\n *                                               to be wrapped _(see discussion above)_.\r\n *    \r\n * @returns {HoC|HoF} either the HoC (the \"wrapped\" Component) when\r\n * `component` is supplied, otherwise the HoF _(see discussion\r\n * above)_.\r\n *\r\n * **Examples**:\r\n * ```js\r\n *   // auto wrap a MainPage Component ...\r\n *   export default withState({\r\n *     component: MainPage, // NOTE: auto wrap MainPage\r\n *     mapStateToProps(appState) {\r\n *       return {\r\n *         deviceStatus: appState.device.status,\r\n *       };\r\n *     },\r\n *     mapDispatchToProps(dispatch, ownProps) {\r\n *       return {\r\n *         changeView(view) {\r\n *           dispatch( actions.view.change(view) );\r\n *           app.leftNav.close();\r\n *         },\r\n *         handleFilterDiscovery() {\r\n *           dispatch( actions.discovery.filter.open() );\r\n *           app.leftNav.close();\r\n *         },\r\n *       };\r\n *     },\r\n *   });\r\n *\r\n *\r\n *   // immediatly invoke the HoF, wrapping MyComp ...\r\n *   export default withState({\r\n *     mapStateToProps(appState) {\r\n *       return {\r\n *         deviceStatus: appState.device.status,\r\n *       };\r\n *     },\r\n *   })(MyComp); // NOTE: immediatly invoke the HoF, emitting the wrapped MyComp\r\n * ```\r\n */\r\nexport default function withState({mapStateToProps,\r\n                                   mapDispatchToProps,\r\n                                   mergeProps,\r\n                                   options,\r\n                                   component,\r\n                                   ...unknownArgs}={}) {\r\n  // validate params\r\n  const check = verify.prefix('withState() parameter violation: ');\r\n\r\n  // ... all map params are optional\r\n  // ... options param is optional\r\n  // ... component\r\n  if (component) {\r\n    check(typeof component == 'function',\r\n          'component, when supplied, must be a React Component - to be wrapped');\r\n  }\r\n  // ... unrecognized named parameter\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length === 0,\r\n        `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n  // ... unrecognized positional parameter\r\n  check(arguments.length === 1,\r\n        'unrecognized positional parameters (only named parameters can be specified)');\r\n\r\n  // define our HoF that when invoked will expose our HoC wrapper\r\n  // ... this \"second level of indirection\" encapsulates the knowledge of our \"mapping\"\r\n  const withStateHoF = connect(mapStateToProps, mapDispatchToProps, mergeProps, options);\r\n\r\n  // either return the HoC \"wrapped\" Component or HoF\r\n  // ... depending on whether the component parameter is supplied\r\n  return component ? withStateHoF(component) : withStateHoF;\r\n}\r\n","import {generateActions} from 'action-u';\r\nimport _device           from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_device]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    toggleUITheme: { // actions.toggleUITheme(): Action\r\n                     // > toggle the UI Theme ('light'/'dark')\r\n                     actionMeta: {},\r\n    },\r\n\r\n    setLoc: { // actions.setLoc(loc): Action\r\n              // > set device GPS location\r\n              actionMeta: {\r\n                traits: ['loc'],\r\n              },\r\n    },            \r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'device';\r\n","import React          from 'react';\r\nimport {withFassets}  from 'feature-u';\r\n\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport Menu           from '@material-ui/core/Menu';\r\nimport UserIcon       from '@material-ui/icons/AccountCircle';\r\n\r\n\r\n/**\r\n * UserMenu: our UserMenu component that accumulates menu items via use contract.\r\n */\r\nfunction UserMenu({userMenuItems}) {\r\n\r\n  const [anchorUserMenu, setAnchorUserMenu] = React.useState(null);\r\n  const userMenuOpen = Boolean(anchorUserMenu);\r\n\r\n  const openUserMenu = (event) => setAnchorUserMenu(event.currentTarget);\r\n  _closeUserMenu     = ()      => setAnchorUserMenu(null);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton color=\"inherit\"\r\n                  onClick={openUserMenu}>\r\n        <UserIcon/>\r\n      </IconButton>\r\n      <Menu anchorEl={anchorUserMenu}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            open={userMenuOpen}\r\n            onClose={closeUserMenu}>\r\n        {userMenuItems.map( ([fassetsKey, UserMenuItem]) => <UserMenuItem key={fassetsKey}/> )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default /* UserMenuWithFassets = */ withFassets({\r\n  component: UserMenu,\r\n  mapFassetsToProps: {\r\n    userMenuItems: 'AppLayout.UserMenuItem.*@withKeys',\r\n  }\r\n});\r\n\r\nlet _closeUserMenu = null;\r\nexport function closeUserMenu() {\r\n  if (_closeUserMenu) {\r\n    _closeUserMenu();\r\n  }\r\n}\r\n","import React           from 'react';\r\nimport PropTypes       from 'prop-types';\r\nimport MenuItem        from '@material-ui/core/MenuItem';\r\nimport {closeUserMenu} from './UserMenu';\r\n\r\n/**\r\n * UserMenuItem: our UserMenuItem - a MenuItem wrapper that auto-closes the UserMenu.\r\n */\r\nexport default function UserMenuItem(props) {\r\n\r\n  // value-added onClick that auto-closes the UserMenu\r\n  const myOnClick = (...args) => {\r\n    // auto-close the UserMenu\r\n    closeUserMenu()\r\n\r\n    // pass-through to client onClick()\r\n    if (props.onClick) {\r\n      props.onClick(...args);\r\n    }\r\n  };\r\n\r\n  // wrap <MenuItem>\r\n  return (\r\n    <MenuItem {...props} onClick={myOnClick}>{props.children}</MenuItem>\r\n  );\r\n}\r\n\r\nUserMenuItem.propTypes = {\r\n  children: PropTypes.node.isRequired, // UserMenuItem content is required (i.e. the label)\r\n};\r\n","import React         from 'react';\r\n\r\nimport withState     from '../../../../util/withState';\r\nimport {withFassets} from 'feature-u';\r\n\r\nimport _deviceAct    from '../actions';\r\n\r\nimport Chip          from '@material-ui/core/Chip';\r\nimport MoonIcon      from '@material-ui/icons/Brightness3';\r\nimport SunIcon       from '@material-ui/icons/WbSunny';\r\nimport UserMenuItem  from '../../layout/comp/UserMenuItem';\r\n\r\n\r\n/**\r\n * ToggleUITheme: our user-profile menu items (in the App Header)\r\n */\r\nfunction ToggleUITheme({uiTheme, toggleUITheme}) {\r\n  const ChipIcon = uiTheme==='light' ? MoonIcon  : SunIcon;\r\n  const label    = uiTheme==='light' ? 'to dark' : 'to light';\r\n  return (\r\n    <UserMenuItem onClick={toggleUITheme}>\r\n      <Chip label={label}\r\n            icon={<ChipIcon/>}/>\r\n    </UserMenuItem>\r\n  );\r\n}\r\n\r\nconst ToggleUIThemeWithState = withState({\r\n  component: ToggleUITheme,\r\n  mapStateToProps(appState, {fassets}) { // ... 2nd param (ownProps) seeded from withFassets() below\r\n    return {\r\n      uiTheme: fassets.sel.getUITheme(appState),\r\n    };\r\n  },\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      toggleUITheme() {\r\n        dispatch( _deviceAct.toggleUITheme() );\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nexport default /* ToggleUIThemeWithFassets = */ withFassets({\r\n  component: ToggleUIThemeWithState,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n","/**\r\n * featureFlags (see description below)\r\n */\r\n\r\nexport default {\r\n\r\n  useWIFI: false, // should app use WIFI? ... regulates various services: real/mocked\r\n\r\n  mockGPS: {lat: 30.010479, lng: -90.119414},\r\n                  // should app mock GPS? ... regulates DeviceService.getCurPos():  real/mocked\r\n                  // false: use real device location\r\n                  // true:  mock device location (default to GlenCarbon IL)\r\n                  // {lat, lng}: specify mocked location, example:\r\n                  //             {lat: 40.48643,  lng: -86.1336}   ... Kokomo IN\r\n                  //             {lat: 42.60559,  lng: -83.14993}  ... Troy MI\r\n                  //             {lat: 30.010479, lng: -90.119414} ... New Orleans, LA\r\n                  //             {lat: 38.752209, lng: -89.986610} ... Glen Carbon IL\r\n\r\n  log:     false, // should app emit diagnostic logs?\r\n                  // false:     no logs\r\n                  // true:      generate 'non verbose' logs (e.g. actions will NOT include redux state)\r\n                  // 'verbose': generate 'verbose'     logs (e.g. actions WILL     include redux state)\r\n\r\n  sandbox: false, // should app enable diagnostic sandbox controls?\r\n};\r\n","/**\r\n * A \"no op\" function that does absolutely nothing (think IEFBR14 :-)\r\n */\r\nexport default function noOp() {\r\n}\r\n","import React              from 'react';\r\nimport verify             from './verify';\r\nimport {SnackbarProvider,\r\n        withSnackbar}     from 'notistack';\r\nimport {withStyles}       from '@material-ui/core/styles';\r\nimport Button             from \"@material-ui/core/Button\";\r\nimport isString           from 'lodash.isstring';\r\nimport isFunction         from 'lodash.isfunction';\r\n\r\n/* eslint-disable react/jsx-pascal-case */  // for: <NotifyAPI_withSnackBar>\r\n\r\n/**\r\n * The Notify component provides user notifications through a visual\r\n * message dialog.\r\n *\r\n * User messages are initiated through a programmatic invocation,\r\n * using the functional notify() API.  Supplied directives support\r\n * a variety of scenarios, including:\r\n *   - action buttons (for acknowledgment, or confirmation, etc.)\r\n *   - timed closure of the message\r\n *   - msg levels of success, info, warn, error (impacting the dialog style/color)\r\n *   - modal and non-modal\r\n *\r\n * Notify is the fundamental component which is the basis of various\r\n * UI notifications (i.e. Toasts, Alerts, Confirmations, etc.).  It\r\n * can be used stand-alone, or indirectly through various wrappers\r\n * (promoted through named exports).  The following functions are\r\n * summarized as follows:\r\n *\r\n * ```\r\n *                                                                 auto-close         variant-color      screen           ??TODO client\r\n *                 params:                         msg             duration           level              position         modal  actions\r\n *                 ============================    ==============  =================  =================  ===============  =====  ==========================\r\n *   - notify .... ({msg,                          msg to display  1-20 seconds       'success': green   'top-left'       false  [ {txt, [action]}, ... ]\r\n *                   duration=5,                   ... supports    null: close        'info':    blue    'top-center'     true   - where action: () => void\r\n *                   level='success',                  cr/lf             via          'warn':    yellow  'top-right'             - actions ARE OPTIONAL\r\n *                   position='bottom-left',                             client       'error':   red     'bottom-left'           - ALL actions auto close\r\n *                   modal=false,                                        action                          'bottom-center'  \r\n *                   actions=[]})                                        DEFAULT: OK                     'bottom-right'\r\n *                   \r\n *   - toast ..... ({msg, duration=5, actions})                    ditto              via toast.xyz()    'bottom-left'    false  ditto\r\n *   - alert ..... ({msg, actions})                                null               via alert.xyz()    'top-center'     true   ditto\r\n *   - confirm ... ({msg, actions})                                null               via confirm.xyz()  'top-right'      true   requires client action(s)\r\n * ```\r\n *\r\n * **Setup**:\r\n *\r\n *   The Notify component is tightly controlled as a single instance\r\n *   within an entire app.  Therefore, one and only one Notify\r\n *   instance must be pre-instantiated (initially hidden) somewhere at\r\n *   the top-level of your app.\r\n *\r\n *     ```\r\n *       <React.Fragment>\r\n *         <Notify/>\r\n *         {app content}\r\n *       </React.Fragment>\r\n\r\n *       -or-\r\n *       <Notify>\r\n *         {app content}\r\n *       <Notify>\r\n *     ```\r\n * \r\n * **Usage**:\r\n * \r\n *   see docs below: `notify()`, `toast()`, `alert()`, `confirm()`\r\n * \r\n * **Module Note**:\r\n *\r\n *   This utility is housed in a lower-case `notify.js` module,\r\n *   because the general public API is a series of lower-case \"named\r\n *   exported\" functions: `notify()`, `toast()`, `alert()`,\r\n *   `confirm()`.\r\n * \r\n *   There is a \"default exported\" Notify component (which is somewhat\r\n *   unusual to find in a lower-case module), but is only used once at\r\n *   app startup, so is therefore justified (in this case).\r\n */\r\n\r\n//***\r\n//*** the top-level Notify component conveniently auto-injects the notistack <SnackbarProvider>\r\n//*** (required for our programmatic interface)\r\n//***\r\n\r\nfunction Notify(props) {\r\n  return (\r\n    <SnackbarProvider maxSnack={3} dense={true} className={props.classes.variantSuccess}>\r\n      <NotifyAPI_withSnackBar>\r\n        {props.children}\r\n      </NotifyAPI_withSnackBar>\r\n    </SnackbarProvider>\r\n  );\r\n}\r\n\r\n// apply snackbar variant style changes in support cr/lf\r\n// ... via: whiteSpace of 'pre-line'\r\n// ... this honors cr/lf within our snackbar items\r\nconst crlfStyles = (theme) => ({\r\n  variantSuccess: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantInfo: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantWarning: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n  variantError: {\r\n    whiteSpace: 'pre-line',\r\n  },\r\n});\r\nexport default withStyles(crlfStyles)(Notify);\r\n\r\n\r\n//***\r\n//*** keep track of our one-and-only instance\r\n//***\r\n\r\nlet _singleton = null;\r\n\r\n\r\n//***\r\n//*** the NotifyAPI component provides our internal programmatic API\r\n//*** (see .display()), used by notify(), toast(), etc.\r\n//***\r\n\r\nclass NotifyAPI extends React.Component {\r\n\r\n  static propTypes = { // expected component props\r\n  }\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n\r\n    // keep track of our one-and-only instance\r\n    verify(!_singleton, '<Notify> only ONE Notify instance should be instantiated in the app (at the top-level).');\r\n    _singleton = this;\r\n  }\r\n\r\n  // display() is the interface point to our programmatic API (notify(), toast(), etc.)\r\n  display({msg,\r\n           duration=5, // auto close duration in seconds ... DEFAULT: 5 ... use null - manual close (via actions [default to OK])\r\n           level='success',\r\n           position='bottom-left',\r\n           modal=false,\r\n           actions=[],\r\n           ...unknownArgs}={}) {\r\n\r\n    // validate the named parameters (i.e. the directive)\r\n    const check = verify.prefix('notify() parameter violation: '); // NOTE: we pretend we are: notify() (the public access point)\r\n\r\n    // ... msg\r\n    check(msg, 'directive.msg is required');\r\n    check(isString(msg),  'msg must be a string');\r\n\r\n    // ... duration\r\n    if (duration !== null) {\r\n      check(duration >= 1 && duration <= 20, `supplied duration (${duration}) must be a number between 1 and 20 (inclusive).`);\r\n    }\r\n\r\n    // ... level\r\n    check(levelVariant[level], `invalid level: '${level}', expecting one of ${Object.keys(levelVariant)}.`);\r\n\r\n    // ... position\r\n    check(anchorOrigin[position], `invalid position: '${position}', expecting one of ${Object.keys(anchorOrigin)}.`);\r\n\r\n    // ... modal\r\n    check(modal===true || modal===false, `supplied modal (${modal}) must be a boolean true/false.`);\r\n\r\n    // ... actions\r\n    check(actions,                'actions must be an Action[] array'); // defaulted to [] ... this is user error of like null or something\r\n    check(Array.isArray(actions), 'actions must be an Action[] array');\r\n    actions.forEach( (action, indx) => {\r\n      check(action.txt,           `action[${indx}].txt is required`);\r\n      check(isString(action.txt), `action[${indx}].txt be a string ... NOT: ${action.txt}`);\r\n      if (action.action) {\r\n        check(isFunction(action.action), `action[${indx}].action (when supplied) must be a function ... NOT: ${action.action}`);\r\n      }\r\n    });\r\n\r\n    // ... unknown args\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n    // maintain our display duration\r\n    const autoHideDuration = duration ? duration*1000 : null; // convert to seconds ... null indicates manual close (via actions [default to OK])\r\n\r\n    // interpret any client-supplied actions\r\n\r\n    // ... provide a default OK when NO duration and NO actions are defined\r\n    //     NOTE: When NO duration is supplied, only way to close notification is through an action!\r\n    //           If client has NO actions, we will supply one (a default OK)\r\n    if (!duration && actions.length===0) {\r\n      actions = [{txt: 'OK'}]; // do NOT mutate client-supplied actions\r\n    }\r\n\r\n    // ... maintain a actions callback map indexed by .txt (default to identityFn)\r\n    const actionsCbMap = actions.reduce( (map, action) => {\r\n      map[action.txt] = action.action || identityFn;\r\n      return map;\r\n    }, {} );\r\n    // ... define our actionButtons (supplied to enqueueSnackbar) ... empty array is ignored\r\n    const actionButtons = actions.map( (action, indx) => <Button key={indx} color=\"default\" size=\"small\">{action.txt}</Button> );\r\n\r\n\r\n    // KEY: display the notification ... using notistack's enqueueSnackbar(...)\r\n    const snackbarKey = this.props.enqueueSnackbar(msg, {\r\n      variant: levelVariant[level],\r\n      autoHideDuration,\r\n      anchorOrigin: anchorOrigin[position],\r\n      action: actionButtons,\r\n      onClickAction: (e) => {\r\n        // close this notification\r\n        this.props.closeSnackbar(snackbarKey);\r\n\r\n        // invoke client-supplied callback\r\n        // ... on delay to make any client-notification transitions more intuitive\r\n        const clientAction = actionsCbMap[e.target.textContent];\r\n        setTimeout( () => clientAction(), 400);\r\n      },\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.children}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// our level variant (indirectly defines color -and- provides level validation)\r\nconst levelVariant = { // color NOT used\r\n  success: 'success',\r\n  info:    'info',\r\n  warn:    'warning',\r\n  error:   'error',\r\n};\r\n\r\n// our anchorOrigin, indexed by position keyword\r\nconst anchorOrigin = {\r\n  'top-left':      { vertical: 'top',    horizontal: 'left'   },\r\n  'top-center':    { vertical: 'top',    horizontal: 'center' },\r\n  'top-right':     { vertical: 'top',    horizontal: 'right'  },\r\n  'bottom-left':   { vertical: 'bottom', horizontal: 'left'   },\r\n  'bottom-center': { vertical: 'bottom', horizontal: 'center' },\r\n  'bottom-right':  { vertical: 'bottom', horizontal: 'right'  },\r\n};\r\n\r\n// a convenient identity function\r\nconst identityFn = (p)=>p;\r\n\r\n\r\n//***\r\n//*** the withSnackbar() HOC provides access to the Snackbar run-time methods:\r\n//***   + props.enqueueSnackbar(...)\r\n//***   + props.closeSnackbar(...)\r\n//*** \r\n\r\nconst NotifyAPI_withSnackBar = withSnackbar(NotifyAPI);\r\nNotifyAPI_withSnackBar.displayName = 'NotifyAPI_withSnackBar'; // ... for react debugging (NOT accomplished in withSnackbar() ... grrrrr)\r\n\r\n\r\n\r\n/**\r\n * Display a user notification - the general purpose access point,\r\n * using named directives.\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds to\r\n * display the msg before automatically closing the dialog.  If not\r\n * supplied, the dialog must be explicitly closed through a button\r\n * click.\r\n *\r\n * @param {string} [directive.level] the category level associated\r\n * with this notification (impacting background color).  One of:\r\n *  - 'success' ... the default\r\n *  - 'info'\r\n *  - 'warn'\r\n *  - 'error'\r\n *\r\n * @param {string} [directive.position] the position to display this\r\n * notification. One of:\r\n *  - 'top-left'\r\n *  - 'top-center'\r\n *  - 'top-right'\r\n *  - 'bottom-left' ... the default\r\n *  - 'bottom-center'\r\n *  - 'bottom-right'\r\n *\r\n * @param {boolean} [directive.modal] an indicator as to whether the\r\n * notification dialog is modal (true) or not (false) the default.\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   notify({\r\n *     msg:      'You have un-saved changes.\\nif you leave, your changes will NOT be saved!',\r\n *     duration: seconds,\r\n *     level:    'warn',\r\n *     position: 'bottom-right',\r\n *     modal:    true,\r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => ...callback-logic-here... },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nexport function notify(directive) {\r\n  // validate that an <Notify> has been instantiated\r\n  verify(_singleton, 'notify(): NO <Notify> instance has been established in the app root.');\r\n\r\n  // pass-through to our instance method\r\n  _singleton.display(directive);\r\n}\r\n\r\n\r\n/**\r\n * The toast() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"toast\" ... a non-modal dialog\r\n * located at the bottom-left of the screen, which is typically closed\r\n * after 5 seconds.\r\n *\r\n * Various levels can be accomplished via toast.success(),\r\n * toast.info(), toast.warn(), toast.error() ... all of which have the\r\n * same signature.  NOTE: toast() is the same as toast.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf are\r\n * supported).\r\n *\r\n * @param {number} [directive.duration] the number of seconds before\r\n * automatically closing the dialog (default: 5).  A null defers to\r\n * supplied actions to close (which in turn defaults to an OK).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO duration and NO actions are defined, a default OK \r\n *       action is injected that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *\r\n *   toast({ msg:'Hello World' });    // will close in 6 secs\r\n *\r\n *   toast.error({ msg:     `An error occurred: ${err}`, \r\n *                 duration: null }); // OK button will close\r\n *\r\n *   toast.warn({                     // will close in 3 secs -OR- when \"undo\" is clicked\r\n *     msg: 'Your item was deleted', \r\n *     actions: [\r\n *       { txt: 'undo', action: () => ...callback-logic-here... },\r\n *     ]\r\n *    })\r\n * ```\r\n */\r\nfunction toastBase({msg, duration=5, actions, ...unknownArgs}, level) {\r\n\r\n  // validate toast-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`toast${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration,\r\n    level,    // NOTE: level is defaulted by the root notify()\r\n    position: 'bottom-left',\r\n    modal: false,\r\n    actions,\r\n  });\r\n}\r\nexport function  toast(directive) { toastBase(directive);          }\r\ntoast.success  = function(directive) { toastBase(directive, 'success'); }\r\ntoast.info     = function(directive) { toastBase(directive, 'info');    }\r\ntoast.warn     = function(directive) { toastBase(directive, 'warn');    }\r\ntoast.error    = function(directive) { toastBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The alert() function is a convenience wrapper around notify() that\r\n * displays the supplied msg as a \"alert\" ... a modal dialog located\r\n * at the top-center of the screen, that must be acknowledged by the\r\n * user with either the default OK button, or a client-supplied\r\n * action.\r\n *\r\n * Various levels can be accomplished via alert.success(),\r\n * alert.info(), alert.warn(), alert.error() ... all of which have the\r\n * same signature.  NOTE: alert() is the same as alert.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} [directive.actions] one or more actions -\r\n * button/action combinations.  The required Action.txt defines the\r\n * button label, and the Action.action is an option client-supplied\r\n * callback.  Each defined action will implicitly close the dialog,\r\n * in addition to invoking the optional client-supplied callback.\r\n *\r\n * NOTE: When NO actions are defined, a default OK  action is injected\r\n *       that will close the dialog when clicked.\r\n *\r\n * Example:\r\n * ```\r\n *   alert({ msg:'Hello World' });\r\n *   alert.warn({\r\n *     msg:`Your limit (${limit}) has been reached!`\r\n *     actions: [\r\n *       { txt: 'increase', action: () => ...callback-logic-here... },\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction alertBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate alert-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`alert${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-center',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  alert(directive) { alertBase(directive);          }\r\nalert.success  = function(directive) { alertBase(directive, 'success'); }\r\nalert.info     = function(directive) { alertBase(directive, 'info');    }\r\nalert.warn     = function(directive) { alertBase(directive, 'warn');    }\r\nalert.error    = function(directive) { alertBase(directive, 'error');   }\r\n\r\n\r\n/**\r\n * The confirm() function is a convenience wrapper around notify()\r\n * that displays the supplied msg as a \"confirmation\" ... a modal\r\n * dialog located at the bottom-right of the screen, that must be\r\n * acknowledged through client-supplied action buttons.\r\n *\r\n * Various levels can be accomplished via confirm.success(),\r\n * confirm.info(), confirm.warn(), confirm.error() ... all of which\r\n * have the same signature.  NOTE: confirm() is the same as\r\n * confirm.success().\r\n *\r\n * @param {string} directive.msg the message to be displayed (cr/lf\r\n * are supported).\r\n *\r\n * @param {Action[]} directive.actions one or more actions - button/action\r\n * combinations.  The required Action.txt defines the button label,\r\n * and the Action.action is an option client-supplied callback.  Each\r\n * defined action will implicitly close the dialog, in addition to\r\n * invoking the optional client-supplied callback.\r\n *\r\n * Example:\r\n * ```\r\n *   confirm.warn({ \r\n *     msg: 'This is an confirm warning.\\nYou must explicitly acknowledge it.', \r\n *     actions: [\r\n *       { txt: 'Discard Changes', action: () => console.log('xx Discarding Changes') },\r\n *       { txt: 'Go Back' }\r\n *     ]\r\n *   });\r\n * ```\r\n */\r\nfunction confirmBase({msg, actions, ...unknownArgs}, level) {\r\n\r\n  // validate confirm-specific characteristics (other validation done by notify())\r\n  const funcQual = level ? `.${level}` : '';\r\n  const check    = verify.prefix(`confirm${funcQual}() parameter violation: `);\r\n\r\n  // NOTE: as a general rule, validations are provided by the root notify()\r\n  // checking msg explicitly avoids unknownArgKeys weirdness (below) when msg is passed as a non-named param\r\n  check(msg, 'msg named parameter is required');\r\n\r\n  // confirm() requires client-supplied actions\r\n  check(actions && actions.length>0, 'client-specific actions are required.');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n  // defer to our general-purpose notify() utility\r\n  notify({\r\n    msg,\r\n    duration: null, // force user acknowledgment\r\n    level,          // NOTE: level is defaulted by the root notify()\r\n    position: 'top-right',\r\n    modal: true,\r\n    actions,\r\n  });\r\n}\r\nexport function  confirm(directive) { confirmBase(directive);          }\r\nconfirm.success  = function(directive) { confirmBase(directive, 'success'); }\r\nconfirm.info     = function(directive) { confirmBase(directive, 'info');    }\r\nconfirm.warn     = function(directive) { confirmBase(directive, 'warn');    }\r\nconfirm.error    = function(directive) { confirmBase(directive, 'error');   }\r\n","import {toast, alert} from './notify';\r\nimport verify         from './verify';\r\n\r\nconst DYNAMIC_DEFAULT = 'DYNAMIC_DEFAULT';\r\n\r\n/**\r\n * The discloseError() utility provides a standard way to \r\n * disclose errors both to the user (toasts) and logs.\r\n *\r\n * This utility uses the heuristics defined by the\r\n * ErrorExtensionPolyfill, and therefore require it to be present.\r\n *\r\n * The emission of both user notifications and logs can be controlled,\r\n * through parameters that dynamically default (based on \"expected\"\r\n * vs. \"unexpected\" error status).\r\n *\r\n * All user notifications occur through toasts, and are sanitized:\r\n *  - showing appropriate user-level detail,\r\n *  - with more information available via a button click\r\n *\r\n * Log formats are also standardized.\r\n *\r\n * **Please Note** this function uses named parameters.\r\n *\r\n * @param {Error} err the Error object to be disclosed (logged and\r\n * user-notified).\r\n *\r\n * @param {boolean} [showUser=true] an indicator as to whether the\r\n * user should be shown this error.\r\n *\r\n * @param {boolean} [logIt=DYNAMIC_DEFAULT] an indicator as to whether\r\n * a log entry should be emitted, dynamically defaulted (LOG when err\r\n * is Unexpected, NO-LOG when Expected).\r\n */\r\nexport default function discloseError({err,\r\n                                       showUser=true,         // DEFAULT: true ................. i.e. always SHOW\r\n                                       logIt=DYNAMIC_DEFAULT, // DEFAULT: err.isUnexpected() ... i.e. LOG when Unexpected, NO-LOG when Expected\r\n                                       ...unknownArgs}={}) {\r\n\r\n  // validate parameters\r\n  try {\r\n    const check = verify.prefix('discloseError() parameter violation: ')\r\n    // ... err\r\n    check(err,           'err is required');\r\n    check(err instanceof Error, 'err must be an Error object, NOT: ', err);\r\n    // ... showUser\r\n    showUser = showUser===DYNAMIC_DEFAULT ? err.isExpected() : showUser; // dynamic DEFAULT semantics\r\n    check(showUser===true || showUser===false, 'showUser must be a boolean');\r\n    // ... logIt\r\n    logIt = logIt===DYNAMIC_DEFAULT ? err.isUnexpected() : logIt; // dynamic DEFAULT semantics\r\n    check(logIt===true || logIt===false, 'logIt must be a boolean');\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguents.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n  }\r\n  // NOTE: this handler CANNOT throw an error, \r\n  //       because it is typically used inside a promise.catch()\r\n  //       which will generate an \"Unhandled promise rejection\"\r\n  catch(e) {\r\n    console.log('YIKES ... eatery-nod-w\\'s discloseError() was attempting to report on err: ', err);\r\n    console.log('HOWEVER AN INVOCATION PROBLEM was detected in the parameters passed to discloseError()!\\n' +\r\n                '... discloseError() CANNOT throw an error (when used in a promise an \"Unhandled promise rejection\" will result)!!\\n' +\r\n                '... PLEASE FIX THE FOLLOWING INVOCATION PROBLEM: ', e);\r\n    return; // cannot throw(e) ... see log (above)\r\n  }\r\n\r\n  // show user when requested\r\n  if (showUser) {\r\n    // unexpeded errors display as error toasts with additional details link\r\n    if (err.isUnexpected()) {\r\n      toast.error({  // ... will auto close -OR- when \"details\" is clicked\r\n        msg: err.formatUserMsg(),\r\n        actions: [\r\n          { txt:    'details',\r\n            action: () => {\r\n              alert.error({ msg: `An unexpected error occurred:\r\n\r\n${err}\r\n\r\nIf this problem persists, please contact your tech support.`\r\n              });\r\n            }},\r\n        ]\r\n      });\r\n    }\r\n\r\n    // expeded errors display as warning toasts with NO additional detail\r\n    else {\r\n      toast.warn({  // ... will auto close\r\n        msg: err.formatUserMsg()\r\n      });\r\n    }\r\n        \r\n  }\r\n\r\n  // generate log entry when requested\r\n  if (logIt) {\r\n\r\n    // log the details of the error (with traceback) for tech review\r\n    // NOTE 1: we refrain from using console.warn() and console.error() \r\n    //         because of BAD semantics inferred by react-native/expo:\r\n    //          - console.warn():  generates yellow popup\r\n    //          - console.error(): kills app with \"red screen of death\"\r\n    // NOTE 2: react-native/expo appears to be doing something non standard\r\n    //         when passing error as the 2nd parameter of log():\r\n    //             log('msg', error)\r\n    //         ... in this case is merely emitting error.toString()\r\n    //         ... we can however receive a stack trace by calling log(error) as the first parameter\r\n    const prefix = err.isUnexpected() ? '*** Unexpected Error:\\n\\n' : '*** Expected Error:\\n\\n';\r\n    console.log(prefix + err);\r\n    if (err.isUnexpected()) { // produce stack traces only for unexpected errors\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n}\r\n","//? import {Location,\r\n//?         Permissions}   from 'expo';                   // ?? THERE IS NO expo\r\nimport featureFlags    from '../../../../featureFlags';\r\nimport noOp            from '../../../../util/noOp';\r\nimport discloseError   from '../../../../util/discloseError';\r\n\r\nconst credentialsKey       = 'eatery-nod:credentials';\r\nconst credentialsSeparator = '/';\r\n\r\n\r\n/**\r\n * DeviceService promotes a simplified abstraction of several device\r\n * services (both Expo and react-native), providing a consistent \"GO\r\n * TO\" for device related resources.\r\n *\r\n * Some services are \"mockable\", at an individual method level, as\r\n * specified by our featureFlags.\r\n */\r\nclass DeviceService {\r\n\r\n  /**\r\n   * Instantiate the DeviceService service object.\r\n   */\r\n  constructor() {\r\n    // conditionally mock various service methods, as directed by featureFlags\r\n    mock_getCurPos_asNeeded(this);\r\n  }\r\n\r\n\r\n\r\n  //****************************************************************************\r\n  //*** Persist UI Theme\r\n  //****************************************************************************\r\n\r\n  /**\r\n   * Fetch the UI Theme stored on local device (if any).\r\n   * \r\n   * @return {string} the persisted UI Theme (null for none - suitable\r\n   * to be used as initial redux state (vs. undefined)).\r\n   */\r\n  fetchUITheme() {\r\n    return deviceStorage.getItem('uiTheme') || null;\r\n  }\r\n\r\n\r\n  /**\r\n   * Store the supplied UI Theme on local device.\r\n   * \r\n   * @param {string} uiTheme the UI Theme to store.\r\n   */\r\n  storeUITheme(uiTheme) {\r\n    deviceStorage.setItem('uiTheme', uiTheme);\r\n  }\r\n\r\n\r\n\r\n  //****************************************************************************\r\n  //*** Persist Authorization Credentials\r\n  //****************************************************************************\r\n\r\n  /**\r\n   * Fetch credentials stored on local device (if any).\r\n   * \r\n   * @return {object} the credentials object if any (null for none):\r\n   *   {\r\n   *     email: string,\r\n   *     pass:  string\r\n   *   }\r\n   */\r\n  fetchCredentials() {\r\n    return this.decodeCredentials( deviceStorage.getItem(credentialsKey) ) || null\r\n  }\r\n\r\n\r\n  /**\r\n   * Store credentials on local device in an encoded form.\r\n   * \r\n   * @param {string} email the email (id) to store.\r\n   * @param {string} pass the password to store.\r\n   */\r\n  storeCredentials(email, pass) {\r\n    deviceStorage.setItem(credentialsKey, this.encodeCredentials(email, pass));\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove credentials from local device.\r\n   */\r\n  removeCredentials() {\r\n    deviceStorage.removeItem(credentialsKey);\r\n  }\r\n\r\n\r\n  /**\r\n   * Encode the supplied email/pass into a string.\r\n   * \r\n   * @param {string} email the email (id) to encode.\r\n   * @param {string} pass the password to encode.\r\n   * \r\n   * @return {string} the encoded credentials.\r\n   * \r\n   * @private\r\n   */\r\n  encodeCredentials(email, pass) {\r\n    // combine email/pass into single resource\r\n    var encoding = email+credentialsSeparator+pass;\r\n\r\n    // obfuscate the credentials using a simple base-64 encoding\r\n    // NOTE: This is NOT intended to be a full-blown security\r\n    //       encryption, rather simply prevent casual exposure to\r\n    //       sensitive data via browser dev tools.\r\n    if (window.btoa) {\r\n      encoding = window.btoa(encoding);\r\n    }\r\n\r\n    return encoding;\r\n  }\r\n\r\n\r\n  /**\r\n   * Decode the supplied encodedCredentials.\r\n   * \r\n   * @param {string} encodedCredentials the encoded credentials to\r\n   * decode (falsy for none).\r\n   * \r\n   * @return {object} the decoded credentials object (null when\r\n   * encodedCredentials undefined):\r\n   *   {\r\n   *     email: string,\r\n   *     pass:  string\r\n   *   }\r\n   * \r\n   * @private\r\n   */\r\n  decodeCredentials(encodedCredentials) {\r\n    // no-op if NO encoding supplied\r\n    if (!encodedCredentials) {\r\n      return null;\r\n    }\r\n\r\n    // de-obfuscate the credentials using a simple base-64 encoding\r\n    // NOTE: This is NOT intended to be a full-blown security\r\n    //       encryption, rather simply prevent casual exposure to\r\n    //       sensitive data via browser dev tools.\r\n    var clearStr = encodedCredentials;\r\n    if (window.btoa) {\r\n      try {\r\n        clearStr = window.atob(encodedCredentials);\r\n      }\r\n      catch(err) {\r\n        // report unexpected error to user\r\n        // ... can receive error when stored credentials are not obfuscated\r\n        //     because of older software release\r\n        err.defineAttemptingToMsg('de-obfuscate stored credentials');\r\n        discloseError({err});\r\n\r\n        // simply no-op (pretending that credentials were never stored)\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // extract email/pass from single resource\r\n    const [email, pass] = clearStr.split(credentialsSeparator);\r\n\r\n    // package result in credentials object\r\n    return {\r\n      email,\r\n      pass,\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  //****************************************************************************\r\n  //*** Expose Device Location\r\n  //****************************************************************************\r\n\r\n  /**\r\n   * Return the current device location asynchronously (via a promise).\r\n   * \r\n   * NOTE: This service method can be mocked via: featureFlags.mockGPS\r\n   *\r\n   * @returns {Promise} the current device location {lat, lng}\r\n   */\r\n  getCurPos() {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      //?? need a real production implementation\r\n      //?Permissions.askAsync(Permissions.LOCATION)\r\n      //?           .then( ({status}) => {\r\n      //?\r\n      //?             // Device LOCATION permission denied\r\n      //?             if (status !== 'granted') {\r\n      //?               return reject(\r\n      //?                 new Error(`Device LOCATION permission denied, status: ${status}`)\r\n      //?                   .defineClientMsg('No access to device location')\r\n      //?                   .defineAttemptingToMsg('obtain current position')\r\n      //?               );\r\n      //?             }\r\n      //?\r\n      //?             // obtain device geo location\r\n      //?             Location.getCurrentPositionAsync({})\r\n      //?                     .then( (location) => {\r\n      //?                       // console.log(`xx Obtained Device Location: `, location);\r\n      //?                       // Obtained Device Location: {\r\n      //?                       //   \"coords\": {\r\n      //?                       //     \"accuracy\":   50,\r\n      //?                       //     \"altitude\":   0,\r\n      //?                       //     \"heading\":    0,\r\n      //?                       //     \"latitude\":   38.7657446, // of interest\r\n      //?                       //     \"longitude\": -89.9923039, // of interest\r\n      //?                       //     \"speed\":      0,\r\n      //?                       //   },\r\n      //?                       //   \"mocked\":    false,\r\n      //?                       //   \"timestamp\": 1507050033634,\r\n      //?                       // }\r\n      //?\r\n      //?                       // communicate device location\r\n      //?                       return resolve({lat: location.coords.latitude, \r\n      //?                                       lng: location.coords.longitude});\r\n      //?                     })\r\n      //?                     .catch( err => {\r\n      //?                       return reject(err.defineClientMsg('Could not obtain device location'));\r\n      //?                     });\r\n      //?           })\r\n      //?\r\n      //?           .catch( err => {\r\n      //?             return reject(err.defineAttemptingToMsg('obtain current position'));\r\n      //?           });\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n// conditionally mock getCurPos(), as directed by featureFlags\r\nfunction mock_getCurPos_asNeeded(deviceService) {\r\n\r\n  if (featureFlags.mockGPS) { // ... if requested by featureFlags\r\n\r\n    const GlenCarbonIL = {lat: 38.752209, lng: -89.986610};\r\n    const defaultLoc   = GlenCarbonIL;\r\n    const mockLoc      = featureFlags.mockGPS.lat ? featureFlags.mockGPS : defaultLoc;\r\n\r\n    deviceService.getCurPos = () => { // override method with our mock\r\n      // console.log(`xx DeviceService.getCurPos() request ... mocked to: `, mockLoc);\r\n      return new Promise( (resolve, reject) => {\r\n        //setTimeout(() => { // TEMPORARY: for testing delay just a bit\r\n\r\n        // TEMPORARY: for testing, simulate error condition\r\n        //            ... NOTE: reject() passes error into .catch(), throw does NOT\r\n        // return reject(new Error('Simulated Error in Expo GPS Location acquisition') );\r\n\r\n        // communicate device location\r\n        return resolve(mockLoc);\r\n        //}, 10000); // TEMPORARY: for testing delay just a bit\r\n      });\r\n    };\r\n  }\r\n\r\n}\r\n\r\n// export our instantiated service directly\r\n// ... because in select cases it is needed early, \r\n//     and therefore imported directly\r\n//     (ex: src/features/device/state.js)\r\nexport default new DeviceService();\r\n\r\n\r\n//***\r\n//*** Abstract the Web Storage API (gracefully no-oping for unsupported browsers)\r\n//***\r\n//***  NOTE 1: This API is synchronous!\r\n//***  NOTE 2: Apparently this API is available on both http (non SSL) as well as https (SSL).\r\n//***\r\n\r\n// feature detection\r\n// ... NOTE: can't just assert window.localStorage exists\r\n//           see: https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\r\nconst _localStorageAvailable = storageAvailable('localStorage');\r\nfunction storageAvailable(type) {\r\n  var storage;\r\n  try {\r\n    storage = window[type];\r\n    var x = '__storage_test__';\r\n    storage.setItem(x, x);\r\n    storage.removeItem(x);\r\n    return true;\r\n  }\r\n  catch(e) {\r\n    return e instanceof DOMException && (\r\n      // everything except Firefox\r\n      e.code === 22 ||\r\n      // Firefox\r\n      e.code === 1014 ||\r\n      // test name field too, because code might not be present\r\n      // everything except Firefox\r\n      e.name === 'QuotaExceededError' ||\r\n      // Firefox\r\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n           // acknowledge QuotaExceededError only if there's something already stored\r\n           (storage && storage.length !== 0);\r\n  }\r\n}\r\n\r\n// log warning when deviceStorage is NOT in affect\r\nif (!_localStorageAvailable) {\r\n  console.warn('***WARNING*** DeviceService feature ... localStorage (Web Storage API) is NOT available in this browser ... all deviceStorage usage will silently no-op!!');\r\n}\r\n\r\n// our localStorage pass-through that gracefully no-ops for unsupported browsers\r\nconst deviceStorage = _localStorageAvailable ? {\r\n  setItem:    (keyName, keyValue) => window.localStorage.setItem(keyName, keyValue),\r\n  getItem:    (keyName)           => window.localStorage.getItem(keyName),\r\n  removeItem: (keyName)           => window.localStorage.removeItem(keyName),\r\n} : {\r\n  setItem:    noOp,\r\n  getItem:    noOp,\r\n  removeItem: noOp,\r\n};\r\n\r\n// TEMP crude test of deviceStorage ... invoke these separately!\r\n// deviceStorage.setItem('WowZeeKey', 'WowZeeValue');\r\n// console.log(`test deviceStorage ... '${deviceStorage.getItem('WowZeeKey')}'`);\r\n","import {combineReducers}  from 'redux';\r\nimport {reducerHash}      from 'astx-redux-util';\r\nimport {slicedReducer}    from 'feature-redux';\r\nimport _device            from './featureName';\r\nimport _deviceAct         from './actions';\r\nimport deviceService      from './deviceService/DeviceService'; // NOTE: Special Case - need deviceService early (import it vs. fassets.deviceService)\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our device.\r\n// ***\r\nconst reducer = slicedReducer(_device, combineReducers({\r\n\r\n  // uiTheme: 'light'/'dark'\r\n  uiTheme: reducerHash({\r\n    [_deviceAct.toggleUITheme]: (state, action) => state==='dark' ? 'light' : 'dark',\r\n  }, deviceService.fetchUITheme() ), // initialState (default to a persistent state)\r\n\r\n  // loc: {lat, lng} ... device GPS location\r\n  loc: reducerHash({\r\n    [_deviceAct.setLoc]: (state, action) => action.loc,\r\n  }, null), // initialState\r\n\r\n}) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                  /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState           = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;      // ... concise alias (used internally)\r\n\r\n                                  /** UI Theme: 'light'/'dark' */\r\nexport const getUITheme         = (appState) => gfs(appState).uiTheme || 'light'; // default to 'light' (on first occurrence -or- deviceStorage() NOT supported)\r\n\r\n                                  /** Device Location: {lat, lng} */\r\nexport const getDeviceLoc       = (appState) => gfs(appState).loc;\r\n","import {createLogic}        from 'redux-logic';\r\nimport _device              from './featureName';\r\nimport _deviceAct           from './actions';\r\nimport {expandWithFassets}  from 'feature-u';\r\n\r\n/**\r\n * Monitor UI Theme changes, persisting the latest theme in our device storage.\r\n */\r\nexport const persistUITheme = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_device}.persistUITheme`,\r\n  type: String(_deviceAct.toggleUITheme),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    fassets.deviceService.storeUITheme( fassets.sel.getUITheme(getState()) );\r\n    done();\r\n  },\r\n\r\n}));\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default expandWithFassets( (fassets) => [\r\n  persistUITheme(fassets),\r\n]);\r\n","import {createFeature}     from 'feature-u';\r\nimport _device             from './featureName';\r\nimport {createBootstrapFn} from '../bootstrap/bootstrapFn';\r\nimport ToggleUITheme       from './comp/ToggleUITheme';\r\nimport _deviceAct          from './actions';\r\nimport reducer,\r\n       {getUITheme,\r\n        getDeviceLoc}      from './state';\r\nimport logic               from './logic';\r\n\r\n// feature: device\r\n//          initialize the device for use by the app (full details in README)\r\nexport default createFeature({\r\n  name: _device,\r\n\r\n  reducer,\r\n  logic,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    // various 'bootstrap.*' resources to initialize\r\n    defineUse: {\r\n      // inject our user-profile menu item to toggle UI Theme ('light'/'dark')\r\n      'AppLayout.UserMenuItem.UIThemeToggle': ToggleUITheme,\r\n\r\n      'bootstrap.location': createBootstrapFn('Waiting for Device Location',\r\n                                              ({dispatch, fassets}) => {\r\n                                                return fassets.deviceService.getCurPos()\r\n                                                              .then( (location) => {\r\n                                                                dispatch( _deviceAct.setLoc(location) );\r\n                                                              })\r\n                                                              .catch( (err) => {\r\n                                                                // perform the fallback location ... Glen Carbon IL\r\n                                                                dispatch( _deviceAct.setLoc({lat: 38.752209, lng: -89.986610}) );\r\n                                              \r\n                                                                // alter the error to be an expected condition (allowing the bootstrap to complete)\r\n                                                                throw err.defineUserMsg('A problem was encountered accessing GPS Location\\n... falling back to our base location (Glen Carbon, IL)');\r\n                                                              })\r\n                                              \r\n                                              }),\r\n    },\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      //*** public selectors ***\r\n\r\n                          // UI Theme: 'light'/'dark'\r\n      'sel.getUITheme':   getUITheme,\r\n\r\n                          // device location {lat, lng}\r\n      'sel.getDeviceLoc': getDeviceLoc,\r\n\r\n    }\r\n  },\r\n\r\n});\r\n","import isFunction  from 'lodash.isfunction';\r\nimport isString    from 'lodash.isstring';\r\nimport verify      from '../../../util/verify';\r\n\r\n/**\r\n * Embellish the supplied function with a `bootstrapWhat` property -\r\n * used by the `bootstrap` feature to set it's status.\r\n *\r\n * A bootstrapFn is required by the `'bootstrap.*'` fassets use\r\n * contract.\r\n * \r\n * @param {string} what - a description of what is being bootstrapped\r\n * (e.g. 'Waiting for bla bla bla').\r\n * \r\n * @param {function} fn - the function to be embellished with the\r\n * `bootstrapWhat` property.  The API of this function is:\r\n *   + fn({getState, dispatch, fassets})): promise - resolving void (promise used for error handling)\r\n *\r\n * @return {bootstrapFn} the supplied fn parameter, embellished with a\r\n * `bootstrapWhat` property.\r\n */\r\nexport function createBootstrapFn(what, fn) {\r\n\r\n  // validate parameters\r\n  const check = verify.prefix('createBootstrapFn() parameter violation: ');\r\n\r\n  check(what,           'what is required');\r\n  check(isString(what), 'what must be a string');\r\n\r\n  check(fn,             'fn is required');\r\n  check(isFunction(fn), 'fn must be a function');\r\n\r\n  // embellish/return the supplied function\r\n  fn.bootstrapWhat = what;\r\n  return fn;\r\n}\r\n\r\n\r\n/**\r\n * Return an indicator as to whether the supplied `ref` parameter is a\r\n * bootstrapFn.\r\n * \r\n * @param {any} ref - the reference item to validate.\r\n *\r\n * @return {boolean} true: if bootstrapFn, false otherwise.\r\n */\r\nexport function isBootstrapFn(ref) {\r\n  return ref && isFunction(ref) && ref.bootstrapWhat;\r\n}\r\n\r\n\r\n/**\r\n * A bootstrapFn validator conforming to feature-u's fassetValidation\r\n * API ... see: https://feature-u.js.org/cur/api.html#fassetValidations\r\n * \r\n * @param {any} fassetsValue - the fassets value to validate.\r\n *\r\n * @return {string} null: valid bootstrapFn -or-\r\n *                  'bootstrapFn': NOT a valid bootstrapFn (used in feature-u Error content).\r\n */\r\nexport function isFassetBootstrapFn(fassetsValue) {\r\n  return isBootstrapFn(fassetsValue) ? null : 'bootstrapFn';\r\n}\r\n\r\n","import {createFeature}  from 'feature-u';\r\nimport deviceService    from './DeviceService';\r\n\r\n// feature: deviceService\r\n//          promotes a simplified abstraction of several device\r\n//          services (both Expo and react-native), through the\r\n//          `deviceService` fassets reference (full details in README)\r\nexport default createFeature({\r\n  name: 'deviceService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      deviceService,\r\n    },\r\n  },\r\n});\r\n","import {reducerHash}  from 'astx-redux-util';\r\nimport {createLogic}  from 'redux-logic';\r\nimport isEqual        from 'lodash.isequal';\r\nimport isString       from 'lodash.isstring';\r\nimport isFunction     from 'lodash.isfunction';\r\nimport verify         from '../verify';\r\n\r\n/**\r\n * Define the characteristics of an Intelligent Form - a reusable forms\r\n * utility that is logic-based (using redux-logic).\r\n * \r\n * A form schema provides the details about the form fields (field names,\r\n * labels, validation, etc.).  This schema is driven by Yup (a\r\n * light-weight Joi), so it is declarative and dead simple!\r\n * \r\n * Complete aspects of the form is auto generated, including actions,\r\n * logic, and reducers.  These auto-generated items implement the hard\r\n * work related to dynamically determining when field validation should\r\n * be exposed to the user (based on user touches, and form submission).\r\n * \r\n * **Bottom line**: iForms promotes **painless re-usability!** As a\r\n * **bonus**, it is logic-based, so it is **extremely simple to inject\r\n * **app-specific logic** to manipulate various business-related\r\n * **items.\r\n *\r\n *\r\n * Form Input/Output Boundaries (via App Domains)\r\n * ==============================================\r\n *\r\n * When a form is initiated, the `open` action is optionally\r\n * supplied a domain object, to initialize the form (when not\r\n * supplied all form fields start out as empty strings).\r\n *\r\n * We use the term \"domain\" in a generic way, that can\r\n * manifest itself in a variety of different things.  It can\r\n * be a real application domain object (say from an API\r\n * call), or another part of your state tree, or any\r\n * number of other things.\r\n *\r\n * Likewise, when the form is processed (via the `process`\r\n * action), the form values will be mapped back to the domain\r\n * representation (retained in the `process` action).\r\n *\r\n * This makes it convenient for your logic to operate using\r\n * app-specific structures.\r\n *\r\n * You can easily define the mapping between your domain and the form\r\n * values structure, through the optional\r\n * mapDomain2Form/mapPropsToValues parameters.  By default (when not\r\n * supplied), the domain structure is assumed to be \"one in the same\"\r\n * as the form values structure (through a straight mapping of the\r\n * well known iForm fields).\r\n *\r\n * @param {string} namedArgs.formDesc a human-interpretable description for\r\n * this form (ex: 'Sign In').\r\n *\r\n * @param {ObjectSchema} namedArgs.formSchema the Yup Schema object defining\r\n * form fields, labels, and validation characteristics.\r\n *\r\n * @param {function} namedArgs.formActionsAccessor an accessor\r\n * function that promotes our specific formActions.  A function is\r\n * used to avoid cyclic dependencies in the startup bootstrap process\r\n * (because BOTH actions and IFormMeta instances are created in-line).\r\n * API: () => formActions\r\n *\r\n * @param {function} namedArgs.formStateSelector a selector function\r\n * that promotes our specific formState, given the top-level appState.\r\n * API: (appState) => formState\r\n *\r\n * @param {function} [namedArgs.mapDomain2Form] optionally define a\r\n * mapping between an app domain object and the form values (employed\r\n * through the `open` action).  When not specified, a straight mapping\r\n * of any iForm fields is used.\r\n * API: (domain) => values\r\n *\r\n * EX:\r\n * ```\r\n *   mapDomain2Form: (domain) => ({\r\n *     id:        domain.id,\r\n *     email:     domain.email,\r\n *     firstName: domain.name.first,\r\n *     lastName:  domain.name.last\r\n *   })\r\n * ```\r\n *\r\n * @param {function} [namedArgs.mapForm2Domain] optionally define a\r\n * mapping between form values and the app domain object (employed\r\n * through the `process` action).  When not specified, a straight\r\n * mapping of the iForm values is used (i.e. domain is same as\r\n * values).\r\n * API: (castValues) => domain // NOTE: castValues have been \"cast\" to the appropriate type\r\n *\r\n * EX:\r\n * ```\r\n *   mapForm2Domain: (castValues) => ({\r\n *     id:       castValues.id,\r\n *     email:    castValues.email,\r\n *     name:  {\r\n *       first:  castValues.firstName,\r\n *       last:   castValues.lastName\r\n *     }\r\n *   })\r\n * ```\r\n *\r\n * @return {Object} IFormMeta object exposing various aspects of an\r\n * Intelligent Form ...\r\n * ```\r\n *  {\r\n *    registrar: { // auto-generated items to be externally registered\r\n *      // iForm action creators to be injected into action-u generateActions()\r\n *      formActionGenesis([appInjectedFormActions]): ActionGenesis\r\n *      \r\n *      // iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n *      formLogic(): logic[]\r\n *      \r\n *      // iForm reducer to be registered in the redux state management process\r\n *      formReducer(): function\r\n *    }\r\n * \r\n *    // the selector that promotes self's specific formState, given the top-level appState\r\n *    formStateSelector(appState): formState\r\n *\r\n *    // create an IForm helper object, providing convenience accessors/handlers, avoiding direct formState interpretation\r\n *    IForm(formState, dispatch): IForm\r\n *  }\r\n * ```\r\n */\r\nexport default function IFormMeta({formDesc,\r\n                                   formSchema,\r\n                                   formActionsAccessor,\r\n                                   formStateSelector,\r\n                                   mapDomain2Form,\r\n                                   mapForm2Domain,\r\n                                   ...unknownArgs}={}) {\r\n\r\n  // ***\r\n  // *** validate parameters\r\n  // ***\r\n\r\n  const check = verify.prefix('IFormMeta() parameter violation: ');\r\n\r\n  check(formDesc,            'formDesc is required');\r\n  check(isString(formDesc),  'invalid formDesc (expecting a string)');\r\n\r\n  check(formSchema,          'formSchema is required');\r\n  check(formSchema.validate, 'invalid formSchema (expecting a Yup Schema)'); // duck type check\r\n\r\n  check(formActionsAccessor,             'formActionsAccessor is required');\r\n  check(isFunction(formActionsAccessor), 'invalid formActionsAccessor (expecting a function)');\r\n\r\n  check(formStateSelector,             'formStateSelector is required');\r\n  check(isFunction(formStateSelector), 'invalid formStateSelector (expecting a function)');\r\n\r\n  const unknownArgKeys = Object.keys(unknownArgs);\r\n  check(unknownArgKeys.length===0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n\r\n\r\n  // ***\r\n  // *** decompose meta info from the supplied Yup Schema (like fieldNames and labels)\r\n  // ***\r\n\r\n  // fieldNames: String[]\r\n  const fieldNames = Object.keys(formSchema.fields);\r\n\r\n  // labels: { ... fallback to fieldName when NO schema label supplied\r\n  //   fieldName1: string,\r\n  //   fieldName2: string\r\n  // }\r\n  const labels = fieldNames.reduce( (labels, fieldName) => {\r\n    labels[fieldName] = formSchema.fields[fieldName].describe().label || fieldName;\r\n    return labels;\r\n  }, {FORM: formDesc}); // initial value contains our formDesc\r\n\r\n\r\n\r\n  // ***\r\n  // *** default domain mapping functions with ones that have knowledge of our contextual fieldNames\r\n  // ***\r\n\r\n  if (!mapDomain2Form) {\r\n    mapDomain2Form = (domain) => {\r\n      return fieldNames.reduce( (values, fieldName) => {\r\n        values[fieldName] = domain[fieldName] || '';\r\n        values[fieldName] = values[fieldName].toString(); // insure string representation\r\n        return values;\r\n      }, {} );\r\n    };\r\n  }\r\n  check(isFunction(mapDomain2Form), 'invalid mapDomain2Form (expecting a function)');\r\n\r\n  if (!mapForm2Domain) {\r\n    mapForm2Domain = (castValues) => castValues;\r\n  }\r\n  check(isFunction(mapForm2Domain), 'invalid mapForm2Domain (expecting a function)');\r\n\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm action creators to be injected into action-u generateActions()\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated action creators required by self's\r\n   * iForm.\r\n   *\r\n   * @param {ActionGenesis} [appInjectedFormActions] optionally\r\n   * specify additional app-specific action creators to supplement the\r\n   * auto-generated formActions.  This is typically used to introduce\r\n   * fail/complete actions that are spawned out of app-specific logic\r\n   * modules.  NOTE: the formAction root can even become an action\r\n   * creator by promoting a top-level actionMeta node in this\r\n   * structure.\r\n   * \r\n   * @return {ActionGenesis} the auto-generated action creators\r\n   * required by self's iForm.  This is an action-u ActionGenesis\r\n   * sub-structure that is to be injected into the action-u\r\n   * generateActions() process.  The following standard iForm actions\r\n   * are defined:\r\n   * ```\r\n   *    ${formActionGenesis}: {\r\n   *      open([domain] [,formMsg])      ... activate the form state, initiating form processing\r\n   *      fieldChanged(fieldName, value) ... maintain controlled field state change (with validation)\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      fieldTouched(fieldName)        ... maintain field touched status, impacting validation dynamic exposure\r\n   *                                         NOTE: IForm logic supplements action with validation msgs\r\n   *      process()                      ... process this form\r\n   *                                         NOTE 1: IForm logic will reject this action, when the form is invalid\r\n   *                                         NOTE 2: IForm logic supplements action with values (of appropriate\r\n   *                                                 data types) and domain (in app-specific structure)\r\n   *        reject(msgs)                 ... reject process action with supplied validation msgs\r\n   *      close()                        ... close this form\r\n   *\r\n   *      ...appSpecificActions()        ... app-specific action creators supplementing the auto-generated formActions\r\n   *    }\r\n   * ```\r\n   */\r\n  function formActionGenesis(appInjectedFormActions={}) {\r\n\r\n    // NOTE: As an optimization, we bypass detailed action creator validation\r\n    //       because it is a controlled invocation (by IForm components).\r\n    //       ... Even though fieldName is in the developer realm, the fieldName is validated by our IFormElm components\r\n    //       ... Here is an example ratify() for the fieldChanged() action creator:\r\n    //             ratify(fieldName, value) {\r\n    //               verify(isString(fieldName), `'${formDesc}' form fieldChanged() action creator ... fieldName param is NOT a string: ${fieldName}`);\r\n    //               verify(labels[fieldName],   `'${formDesc}' form fieldChanged() action creator ... fieldName: '${fieldName}' is NOT one of the expected fields: ${fieldNames}`);\r\n    //               verify(isString(value),     `'${formDesc}' form fieldChanged() action creator ... value param is NOT a string: ${value}`);\r\n    //               return [fieldName, value];\r\n    //             },\r\n\r\n    // define our base auto-generated action creators\r\n    const myFormActions = {\r\n\r\n      open: {         // open([domain] [,formMsg]): Action\r\n                      // > activate the form state, initiating form processing\r\n                      actionMeta: {\r\n                        traits: ['domain', 'formMsg'],\r\n                        ratify: (domain=null, formMsg=null) => [domain, formMsg],\r\n                      },\r\n      },\r\n\r\n      fieldChanged: { // fieldChanged(fieldName, value): Action\r\n                      // > maintain controlled field state change (with validation)\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName', 'value'],\r\n                      },\r\n      },\r\n\r\n      fieldTouched: { // fieldTouched(fieldName): Action\r\n                      // > maintain field touched status, impacting validation dynamic exposure\r\n                      //   NOTE: IForm logic supplements action with validation msgs\r\n                      actionMeta: {\r\n                        traits: ['fieldName'],\r\n                      },\r\n      },\r\n\r\n      process: {      // process(): Action\r\n                      // > process this form\r\n                      //   NOTE 1: IForm logic will reject this action, when the form is invalid\r\n                      //   NOTE 2: IForm logic supplements action with values (of appropriate\r\n                      //           data types) and domain (in app-specific structure)\r\n                      actionMeta: {\r\n                      },\r\n\r\n        reject: {     // reject(msgs): Action\r\n                      // > reject process action with supplied validation msgs\r\n                      actionMeta: {\r\n                        traits: ['msgs'],\r\n                      },\r\n        },\r\n\r\n      },\r\n\r\n      close: {        // close(): Action\r\n                      // > close this form\r\n                      actionMeta: {\r\n                      },\r\n      },\r\n\r\n    };\r\n\r\n    // inject any app-specific actions creators\r\n    const check = verify.prefix('IFormMeta.formActionGenesis(): invalid appInjectedFormActions parameter ... ');\r\n    for (const action in appInjectedFormActions) {\r\n      check(!myFormActions[action], `${action} action is reserved as one of the auto-generated iForm actions.`);\r\n      myFormActions[action] = appInjectedFormActions[action];\r\n    }\r\n\r\n    // beam me up Scotty!\r\n    return myFormActions;\r\n  }\r\n\r\n\r\n  const validationOptions = {\r\n    abortEarly: false, // return ALL errors\r\n  };\r\n\r\n  /**\r\n   * Validate the supplied values against our schema.\r\n   *\r\n   * @param {Object} values the set of values to validate (keyed by\r\n   * fieldName).\r\n   * \r\n   * @return {promise} the async promise that resolves to msgs object\r\n   * (keyed by fieldName) containing validation messages for all\r\n   * fields.\r\n   */\r\n  function asyncValidate(values) {\r\n    return formSchema.validate(values, validationOptions)\r\n    .then( () => ({}) )  // empty msgs\r\n    .catch( yupErrs => { // transform all Yup errors into our msgs\r\n      const msgs = {};\r\n      yupErrs.inner.forEach(yupErr => {\r\n        msgs[yupErr.path] = yupErr.message;\r\n      });\r\n      return msgs;\r\n    });\r\n  }\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm logic modules (providing intelligent validation) to be registered to redux-logic\r\n  // ***\r\n\r\n  /**\r\n   * Promote the redux-logic modules that orchestrates various iForm\r\n   * characteristics, such as validation.\r\n   *\r\n   * @return {logic[]} the redux-logic modules that perform low-level\r\n   * iForm business logic (such as validation).  This should be\r\n   * registered to the app's redux-logic process.\r\n   */\r\n  function formLogic() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // promote our iForm logic[]\r\n    return [\r\n\r\n      createLogic({\r\n        name: `validateFields for '${formDesc}' form`,\r\n        type: [String(formActions.fieldChanged),\r\n               String(formActions.fieldTouched)], // if fields have initial value (i.e. never changed) this will be the first time fields are validated\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform field validation\r\n          // ... fieldChanged action has an updated value in action\r\n          const values = action.type === String(formActions.fieldChanged)\r\n                          ? {...formState.values, [action.fieldName]: action.value}\r\n                          : formState.values;\r\n          asyncValidate(values)\r\n          .then(msgs => {\r\n\r\n            // retain overall form msg if any\r\n            if (formState.msgs.FORM) {\r\n              msgs.FORM = formState.msgs.FORM;\r\n            }\r\n\r\n            // supplement our action with validation msgs\r\n            action.msgs = msgs;\r\n\r\n            // continue processing, supporting field updates, and visualizing any validation errors\r\n            allow(action);\r\n          });\r\n\r\n        },\r\n      }),\r\n\r\n\r\n      createLogic({\r\n        name: `process validation for '${formDesc}' form`,\r\n        type: String(formActions.process),\r\n\r\n        validate({getState, action, api}, allow, reject) {\r\n\r\n          // NOTE: action has: fieldName/value\r\n\r\n          // locate our formState (from our appState)\r\n          const formState = formStateSelector( getState() );\r\n\r\n          // no-op when form is inProcess\r\n          // ... this is a foolproof catch if the UI fails to prevent these actions from firing\r\n          if (formState.inProcess) {\r\n            reject();\r\n            return;\r\n          }\r\n\r\n          // perform validation\r\n          asyncValidate(formState.values)\r\n            .then( msgs => {\r\n\r\n              // reject validation problems (via new action)\r\n              if (Object.keys(msgs).length > 0) {\r\n\r\n                // inject form msg to further highlight validation issues\r\n                msgs.FORM = 'Please resolve the highlighted issues, and try again.';\r\n\r\n                // reject current process action by re-issuing a different process.reject action\r\n                allow( formActions.process.reject(msgs) );\r\n              }\r\n\r\n              // allow clean validation (supplementing action with values/domain)\r\n              else {\r\n\r\n                // supplement our action with values/domain\r\n                const castValues = formSchema.cast(formState.values);\r\n                const domain     = mapForm2Domain(castValues);\r\n                action.values = castValues;\r\n                action.domain = domain;\r\n\r\n                allow(action);\r\n              }\r\n            });\r\n\r\n        },\r\n      }),\r\n\r\n    ];\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define the auto-generated iForm reducer to be registered in the redux state management process\r\n  // ***\r\n\r\n  /**\r\n   * Promote the auto-generated reducer required by self's iForm, that\r\n   * maintains our form's redux state.\r\n   * \r\n   * @return {function} the reducer that maintains our iForm redux\r\n   * state.  This reducer is to be registered in the redux state\r\n   * management process.  The following state shape is maintained:\r\n   * ```\r\n   *    ${formState}: { // ex: appState.auth.signInForm (null for inactive form)\r\n   *\r\n   *      labels: {       // field labels (UI promotion and validation msg content)\r\n   *        FORM:         string, // form desc\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      values: {       // field values\r\n   *        <fieldName1>: string,\r\n   *        <fieldName2>: string,\r\n   *      },\r\n   *\r\n   *      msgs: {          // validation msgs (if any) ... initial: {}\r\n   *        FORM:          string, // msg spanning entire form ... non-exist for valid\r\n   *        <fieldName1>:  string, // non-exist for valid\r\n   *        <fieldName2>:  string, // non-exist for valid\r\n   *      },\r\n   *\r\n   *      validating: {    // demarks which fields are being validated ... based on whether it has been touched by user (internal use only)\r\n   *        FORM:          boolean, // ALL fields validated (takes precedence)\r\n   *        <fieldName1>:  boolean,\r\n   *        <fieldName2>:  boolean,\r\n   *      },\r\n   *\r\n   *      inProcess: boolean, // is form being processed?\r\n   *    }\r\n   * ```\r\n   */\r\n  function formReducer() {\r\n\r\n    const formActions = formActionsAccessor();\r\n\r\n    // generate our reducer function\r\n    const myFormReducer = reducerHash({\r\n\r\n      [formActions.open]: (state, action) => {\r\n        // define our initial form values\r\n        // ... interpret optional action props\r\n        const values = action.domain\r\n                           // ... either from our supplied domain (if any)\r\n                           //     INTERPRETED by mapDomain2Form(), which can be\r\n                           //     either client supplied or our own default\r\n                         ? mapDomain2Form(action.domain)\r\n                           // ... or inject empty string for each field\r\n                           //     NOTE: we prefer to NOT handle this in mapDomain2Form,\r\n                           //           so as to NOT rely on client logic \"to do the right thing\"\r\n                         : fieldNames.reduce( (values, fieldName) => { \r\n                             values[fieldName] = '';\r\n                             return values;\r\n                           }, {});\r\n        // ... insure no miss-matched field introduced in mapDomain2Form()\r\n        //     - comparing our known fields: fieldNames: string[]\r\n        //     - to the generated object:    values:     {field1, field2, etc}\r\n        const normalizedFieldNames = fieldNames.sort();\r\n        const normalizedValueProps = Object.keys(values).sort();\r\n        verify(isEqual(normalizedFieldNames, normalizedValueProps),\r\n               `'${formDesc}' form open reducer ... miss-matched field(s) introduced in app-supplied mapDomain2Form ... generated fields: ${normalizedValueProps} ... expected fields: ${normalizedFieldNames}`);\r\n\r\n        const msgs = {};\r\n        if (action.formMsg) { // ... interpret optional action.formMsg\r\n          msgs.FORM = action.formMsg;\r\n        }\r\n\r\n        // expand a completely new formState\r\n        return {\r\n          labels,\r\n          values,\r\n          msgs,\r\n          validating: {},\r\n          inProcess: false,\r\n        };\r\n      },\r\n\r\n      [formActions.fieldChanged]: (state, action) => {\r\n\r\n        // carve out new container (supporting immutable state)\r\n        const newState = {...state};\r\n\r\n        // merge new field value\r\n        newState.values = {...state.values, [action.fieldName]: action.value};\r\n\r\n        // retain logic-injected validation msgs (within action)\r\n        newState.msgs = action.msgs;\r\n\r\n        // that's all folks\r\n        return newState;\r\n      },\r\n\r\n      [formActions.fieldTouched]: (state, action) => {\r\n        if (state.validating[action.fieldName]) {\r\n          return state; // validating indicator already set\r\n        }\r\n        else {          // set our field validating indicator to true\r\n          const newState      = {...state};\r\n          newState.validating = {...state.validating, [action.fieldName]: true};\r\n          newState.msgs       = action.msgs; // also retain validation logic-injected msgs\r\n          return newState;\r\n        }\r\n      },\r\n\r\n      [formActions.process]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.inProcess  = true; // mark form as being processed\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = {}; // clear validation msgs (form is clean)\r\n        return newState;\r\n      },\r\n\r\n      [formActions.process.reject]: (state, action) => {\r\n        const newState      = {...state};\r\n        newState.validating = {...state.validating, FORM: true}; // mark entire form as being validated\r\n        newState.msgs       = action.msgs; // retain validation logic-injected msgs\r\n        return newState;\r\n      },\r\n\r\n      [formActions.close]: (state, action) => null,\r\n\r\n    }, null); // initialState\r\n\r\n    // promote our iForm reducer function\r\n    return myFormReducer;\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** define our IForm helper object\r\n  // ***\r\n\r\n  /**\r\n   * Create an IForm helper object, providing convenience\r\n   * accessors/handlers, avoiding direct formState interpretation.\r\n   *\r\n   * @param {ReduxState} formState the redux form state supporting\r\n   * self's form.\r\n   *\r\n   * @param {function} dispatch the redux dispatch function, supporting\r\n   * self's handlers.\r\n   * \r\n   * @return {Object} the IForm helper object, with the following API:\r\n   * ```\r\n   * {\r\n   *   // the label of the supplied field (or form when not supplied)\r\n   *   getLabel(fieldName='FORM'): string\r\n   *\r\n   *   // the value of the supplied field (N/A for form)\r\n   *   getValue(fieldName): string\r\n   *\r\n   *   // is supplied field value valid (or form when not supplied\r\n   *   // ... i.e. all fields in form), irrespective to whether errors are\r\n   *   // exposed to the user or not\r\n   *   isValid(fieldName='FORM'): boolean\r\n   * \r\n   *   // the validation msg of supplied field (or form when not supplied)\r\n   *   // irrespective to whether errors are exposed to the user or not\r\n   *   // - undefined/null for valid\r\n   *   getMsg(fieldName='FORM'): string\r\n   * \r\n   *   // the exposed validation msg of supplied field (or form when not\r\n   *   // supplied) - undefined/null for valid.  The exposed msg is tailored \r\n   *   // to whether validation should be exposed to the user or not \r\n   *   // (BASED ON user touches).\r\n   *   getExposedMsg(fieldName='FORM'): string\r\n   *\r\n   *   // Should validation messages be exposed for supplied field (or\r\n   *   // form when not supplied), based on user touches.\r\n   *   // \r\n   *   // This is needed to expose UI success/error icon adornment\r\n   *   // (i.e. no adornment is shown if NOT yet being validated).\r\n   *   //\r\n   *   // NOTE: Form validation (when enabled) takes precedence over\r\n   *   //       individual fields.\r\n   *   isValidationExposed(fieldName='FORM'): boolean\r\n   *\r\n   *   // is form being processed?\r\n   *   inProcess(): boolean\r\n   *\r\n   *   // Service an IForm field value change.\r\n   *   handleFieldChanged(fieldName, value): void\r\n   *\r\n   *   // Service an IForm field touched.\r\n   *   handleFieldTouched(fieldName): void\r\n   *\r\n   *   // Service an IForm process request.\r\n   *   handleProcess(): void\r\n   *\r\n   *   // Service an IForm close request.\r\n   *   handleClose(): void\r\n   * }\r\n   * ```\r\n   */\r\n  function IForm(formState, dispatch) {\r\n\r\n    // validate parameters\r\n    const check = verify.prefix('IFormMeta.IForm() parameter violation: ');\r\n    check(formState,                            'formState is required');\r\n    check(formState.labels,                     'invalid formState - does NOT conform to the IForm state');\r\n    check(formState.labels.FORM===formDesc,     `miss-matched formState - expecting ${formDesc} but received ${formState.labels.FORM}`);\r\n\r\n    check(dispatch,                             'dispatch is required');\r\n    check(isFunction(dispatch),                 'invalid dispatch (expecting a function)');\r\n\r\n\r\n    // formActions required for handler methods (below)\r\n    const formActions = formActionsAccessor();\r\n\r\n\r\n    /**\r\n     * @return {string} the label of the supplied field (or form when\r\n     * not supplied).\r\n     */\r\n    function getLabel(fieldName='FORM') {\r\n      return formState.labels[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} the value of the supplied field (N/A for form).\r\n     */\r\n    function getValue(fieldName) {\r\n      verify(fieldName || fieldName !== 'FORM', `IFormMeta.IForm.getValue() unsupported fieldName: ${fieldName}`);\r\n      return formState.values[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is supplied field value valid (or form when not supplied\r\n     * ... i.e. all fields in form), irrespective to whether errors are\r\n     * exposed to the user or not.\r\n     * @return {boolean} \r\n     */\r\n    function isValid(fieldName='FORM') {\r\n      return fieldName==='FORM'\r\n               ? Object.keys(formState.msgs).length === 0\r\n               : formState.msgs[fieldName] ? false : true; // eslint-disable-line no-unneeded-ternary\r\n    }\r\n\r\n    /**\r\n     * @return {string} the validation msg of supplied field (or form\r\n     * when not supplied) irrespective to whether errors are exposed\r\n     * to the user or not - undefined/null for valid\r\n     */\r\n    function getMsg(fieldName='FORM') {\r\n      return formState.msgs[fieldName];\r\n    }\r\n\r\n    /**\r\n     * @return {string} exposed validation msg of supplied field (or\r\n     * form when not supplied) - undefined/null for valid.  The\r\n     * exposed msg is tailored to whether validation should be exposed\r\n     * to the user or not (BASED ON user touches).\r\n     */\r\n    function getExposedMsg(fieldName='FORM') {\r\n      return isValidationExposed(fieldName) ? formState.msgs[fieldName] : null;\r\n    }\r\n\r\n    /**\r\n     * Should validation messages be exposed for supplied field (or\r\n     * form when not supplied), based on user touches.\r\n     * \r\n     * This is needed to expose UI success/error icon adornment\r\n     * (i.e. no adornment is shown if NOT yet being validated).\r\n     *\r\n     * NOTE: Form validation (when enabled) takes precedence over\r\n     *       individual fields.\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function isValidationExposed(fieldName='FORM') {\r\n      return formState.validating.FORM || formState.validating[fieldName];\r\n    }\r\n\r\n    /**\r\n     * Is form being processed?\r\n     *\r\n     * @return {boolean} \r\n     */\r\n    function inProcess() {\r\n      return formState.inProcess;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Service an IForm field value change.\r\n     */\r\n    function handleFieldChanged(fieldName, value) {\r\n      dispatch( formActions.fieldChanged(fieldName, value) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm field touch.\r\n     */\r\n    function handleFieldTouched(fieldName) {\r\n      dispatch( formActions.fieldTouched(fieldName) );\r\n    }\r\n\r\n    /**\r\n     * Service an IForm process request.\r\n     */\r\n    function handleProcess(event) {\r\n      dispatch( formActions.process() );\r\n\r\n      // for <form onSubmit> handlers, prevent anything from being submitted to the server\r\n      // ... old technique would be to \"return false\" from the handler, \r\n      //     but this is no longer supported in react\r\n      if (event) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Service an IForm close request.\r\n     */\r\n    function handleClose() {\r\n      dispatch( formActions.close() );\r\n    }\r\n\r\n    // promote our IForm helper object\r\n    return {\r\n      getLabel,\r\n      getValue,\r\n      isValid,\r\n      getMsg,\r\n      getExposedMsg,\r\n      isValidationExposed,\r\n      inProcess,\r\n      handleFieldChanged,\r\n      handleFieldTouched,\r\n      handleProcess,\r\n      handleClose,\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  // ***\r\n  // *** publicly expose needed IFormMeta characteristics\r\n  // ***\r\n\r\n  return {\r\n    registrar: {\r\n      formActionGenesis,\r\n      formLogic,\r\n      formReducer,\r\n    },\r\n    formStateSelector,\r\n    IForm,\r\n  };\r\n\r\n}\r\n","import verify from '../../../util/verify';\r\n\r\n/**\r\n * The User object representing the active user within an application,\r\n * holding their identity, authorization status, and profile.\r\n *\r\n * NOTE: Using the default constructor, a User object can always be\r\n *       made available, even when no user is signed in.\r\n *       In this case:\r\n *       - all properties will be null (or false), and\r\n *       - more importantly the getAuthStatus() and isXyz() methods will\r\n *         correctly represent the 'signedOut' status.\r\n */\r\nexport default class User {\r\n\r\n  /**\r\n   * Instantiate a User object with the supplied named parameters.\r\n   *\r\n   * See NOTE (above) in regard to the default constructor.\r\n   *\r\n   * @param {string} name the user's name (e.g. 'John Doe')\r\n   *\r\n   * @param {string} email the user's email (used as an identifier for\r\n   * authorization credentials).  A null value indicates NO user is\r\n   * signed in.\r\n   *\r\n   * @param {boolean} emailVerified indicates whether the user's\r\n   * email been verified (used in authorization credentials).\r\n   *\r\n   * @param {string} pool the user's eatery pool identifier\r\n   * (e.g. 'DateNightPool').  This identifies the set of pool eateries\r\n   * the user has to choose from, and can be shared with other users.\r\n   */\r\n                                    // INTERNAL NOTES\r\n                                    // =================\r\n  constructor({name=null,           // via app's DB userProfile.name\r\n               email=null,          // via firebase.User.email\r\n               emailVerified=false, // via firebase.User.emailVerified\r\n               pool=null,           // via app's DB userProfile.pool\r\n             //uid=null,            // via firebase.User.uid             user's unique id hash ... CURRENTLY NO NEED for this (internally available via firebase.auth().currentUser.uid)\r\n               ...unknownArgs}={}) {\r\n\r\n    // validate constructor parameters\r\n    const check = verify.prefix('User() constructor parameter violation: ')\r\n    // ... unrecognized named parameter\r\n    const unknownArgKeys = Object.keys(unknownArgs);\r\n    check(unknownArgKeys.length === 0,  `unrecognized named parameter(s): ${unknownArgKeys}`);\r\n    // ... unrecognized positional parameter (NOTE: when defaulting entire struct, arguments.length is 0)\r\n    check(arguments.length === 0 || arguments.length === 1, 'unrecognized positional parameters (only named parameters can be specified)');\r\n\r\n    // retain supplied state in self\r\n    this.name          = name;\r\n    this.email         = email;\r\n    this.emailVerified = emailVerified;\r\n    this.pool          = pool;\r\n  }\r\n\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed out\r\n   * (i.e. there is no user).\r\n   */\r\n  isUserSignedOut() {\r\n    return this.email === null;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -AND-\r\n   * their email has been verified.\r\n   */\r\n  isUserSignedIn() {\r\n    return this.email !== null && this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return an indicator as to whether the user is signed in -HOWEVER-\r\n   * their email needs verification.\r\n   */\r\n  isUserSignedInUnverified() {\r\n    return this.email !== null && !this.emailVerified;\r\n  }\r\n\r\n  /**\r\n   * Return self's authorization status string, representing all\r\n   * permutations of the isXyx() methods:\r\n   * \r\n   * - 'signedOut':          the user is signed out (i.e. there is no user)\r\n   * - 'signedIn':           the user is signed in -AND- their email has been verified.\r\n   * - 'signedInUnverified': the user is signed in -HOWEVER- their email needs verification.\r\n   */\r\n  getAuthStatus() {\r\n    if (this.email) {\r\n      return this.emailVerified ? 'signedIn' : 'signedInUnverified';\r\n    }\r\n    else {\r\n      return 'signedOut';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serialize self into a pure data structure (void of any methods),\r\n   * so as to be serializable.\r\n   *\r\n   * This is useful in state managers (such as redux) where state must\r\n   * be serializable.\r\n   *\r\n   * The returned structure is suitable to be used to re-instantiate a\r\n   * User object, gaining the benefit of it's value-added methods.\r\n   * \r\n   * @returns {struct} a pure data structure of self, suitable to\r\n   * re-instantiate a User object.\r\n   */\r\n  toStruct() {\r\n    return {\r\n      name:          this.name,\r\n      email:         this.email,\r\n      emailVerified: this.emailVerified,\r\n      pool:          this.pool,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Clone self into a new User object\r\n   * \r\n   * @returns {User} the new cloned User object.\r\n   */\r\n  clone() {\r\n    return new User(this.toStruct());\r\n  }\r\n\r\n};\r\n","import {combineReducers}    from 'redux';\r\nimport {reducerHash}        from 'astx-redux-util';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport {slicedReducer}      from 'feature-redux';\r\nimport {createSelector}     from 'reselect';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport _authAct             from './actions';\r\nimport User                 from './authService/User';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our authorization process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is NOT only used for fassets injection,\r\n//       but ALSO to delay expansion (avoiding circular dependencies\r\n//       in selector access from signInFormMeta.js)\r\nconst reducer = slicedReducer(_auth, expandWithFassets( (fassets) => combineReducers({\r\n\r\n  // the current User object (serialized to state only) ... can represent empty User - NOT signed in\r\n  user: reducerHash({\r\n    [_authAct.signIn.complete]:           (state, action) => action.user.toStruct(),\r\n    [_authAct.signIn.checkEmailVerified]: (state, action) => action.user.toStruct(), // containing updated User.emailVerified\r\n    [_authAct.userProfileChanged]:        (state, action) => action.user.toStruct(), // pulling in new profile info\r\n    [_authAct.signOut]:                   (state, action) => new User().toStruct(),  // an empty User - NOT signed in\r\n  }, new User().toStruct()), // initialState (an empty User - NOT signed in)\r\n\r\n  // SignIn iForm's reducer ... null indicates form is inactive\r\n  signInForm: signInFormMeta.registrar.formReducer(),\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n      // Our feature state root (via slicedReducer as a single-source-of-truth)\r\nconst getFeatureState  = (appState) => reducer.getSlicedState(appState);\r\nconst gfs              = getFeatureState;             // ... concise alias (used internally)\r\n\r\n\r\n             // the current User object (with all it's value-added methods)\r\n             //   LIKE: user.getAuthStatus()\r\n             //         user.isUserSignedOut()\r\n             //         user.isUserSignedIn()\r\n             //         user.isUserSignedInUnverified()\r\n             //         user.name\r\n             //         user.email\r\n             //         user.pool\r\n             //   NOTE: will always return a User object (may represent a no-user object that: isSignedOut())\r\n       const curUserStruct = (appState) => gfs(appState).user;\r\nexport const curUser       = createSelector(curUserStruct,\r\n                                            (curUserStruct) => new User(curUserStruct));\r\n\r\n             // SignIn form  related\r\nexport const isSignInFormActive = (appState) => gfs(appState).signInForm ? true : false;\r\nexport const getUserSignInForm  = (appState) => gfs(appState).signInForm;\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'auth';\r\n","import * as Yup      from 'yup';\r\nimport IFormMeta     from '../../util/iForms/IFormMeta';\r\nimport _authAct      from './actions';\r\nimport * as _authSel from './state';\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Sign In',\r\n  formSchema: Yup.object().shape({\r\n    email:    Yup.string().required().email()        .label('Email'),\r\n    pass:     Yup.string().required().min(6).max(9)  .label('Password'), // TODO: add password regex check: https://dzone.com/articles/use-regex-test-password\r\n  }),\r\n  formActionsAccessor: ()         => _authAct.signIn,\r\n  formStateSelector:   (appState) => _authSel.getUserSignInForm(appState),\r\n});\r\n","import {generateActions}    from 'action-u';\r\nimport _auth                from './featureName';\r\nimport signInFormMeta       from './signInFormMeta';\r\n\r\nexport default generateActions.root({\r\n  [_auth]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    autoSignIn: {  // actions.autoSignIn(): Action\r\n                   // > autoSignIn our authorization process\r\n                   actionMeta: {},\r\n\r\n      haveDeviceCredentials: {  // actions.autoSignIn.haveDeviceCredentials(credentials): Action\r\n                                // > credentials were stored on our device\r\n                                actionMeta: {\r\n                                  traits: ['credentials'],\r\n                                },\r\n      },\r\n\r\n      noDeviceCredentials: {  // actions.autoSignIn.noDeviceCredentials(): Action\r\n                              // > NO credentials were stored on our device\r\n                              actionMeta: {},\r\n      },\r\n    },\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    signIn: signInFormMeta.registrar.formActionGenesis({\r\n    \r\n      // along with additional app-specific actions:\r\n    \r\n                  // actions.signIn(email, pass): Action\r\n                  // > SignIn with supplied email/pass\r\n                  actionMeta: {\r\n                    traits: ['email', 'pass'],\r\n                  },\r\n    \r\n      complete: { // actions.signIn.complete(user): Action\r\n                  // > signIn completed successfully\r\n                  actionMeta: {\r\n                    traits: ['user'],\r\n                  },\r\n      },\r\n    \r\n      checkEmailVerified: { // actions.signIn.checkEmailVerified(): Action\r\n                            // > check to see if account email has been verified\r\n                            actionMeta: {}, // NOTE: logic suplements the action with the current user\r\n      },\r\n    \r\n      resendEmailVerification: { // actions.signIn.resendEmailVerification(): Action\r\n                                 // > resend email verificaion\r\n                                 //   NOTE: logic supplements action with most up-to-date user\r\n                                 actionMeta: {},\r\n      },\r\n    \r\n    }),\r\n\r\n    signOut: { // actions.signOut(): Action\r\n               // > sign out active user\r\n               actionMeta: {},\r\n    },\r\n\r\n    userProfileChanged: { // actions.userProfileChanged(user): Action\r\n                          // > user profile changed\r\n                          actionMeta: {\r\n                            traits: ['user'],\r\n                          },\r\n    },\r\n\r\n  },\r\n\r\n});\r\n","import {createLogic}        from 'redux-logic';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport _auth                from './featureName';\r\nimport _authAct             from './actions';\r\nimport signInFormMeta       from './signInFormMeta';\r\nimport discloseError        from '../../util/discloseError';\r\nimport {toast}              from '../../util/notify';\r\n\r\n/**\r\n * Start our authorization process, once the bootstrap initialization process is complete.\r\n * \r\n * NOTE: We could auto-start our auth process (via feature-u app life cycle handlers),\r\n *       except our downstream processes are dependent on device.loc, so we wait and\r\n *       trigger the process here.\r\n */\r\nexport const startAuthorization = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name: `${_auth}.startAuthorization`,\r\n  type: String(fassets.actions.bootstrapComplete),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.autoSignIn() );\r\n    done();\r\n  },\r\n}));\r\n\r\n\r\n/**\r\n * Monitor authorization startup, fetching credentials stored on device (if any).\r\n */\r\nexport const checkDeviceCredentials = createLogic({\r\n\r\n  name: `${_auth}.checkDeviceCredentials`,\r\n  type: String(_authAct.autoSignIn),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    const credentials = fassets.deviceService.fetchCredentials();\r\n    if (credentials) {\r\n      dispatch( _authAct.autoSignIn.haveDeviceCredentials(credentials) );\r\n    }\r\n    else {\r\n      dispatch( _authAct.autoSignIn.noDeviceCredentials() );\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Auto SignIn, when device credentials exist.\r\n */\r\nexport const autoSignIn = createLogic({\r\n\r\n  name: `${_auth}.autoSignIn`,\r\n  type: String(_authAct.autoSignIn.haveDeviceCredentials),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n    const {email, pass} = action.credentials;\r\n    dispatch( _authAct.signIn(email, pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Manual SignIn, when NO device credentials exist, or user signs out.\r\n */\r\nexport const manualSignIn = createLogic({\r\n\r\n  name: `${_auth}.manualSignIn'`,\r\n  type: [\r\n    String(_authAct.autoSignIn.noDeviceCredentials),\r\n    String(_authAct.signOut),\r\n  ],\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn.open() );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Interactive SignIn form processor.\r\n */\r\nexport const processSignIn = createLogic({\r\n\r\n  name: `${_auth}.processSignIn`,\r\n  type: String(_authAct.signIn.process),\r\n  \r\n  process({getState, action}, dispatch, done) {\r\n    dispatch( _authAct.signIn(action.values.email, action.values.pass) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn logic.\r\n */\r\nexport const signIn = createLogic({\r\n\r\n  name: `${_auth}.signIn`,\r\n  type: String(_authAct.signIn),\r\n  warnTimeout: 0, // long-running logic ... UNFORTUNATELY signin using our firebase service is sometimes EXCRUCIATINGLY SLOW!\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    \r\n    fassets.authService.signIn(action.email, action.pass)\r\n\r\n           .then( user => { // user has successfully signed in\r\n\r\n             // retain these credentials on our device (to streamline subsequent app launch)\r\n             fassets.deviceService.storeCredentials(action.email, action.pass);\r\n\r\n             // communicate a new user is in town\r\n             dispatch( _authAct.signIn.complete(user) );\r\n\r\n             done();\r\n           })\r\n\r\n           .catch( (err) => {\r\n             discloseError({err,\r\n                            showUser: err.isUnexpected()}); // expected errors are shown to the user via the re-direction to the signIn screen (see next step)\r\n\r\n             // re-direct to SignIn form, prepopulated with appropriate msg\r\n             dispatch( _authAct.signIn.open(action, err.formatUserMsg()) ); // NOTE: action is a cheap shortcut to domain (contains email/pass) ... pre-populating sign-in form with last user input\r\n\r\n             done();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Supplement signIn complete action by triggering profile.changed action,\r\n * causing eateries view to populate.\r\n */\r\nexport const supplementSignInComplete = createLogic({\r\n\r\n  name: `${_auth}.supplementSignInComplete`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // NOTE: Currently, this is the only place where userProfileChanged is dispatched.\r\n    //       It stimulates the eateries view to get the ball rolling (displaying the correct pool)\r\n    //       In the future, userProfileChanged is dispatched dynamically, when the user has the ability to change their pool.\r\n    dispatch( _authAct.userProfileChanged(action.user) ); // use the same user from our our monitored action!!\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignIn cleanup.\r\n */\r\nexport const signInCleanup = createLogic({\r\n\r\n  name: `${_auth}.signInCleanup`,\r\n  type: String(_authAct.signIn.complete),\r\n\r\n  process({getState, action}, dispatch, done) {\r\n    // console.log(`xx logic ${featureName}.signInCleanup: user.status: '${sel.curUser(getState()).getAuthStatus()}'`);\r\n    dispatch( _authAct.signIn.close() ); // we are done with our signIn form\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Check to see if account email has been verified.\r\n */\r\nexport const checkEmailVerified = createLogic({\r\n\r\n  name: `${_auth}.checkEmailVerified`,\r\n  type: String(_authAct.signIn.checkEmailVerified),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    toast({ msg:`verifying your email: ${fassets.sel.curUser(getState()).email}` });\r\n    // fetch the most up-to-date user\r\n    fassets.authService.refreshUser()\r\n           .then( user => {\r\n             // supplement action with the most up-to-date user\r\n             action.user = user;\r\n             next(action);\r\n           })\r\n           .catch( err => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n\r\n             // nix the entire action\r\n             reject();\r\n           });\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Resend Email Verification.\r\n */\r\nexport const resendEmailVerification = createLogic({\r\n\r\n  name: `${_auth}.resendEmailVerification`,\r\n  type: String(_authAct.signIn.resendEmailVerification),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    toast({ msg:`resending email to: ${fassets.sel.curUser(getState()).email}` });\r\n    fassets.authService.resendEmailVerification()\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * SignOut logic.\r\n */\r\nexport const signOut = createLogic({\r\n\r\n  name: `${_auth}.signOut`,\r\n  type: String(_authAct.signOut),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    fassets.authService.signOut()\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    fassets.deviceService.removeCredentials();\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default expandWithFassets( (fassets) => [\r\n\r\n  startAuthorization(fassets),\r\n\r\n  checkDeviceCredentials,\r\n  autoSignIn,\r\n  manualSignIn,\r\n\r\n  // signIn logic (NOTE: form logic just be registered BEFORE app-specific logic)\r\n  ...signInFormMeta.registrar.formLogic(), // inject the standard SignIn form-based logic modules\r\n  processSignIn,\r\n\r\n  signIn,\r\n  supplementSignInComplete,\r\n  signInCleanup,\r\n\r\n  checkEmailVerified,\r\n  resendEmailVerification,\r\n\r\n  signOut,\r\n]);\r\n","import React  from 'react';\r\nimport Fade   from '@material-ui/core/Fade';\r\nimport Slide  from '@material-ui/core/Slide';\r\nimport Zoom   from '@material-ui/core/Zoom';\r\n\r\n//***\r\n//*** Common Transition components used throughout our app :-)\r\n//***\r\n\r\nexport function TransitionFade(props) {\r\n  return <Fade timeout=\"1000\" {...props} />;\r\n}\r\n\r\nexport function TransitionSlide(props) {\r\n  return <Slide direction=\"right\" timeout=\"1000\" {...props} />;\r\n}\r\n\r\nexport function TransitionZoom(props) {\r\n  return <Zoom timeout=\"1000\" {...props} />;\r\n}\r\n","import React             from 'react';\r\n\r\nimport withState         from '../../../util/withState';\r\nimport {withStyles}      from '@material-ui/core/styles';\r\nimport withMobileDialog  from '@material-ui/core/withMobileDialog';\r\n\r\nimport _authAct          from '../actions';\r\nimport * as _authSel     from '../state';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport CheckIcon         from '@material-ui/icons/Check';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport MailIcon          from '@material-ui/icons/Mail';\r\nimport SignOutIcon       from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from '../../../util/Transition';\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n/**\r\n * SignInVerifyScreen requesting email verification completion.\r\n */\r\nfunction SignInVerifyScreen({email, checkEmailVerified, resendEmailVerification, signOut, fullScreen, classes}) {\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <CenterItems>\r\n          <Avatar className={classes.lockAvatar}>\r\n            <LockIcon/>\r\n          </Avatar>\r\n        </CenterItems>\r\n        <CenterItems>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Sign In Verification\r\n          </Typography>\r\n        </CenterItems>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Your account email has not been verified.\r\n        </DialogContentText>\r\n\r\n        <DialogContentText className={classes.entry}>\r\n          Please follow the instructions from the email sent to: {email}\r\n        </DialogContentText>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Typography variant=\"body2\">\r\n              ... once completed:\r\n            </Typography>\r\n          </CenterItems>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={checkEmailVerified}>\r\n              <CheckIcon className={classes.icon}/>\r\n              Continue\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={resendEmailVerification}>\r\n              <MailIcon className={classes.icon}/>\r\n              Resend Email\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n        <div className={classes.entry}>\r\n          <CenterItems>\r\n            <Button variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={signOut}>\r\n              <SignOutIcon className={classes.icon}/>\r\n              Sign Out\r\n            </Button>\r\n          </CenterItems>\r\n        </div>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst SignInVerifyScreenWithState = withState({\r\n  component: SignInVerifyScreen,\r\n  mapStateToProps(appState) {\r\n    return {\r\n      email: _authSel.curUser(appState).email,\r\n    };\r\n  },\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      checkEmailVerified() {\r\n        dispatch( _authAct.signIn.checkEmailVerified() );\r\n      },\r\n      resendEmailVerification() {\r\n        dispatch( _authAct.signIn.resendEmailVerification() );\r\n      },\r\n      signOut() {\r\n        dispatch( _authAct.signOut() );\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nconst SignInVerifyScreenWithStyles = withStyles(styles)(SignInVerifyScreenWithState);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SignInVerifyScreenWithStyles);\r\n","import React        from 'react';\r\nimport TextField    from '@material-ui/core/TextField';\r\nimport PropTypes    from 'prop-types';\r\nimport verify       from '../../verify';\r\n\r\n/**\r\n * An IForm text input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * Usage:\r\n *   <ITextField fieldName=\"myFieldName\" ... the IFormMeta fieldName\r\n *               iForm={IForm}\r\n *               ... extra props from material-ui TextField comp\r\n *                   EX:\r\n *                   autoFocus\r\n *                   type=\"number\"\r\n *                   helperText=\"... help text here\"/>\r\n *                   ... etc.\r\n */\r\nexport default function ITextField({fieldName, iForm, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<ITextField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  ['label', 'value', 'disabled', 'onChange', 'onBlur', 'error'].forEach(\r\n    (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  );\r\n\r\n  // compute field success/error adornments\r\n  // ... dynamically exposed based on user field touches\r\n  const managedProps = {};\r\n  if (iForm.isValidationExposed(fieldName)) {\r\n    const fieldMsg = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n    if (fieldMsg) { // error adornment\r\n      managedProps.error      = true;     // mark field with error color\r\n      managedProps.helperText = fieldMsg; // overwrite helperText to hold the field error message\r\n    }\r\n  }\r\n\r\n  // emit an ITextField that is auto-wired to the supplied iForm\r\n  return (\r\n    <TextField label={fieldLabel}\r\n               value={iForm.getValue(fieldName)}\r\n               disabled={iForm.inProcess()}\r\n               onChange={(event) => iForm.handleFieldChanged(fieldName, event.target.value)}\r\n               onBlur={() => iForm.handleFieldTouched(fieldName)}\r\n               {...extraProps}\r\n               {...managedProps}/>\r\n  );\r\n}\r\n\r\nITextField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n};\r\n","import React             from 'react';\r\n\r\nimport withState         from '../../../util/withState';\r\nimport {withStyles}      from '@material-ui/core/styles';\r\nimport withMobileDialog  from '@material-ui/core/withMobileDialog';\r\n\r\nimport signInFormMeta    from '../signInFormMeta';\r\nimport ITextField        from '../../../util/iForms/comp/ITextField';\r\nimport {toast}           from '../../../util/notify';\r\n\r\nimport Avatar            from '@material-ui/core/Avatar';\r\nimport Button            from '@material-ui/core/Button';\r\nimport Dialog            from '@material-ui/core/Dialog';\r\nimport DialogContent     from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle       from '@material-ui/core/DialogTitle';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport Grid              from '@material-ui/core/Grid';\r\nimport InProgress        from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport LockIcon          from '@material-ui/icons/LockOpen';\r\nimport SignInIcon        from '@material-ui/icons/ExitToApp';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport {TransitionZoom}  from '../../../util/Transition';\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right (leave this even though we do NOT have a close in this dialog)\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  lockAvatar: {\r\n    margin:          theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  // our fieldset is strictly strictly to disable all inputs/submit when form is in-process\r\n  invisible: {\r\n    border:  '0 none',\r\n    margin:  0,\r\n    padding: 0,\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  \r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * SignInScreen: gather user sign-in credentials.\r\n */\r\nfunction SignInScreen({iForm, fullScreen, classes}) {\r\n\r\n  const formLabel     = iForm.getLabel();\r\n  const formInProcess = iForm.inProcess();\r\n  const formErrMsg    = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery Nod\r\n        </Typography>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n\r\n        <form onSubmit={iForm.handleProcess}>\r\n          <fieldset className={classes.invisible} disabled={formInProcess}>\r\n\r\n            <CenterItems>\r\n              <Avatar className={classes.lockAvatar}>\r\n                <LockIcon/>\r\n              </Avatar>\r\n            </CenterItems>\r\n            <CenterItems>\r\n              <Typography variant=\"h6\" noWrap>\r\n                {formLabel}\r\n              </Typography>\r\n            </CenterItems>\r\n\r\n            <DialogContentText className={classes.entry}>\r\n              Welcome to Eatery Nod ... please {formLabel}!\r\n            </DialogContentText>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"email\"\r\n                          iForm={iForm}\r\n                          autoFocus\r\n                          required\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          placeholder=\"jon.snow@gmail.com\"\r\n                          helperText=\"your email is your ID\"/>\r\n            </div>\r\n\r\n            <div className={classes.entry}>\r\n              <ITextField fieldName=\"pass\"\r\n                          iForm={iForm}\r\n                          required\r\n                          fullWidth\r\n                          type=\"password\"/>\r\n            </div>\r\n\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <SignInIcon className={classes.icon}/>\r\n                {formLabel}\r\n              </Button>\r\n            </CenterItems>\r\n            <FormHelperText error>{formErrMsg}</FormHelperText>\r\n\r\n            {formInProcess && (\r\n               <div className={classes.entry}>\r\n                 <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n               </div>\r\n             )}\r\n\r\n            <div className={classes.entry}>\r\n              <CenterItems>\r\n                <Typography variant=\"body2\" color=\"secondary\">\r\n                  ... don't have an account?\r\n                </Typography>\r\n              </CenterItems>\r\n              <CenterItems>\r\n                <Button variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={()=>toast.warn({ msg:'Sign Up has not yet been implemented.' })}>\r\n                  <SignInIcon className={classes.icon}/>\r\n                  Sign Up\r\n                </Button>\r\n              </CenterItems>\r\n            </div>\r\n\r\n          </fieldset>\r\n        </form>\r\n\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nconst SignInScreenWithState = withState({\r\n  component: SignInScreen,\r\n  mapStateToProps(appState) {\r\n    return {\r\n      formState: signInFormMeta.formStateSelector(appState),\r\n    };\r\n  },\r\n  mergeProps(stateProps, dispatchProps, ownProps) {\r\n    return {\r\n      ...ownProps,\r\n      //...stateProps,    // unneeded (in this case) ... wonder: does this impact connect() optimization?\r\n      //...dispatchProps, // ditto\r\n      iForm: signInFormMeta.IForm(stateProps.formState, \r\n                                  dispatchProps.dispatch),\r\n    };\r\n  },\r\n});\r\n\r\nconst SignInScreenWithStyles = withStyles(styles)(SignInScreenWithState);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SignInScreenWithStyles);\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport { withStyles }   from '@material-ui/core/styles';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport Progress         from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Dialog           from '@material-ui/core/Dialog';\r\nimport DialogContent    from '@material-ui/core/DialogContent';\r\nimport DialogTitle      from '@material-ui/core/DialogTitle';\r\nimport Typography       from '@material-ui/core/Typography';\r\nimport {TransitionZoom} from './Transition';\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  favicon: {\r\n    width: '150px', // size the eatery-nod icon\r\n  },\r\n\r\n  progress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * A modal SplashScreen used when there is nothing else to display :-)\r\n *\r\n * The SplashScreen will responsively/dynamically utilize the full\r\n * screen for cell phone devices.\r\n *\r\n * NOTE: Currently we dynamically size based on the message content,\r\n *       within the constraint of the screen.  Not sure if I like\r\n *       this or not ... it is good for cell phones, but can be rather\r\n *       small for browsers (typically the message is pretty small).\r\n *       FYI: This is pretty much the default behavior of <Dialog>.\r\n *            I spend a small amount of time to override this without\r\n *            any success.\r\n */\r\nfunction SplashScreen({msg, classes, fullScreen}) {\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle className={classes.title}>\r\n        <center className={classes.title}>Eatery Nod</center>\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <center>\r\n         <br/>\r\n          <img className={classes.favicon} src='/eatery.png' alt='eatery-nod'/>\r\n          <br/>\r\n          <Progress className={classes.progress} color=\"secondary\"/>\r\n          <Typography variant=\"body2\">{msg}</Typography>\r\n          <br/>\r\n        </center>\r\n      </DialogContent>\r\n\r\n    </Dialog>\r\n  );\r\n\r\n}\r\n\r\nSplashScreen.propTypes = {\r\n  msg:        PropTypes.string,\r\n  classes:    PropTypes.object.isRequired,\r\n  fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nSplashScreen.defaultProps = {\r\n  msg: '',\r\n};\r\n\r\nconst SplashScreen_withStyles = withStyles(styles)(SplashScreen);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(SplashScreen_withStyles);\r\n","import React               from 'react';\r\nimport * as _authSel       from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\n\r\nimport SignInVerifyScreen  from './comp/SignInVerifyScreen';\r\nimport SignInScreen        from './comp/SignInScreen';\r\nimport SplashScreen        from '../../util/SplashScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    const user = _authSel.curUser(appState);\r\n\r\n    // when user is FULLY signedIn/verified\r\n    // ... allow down-stream features to route further (i.e. app-specific screens)\r\n    if (user.isUserSignedIn()) {\r\n      return null;\r\n    }\r\n\r\n    // when user is signed in BUT unverified\r\n    // ... display email verification screen\r\n    if (user.isUserSignedInUnverified()) {\r\n      return <SignInVerifyScreen/>;\r\n    }\r\n\r\n\r\n    // ***\r\n    // *** at this point we know user is unauthorized (either signed out, or in-transition)\r\n    // ***\r\n\r\n    // display interactive SignIn, when form is active (accomplished by our logic)\r\n    if (_authSel.isSignInFormActive(appState)) {\r\n      return <SignInScreen/>;\r\n    }\r\n\r\n    // display interactive SignUp, when form is active (accomplished by our logic)\r\n    // TODO: check for signUpForm (WHEN SUPPORTED)\r\n    \r\n    // fallback: communicate route transition condition\r\n    // NOTES:\r\n    //  1) we MUST issue a route to prevent downstream feature visualization too early\r\n    //  2) it can occur under the following conditions:\r\n    //     a) a slow server-side sign-in process\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     b) during transition between startup/auth features\r\n    //        ... where logic is in the process of activating one of the auth form screens\r\n    //        ... and so the message wording should NOT convey an error\r\n    //     c) an error condition (say some change that impacts our route logic)\r\n    //        ... this is an unexpected condition\r\n    //        ... SO, we expose the user-status context in the message (for diagnostics)\r\n    const msg = `authorization in progress (${user.getAuthStatus()})`;\r\n    return <SplashScreen msg={msg}/>;\r\n  },\r\n\r\n});\r\n","import React        from 'react';\r\nimport withState    from '../../../util/withState';\r\nimport UserMenuItem from '../../util/layout/comp/UserMenuItem';\r\nimport _authAct     from '../actions';\r\nimport {toast,\r\n        confirm}    from '../../../util/notify';\r\n\r\n/**\r\n * AuthUserMenu: our user-profile menu items (in the App Header)\r\n */\r\nfunction AuthUserMenu({signOut}) {\r\n  return (\r\n    <>\r\n      <UserMenuItem onClick={doL8tr}>User Profile</UserMenuItem>\r\n      <UserMenuItem onClick={doL8tr}>My Account</UserMenuItem>\r\n      <UserMenuItem onClick={signOut}>Sign Out</UserMenuItem>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default /* AuthUserMenuWithState = */ withState({\r\n  component: AuthUserMenu,\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      signOut() {\r\n        confirm.warn({ \r\n          msg: 'Are you sure you wish to sign out?', \r\n          actions: [\r\n            { txt: 'Sign Out', action: () => dispatch( _authAct.signOut() ) },\r\n            { txt: 'Go Back' }\r\n          ]\r\n        });\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nfunction doL8tr() {\r\n  toast.warn({msg: 'NOT implemented yet (coming soon)!'})\r\n}\r\n","import {createFeature}  from 'feature-u';\r\nimport _auth            from './featureName';\r\nimport _authAct         from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (signInFormMeta)\r\nimport reducer,\r\n       {curUser}        from './state';\r\nimport logic            from './logic';\r\nimport route            from './route';\r\nimport AuthUserMenu     from './comp/AuthUserMenu';\r\n\r\n// feature: auth\r\n//          promote complete user authentication service (full details in README)\r\nexport default createFeature({\r\n  name: _auth,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      // actions:\r\n      'actions.userProfileChanged': _authAct.userProfileChanged, // userProfileChanged(user) NOTE: PUBLIC for eateries to monitor, and for future use (when user can change their pool)\r\n      'actions.signOut':            _authAct.signOut,            // signOut()\r\n\r\n      // selectors:\r\n      'sel.curUser': curUser, // full blown User object\r\n    },\r\n\r\n    defineUse: {\r\n      // inject our user-profile menu items (in the App Header)\r\n      'AppLayout.UserMenuItem.AuthUserMenu': AuthUserMenu,\r\n    },\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n});\r\n","/**\r\n * AuthServiceAPI is a \"pseudo\" interface specifying the AuthService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceAPI {\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signIn() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.refreshUser() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.resendEmailVerification() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.signOut() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature} from 'feature-u';\r\nimport AuthServiceAPI  from './AuthServiceAPI';\r\n\r\n// feature: authService\r\n//          promote a persistent authentication service API (retaining\r\n//          active user) through the `authService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'authService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['authService', {required: true, type: objectOfTypeAuthServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeAuthServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof AuthServiceAPI ? null : 'object of type AuthServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import firebase       from 'firebase';\r\nimport AuthServiceAPI from '../AuthServiceAPI';\r\nimport User           from '../User';\r\n\r\n/**\r\n * AuthServiceFirebase is the **real** AuthServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceFirebase extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   * \r\n   * NOTE: Firebase also maintains it's rendition of current user,\r\n   *       available via `firebase.auth().currentUser`.  However, this\r\n   *       service supplements the user with additional information\r\n   *       from the app's DB userProfile.\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n  /**\r\n   * Sign in to our authorization provider (asynchronously).\r\n   * \r\n   * @param {String} email the identifying user email\r\n   * @param {String} pass the user password\r\n   *\r\n   * @returns {User via promise} the signed-in eatery-nod User object.\r\n   * NOTE: This returned user may still be in an unverified state.\r\n   */\r\n  signIn(email, pass) {\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // signin through firebase authentication\r\n      firebase.auth().signInWithEmailAndPassword(email, pass)\r\n              .then( fbUser => { // fbUser:  <firebase.User>: https://firebase.google.com/docs/reference/js/firebase.User\r\n                                 // same as: firebase.auth().currentUser\r\n\r\n                // supplement the signed-in fbUser with our app's DB userProfile\r\n                const dbRef = firebase.database().ref(`/userProfiles/${fbUser.uid}`);\r\n                dbRef.once('value')\r\n                     .then( snapshot => {\r\n\r\n                       const userProfile = snapshot.val();\r\n                       // console.log(`xx AuthServiceFirebase.signIn() userProfile: `, userProfile)\r\n\r\n                       // communicate issue: missing userProfile in our DB\r\n                       if (!userProfile) {\r\n                         return reject(\r\n                           new Error(`***ERROR*** No userProfile exists for user: ${fbUser.email}`)\r\n                             .defineAttemptingToMsg('sign in to eatery-nod (your user profile does NOT exist)')\r\n                         );\r\n                       }\r\n\r\n                       // retain/communicate our user object, populated from both the fbUser and userProfile\r\n                       this.currentAppUser = new User({\r\n                         name:          userProfile.name,\r\n                         email:         fbUser.email,\r\n                         emailVerified: fbUser.emailVerified,\r\n                         pool:          userProfile.pool,\r\n                       });\r\n                       // console.log(`xx MOCK RECORDING from AuthServiceFirebase.signIn(...): returning User: ${JSON.stringify(this.currentAppUser.toStruct())}`);\r\n                       return resolve(this.currentAppUser);\r\n                     })\r\n\r\n                     .catch( err => { // unexpected error\r\n                       return reject(err.defineAttemptingToMsg('sign in to eatery-nod (a problem was encountered fetching your user profile)'));\r\n                     });\r\n\r\n              })\r\n\r\n              .catch( (err) => {\r\n                // NOTE: When firebase:\r\n                //       - provides an err.code, this enumerates a user specific credentials problem (like \"invalid password\")\r\n                //         ... we do NOT expose this to the user (so as to NOT give hacker insight)\r\n                //             rather we generalize it to the user ('Invalid SignIn credentials.')\r\n                //       - when NO err.code is supplied, it represents an unexpected condition\r\n                if (err.code) { // expected condition\r\n                  err.defineUserMsg('Invalid SignIn credentials.'); // make generic ... do NOT expose err.code to the user\r\n                }\r\n                else { // unexpected condition\r\n                  err.defineAttemptingToMsg('sign in to eatery-nod');\r\n                }\r\n                return reject(err);\r\n              });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh the current signed-in user.\r\n   *\r\n   * This method is typically used to insure the authorization status\r\n   * is up-to-date.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {User via promise} the refreshed signed-in eatery-nod\r\n   * User object.  NOTE: The returned user may still be in an\r\n   * unverified state.\r\n   */\r\n  refreshUser() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.refreshUser(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('refresh a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // refresh our current signed-in user\r\n      firebase.auth().currentUser.reload()\r\n\r\n              .then( () => { // NOTE: this service returns void ... however, the firebase.auth().currentUser has been updated!\r\n\r\n                const fbUser = firebase.auth().currentUser;\r\n\r\n                // refresh our signed-in user\r\n                // ... just for good measure, we create a new instance of this.currentAppUser, rather than mutating the existing one\r\n                //     - just in case it is held directly in redux\r\n                //     - even though client SHOULD use user.toStruct()\r\n                this.currentAppUser = new User({\r\n                  name:          this.currentAppUser.name, // keep same (from our db profile)\r\n                  email:         fbUser.email,             // refresh   (from current firebase auth)\r\n                  emailVerified: fbUser.emailVerified,     // refresh   (from current firebase auth)\r\n                  pool:          this.currentAppUser.pool, // keep same (from our db profile)\r\n                });\r\n\r\n                // communicate our refreshed signed-in user\r\n                return resolve(this.currentAppUser);\r\n              })\r\n\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('refresh the signed-in user'));\r\n              });\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Resend an email notification to the current signed-in user.\r\n   *\r\n   * This method is used, upon user request, to resend the email\r\n   * containing instructions on how to verify their identity.\r\n   * \r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   */\r\n  resendEmailVerification() {\r\n    // verify we have a current user to resend to\r\n    if (this.currentAppUser === null) {\r\n      // unexpected condition\r\n      throw new Error('***ERROR*** (within app logic) AuthServiceFirebase.resendEmailVerification(): may only be called once a successful signIn() has completed.')\r\n        .defineAttemptingToMsg('resend an email verification to a non-existent user (not yet signed in)');\r\n    }\r\n\r\n    // issue the email request\r\n    firebase.auth().currentUser.sendEmailVerification();\r\n  }\r\n\r\n\r\n  /**\r\n   * Sign-out the current signed-in user.\r\n   *\r\n   * This method can only be called, once a successful signIn() has\r\n   * completed, because of the persistent nature of this service.\r\n   * \r\n   * @returns {void via promise} a void promise is needed to capture\r\n   * async errors.\r\n   */\r\n  signOut() {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we have a current user to refresh\r\n      if (this.currentAppUser === null) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) AuthServiceFirebase.signOut(): may only be called once a successful signIn() has completed.')\r\n            .defineAttemptingToMsg('sign-out a non-existent user (not yet signed in)')\r\n        );\r\n      }\r\n\r\n      // issue the signout request\r\n      firebase.auth().signOut()\r\n              .then( () => {\r\n                this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n              })\r\n              .catch( err => { // unexpected error\r\n                return reject(err.defineAttemptingToMsg('sign-out the user'));\r\n              });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}     from 'feature-u';\r\nimport featureFlags        from '../../../../featureFlags';\r\nimport AuthServiceFirebase from './AuthServiceFirebase';\r\n\r\n// feature: authServiceFirebase \r\n//          defines the real 'authService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'authServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceFirebase(),\r\n    },\r\n  },\r\n\r\n  appWillStart({fassets, curRootAppElm}) { // initialize FireBase (required by this service)\r\n    fassets.initFireBase();\r\n  },\r\n\r\n});\r\n","import AuthServiceAPI from '../AuthServiceAPI';\r\nimport User           from '../User';\r\n\r\n/**\r\n * AuthServiceMock is the **mock** AuthServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service, where the active user\r\n *       is retained between service invocations.\r\n */\r\nexport default class AuthServiceMock extends AuthServiceAPI {\r\n\r\n  /**\r\n   * Our \"current\" active user, retained between service invocations,\r\n   * null for none (i.e. signed-out).\r\n   */\r\n  currentAppUser = null; // type: User (our application User object)\r\n\r\n\r\n  signIn(email, pass) { // ... see AuthServiceAPI\r\n\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // stimulate various errors with variations in email/pass\r\n      if (pass === 'unexpect') { // ... unexpected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Simulated Unexpected Condition`)\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      if (pass === 'expect') { // ... expected condition\r\n        return reject(\r\n          new Error(`***ERROR*** Invalid Password`) // do NOT expose details to the user (e.g. Invalid Password)\r\n            .defineUserMsg('Invalid SignIn credentials.') // keep generic\r\n            .defineAttemptingToMsg('sign in to eatery-nod')\r\n        );\r\n      }\r\n\r\n      // define our mock user\r\n      this.currentAppUser = new User({\r\n        \"name\":          \"MockGuy\",\r\n        email,\r\n        \"emailVerified\": false,\r\n        \"pool\":          \"mock\"\r\n      });\r\n\r\n      // sign in the supplied user\r\n      if (pass === 'unverify') { // ... simulate user unverified\r\n        return resolve(this.currentAppUser);\r\n      }\r\n\r\n      // ... all other cases: user is verified\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  refreshUser() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      // very simple mock ... assume they have now been verified\r\n      this.currentAppUser = this.currentAppUser.clone();\r\n      this.currentAppUser.emailVerified = true;\r\n      return resolve(this.currentAppUser);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  resendEmailVerification() { // ... see AuthServiceAPI\r\n    // NOTHING TO DO :-)\r\n  }\r\n\r\n\r\n  signOut() { // ... see AuthServiceAPI\r\n    return new Promise( (resolve, reject) => {\r\n      this.currentAppUser = null; // reset our local User object, now that we are signed-out\r\n      return resolve(undefined);\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from '../../../../featureFlags';\r\nimport AuthServiceMock  from './AuthServiceMock';\r\n\r\n// feature: authServiceMock\r\n//          defines the mock 'authService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'authServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'authService': new AuthServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {combineReducers}     from 'redux';\r\nimport {reducerHash}         from 'astx-redux-util';\r\nimport {expandWithFassets}   from 'feature-u';\r\nimport {slicedReducer}       from 'feature-redux';\r\nimport {createSelector}      from 'reselect';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\nimport _eateriesAct          from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for our eateries process.\r\n// ***\r\n\r\n// NOTE: expandWithFassets() is used NOT for app injection,\r\n//       but RATHER to delay expansion (avoiding circular dependancies\r\n//       in selector access from eateryFilterFormMeta.js)\r\nconst reducer = slicedReducer(`view.${_eateries}`, expandWithFassets( () => combineReducers({\r\n\r\n  // raw eatery entries synced from our realtime DB\r\n  dbPool: reducerHash({\r\n    [_eateriesAct.dbPool.changed]: (state, action) => action.eateries,\r\n  }, null), // initialState\r\n\r\n  listView: combineReducers({\r\n\r\n    // standard iForm for our EateryFilterForm\r\n    filterForm: eateryFilterFormMeta.registrar.formReducer(),\r\n\r\n    // filter used in visualizing listView\r\n    filter: reducerHash({\r\n      [_eateriesAct.filterForm.process]: (state, action) => action.domain,\r\n    }, { // initialState\r\n      distance: null,    // distance in miles (default: null - for any distance)\r\n      sortOrder: 'name', // sortOrder: 'name'/'distance'\r\n    }),\r\n\r\n  }),\r\n\r\n  // selectedEateryId: eateryId ... id of selected eatery to \"display details for\" (null for none)\r\n  selectedEateryId: reducerHash({\r\n    [_eateriesAct.viewDetail]:       (state, action) => action.eateryId,\r\n    [_eateriesAct.viewDetail.close]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n  // spin: string ... msg to display when spin operation is in place, null for spin NOT in place\r\n  spin: reducerHash({\r\n    [_eateriesAct.spin]:          (state, action) => action.spinMsg,\r\n    [_eateriesAct.spin.complete]: (state, action) => null,\r\n  }, null), // initialState\r\n\r\n}) ) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                                   /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState            = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;       // ... concise alias (used internally)\r\n\r\nexport const getDbPool           = (appState) => gfs(appState).dbPool;\r\n\r\nexport const isFormFilterActive  = (appState) => gfs(appState).listView.filterForm ? true : false;\r\nexport const getFormFilter       = (appState) => gfs(appState).listView.filterForm;\r\n\r\nexport const getListViewFilter   = (appState) => gfs(appState).listView.filter;\r\n\r\nexport const getFilteredEateries  = createSelector(\r\n  getDbPool,\r\n  getListViewFilter,\r\n  (dbPool, filter) => {\r\n\r\n    if (!dbPool) {\r\n      return null; // NO dbPool yet ... waiting for pool entries\r\n    }\r\n\r\n    // apply filter to dbPool\r\n    // filteredEateries: Eatery[]\r\n    const entries = Object.values(dbPool)\r\n                          .filter(entry => { // filter entries\r\n                            // apply distance (when supplied in filter)\r\n                            return filter.distance ? entry.distance <= filter.distance : true;\r\n                          })\r\n                          .sort((e1, e2) => ( // sort entries ... order by:\r\n                            filter.sortOrder==='distance' ? e1.distance-e2.distance : 0 || // distance (when requested)\r\n                            e1.name.localeCompare(e2.name) // name - either secondary (within distance), or primary (when no distance)\r\n                          ));\r\n\r\n    return entries;\r\n  }\r\n);\r\n\r\nexport const getSelectedEatery   = (appState) => {\r\n  const  selectedEateryId = gfs(appState).selectedEateryId;\r\n  return selectedEateryId ? gfs(appState).dbPool[selectedEateryId] : null;\r\n};\r\n\r\nexport const getSpinMsg          = (appState) => gfs(appState).spin;\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'eateries';\r\n","import * as Yup          from 'yup';\r\nimport IFormMeta         from '../../util/iForms/IFormMeta';\r\nimport _eateriesAct      from './actions';\r\nimport * as _eateriesSel from './state';\r\n\r\nconst distanceMsg  = 'Miles should be a positive number (when supplied)';\r\nconst sortOrderMsg = \"Sort order should be either 'name' or 'distance'\";\r\n\r\nexport default IFormMeta({\r\n  formDesc:  'Pool Filter',\r\n  formSchema: Yup.object().shape({\r\n    // distance is an optional positive number (or null for any distance)\r\n    // NOTE: could NOT get default() to work, but transform() to null, works in conjunction with .nullable()\r\n    distance:   Yup.number().label('Miles').typeError(distanceMsg).nullable().transform(val => val || null).positive(distanceMsg),\r\n    sortOrder:  Yup.string().label('Sort').typeError(sortOrderMsg).required().matches(/(name|distance)/, sortOrderMsg),\r\n\r\n  }),\r\n  formActionsAccessor: ()         => _eateriesAct.filterForm,\r\n  formStateSelector:   (appState) => _eateriesSel.getFormFilter(appState),\r\n});\r\n","import {generateActions}     from 'action-u';\r\nimport _eateries             from './featureName';\r\nimport eateryFilterFormMeta  from './eateryFilterFormMeta';\r\n\r\nexport default generateActions.root({\r\n\r\n  [_eateries]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n\r\n    dbPool: {\r\n\r\n      changed: { // actions.dbPool.changed(eateries): Action\r\n                 // > eateries changed: eateries: { eateryKey1: {id, name, addr, phone, loc, navUrl, website}, eateryKey2: {...}}\r\n                 actionMeta: {\r\n                   traits: ['eateries'],\r\n                 },\r\n      },\r\n\r\n\r\n      add: { // actions.dbPool.add(eateryId): Action\r\n             // > add eatery (from eateryId) to pool\r\n             actionMeta: {\r\n               traits: ['eateryId'],\r\n             },\r\n      \r\n        eateryDetail: { // actions.dbPool.add.eateryDetail(eatery): Action\r\n                        // > add supplied eatery to our pool\r\n                        actionMeta: {\r\n                          traits: ['eatery'],\r\n                        },\r\n      \r\n          fail: { // actions.dbPool.add.eateryDetail.fail(eateryId, err): Action\r\n                  // > in process of adding eatery, detail retrieval failed\r\n                  actionMeta: {\r\n                    traits: ['eateryId', 'err'],\r\n                  },\r\n          },\r\n        },\r\n      \r\n      },\r\n\r\n      \r\n      remove: { // actions.dbPool.remove(eateryId): Action\r\n                // > remove eatery (from eateryId) to pool\r\n                actionMeta: {\r\n                  traits: ['eateryId'],\r\n                },\r\n      },\r\n\r\n    },\r\n\r\n\r\n    // inject the standard iForm auto-generated form actions\r\n    // ... open(), fieldChanged(), fieldTouched(), process(), process.reject(), close()\r\n    filterForm: eateryFilterFormMeta.registrar.formActionGenesis(),\r\n\r\n    viewDetail: { // actions.viewDetail(eateryId): Action\r\n                  // > view eatery details (from supplied eateryId)\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n\r\n      close: { // actions.viewDetail.close(): Action\r\n               // > close eatery details\r\n               actionMeta: {},\r\n      },\r\n\r\n    },\r\n\r\n\r\n    spin: { // actions.spin(): Action\r\n            // > randomly select a date night eatery\r\n            actionMeta: {},\r\n\r\n      complete: { // actions.spin.complete(eateryId): Action\r\n                  // > spin complete, with supplied eateryId selected\r\n                  actionMeta: {\r\n                    traits: ['eateryId'],\r\n                  },\r\n      },\r\n\r\n    },\r\n\r\n\r\n  },\r\n});\r\n","import {createLogic}        from 'redux-logic';\r\nimport eateryFilterFormMeta from './eateryFilterFormMeta';\r\nimport _eateries            from './featureName';\r\nimport * as _eateriesSel    from './state';\r\nimport _eateriesAct         from './actions';\r\nimport {expandWithFassets}  from 'feature-u';\r\nimport discloseError        from '../../util/discloseError';\r\n\r\n/**\r\n * Our persistent monitor that manages various aspects of a given pool.\r\n */\r\nlet curPoolMonitor = {   // current \"pool\" monitor (initially a placebo)\r\n  pool:   null,          // type: string\r\n  wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n};\r\n\r\n/**\r\n * This is the primary logic module, which initially loads (and\r\n * monitors changes) in the real-time DB for the pool eateries of our\r\n * active user.\r\n *\r\n * The key that drives this is the active User.pool identifier.\r\n * Therefore, we trigger the process off of the 'userProfileChanged'\r\n * action (where the User.pool is obtained).  This action is emitted:\r\n *  - on initial startup of our app\r\n *  - and when the User profile changes (TODO: a future enhancement of the app)\r\n */\r\nexport const monitorDbPool = expandWithFassets( (fassets) => createLogic({\r\n\r\n  name:        `${_eateries}.monitorDbPool`,\r\n  type:        String(fassets.actions.userProfileChanged), // NOTE: action contains: User object (where we obtain the pool)\r\n  warnTimeout: 0, // long-running logic\r\n\r\n  validate({getState, action, fassets}, allow, reject) {\r\n\r\n    // no-op if we are alreay monitoring this same pool\r\n    if (action.user.pool === curPoolMonitor.pool) {\r\n      reject(action); // other-logic/middleware/reducers: YES, self's process(): NO\r\n      return;\r\n    }\r\n\r\n    // allow self's process()\r\n    allow(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // close prior monitor\r\n    curPoolMonitor.wrapUp();\r\n\r\n    // create new monitor (retaining needed info for subsequent visibility)\r\n    curPoolMonitor = {\r\n      pool:   action.user.pool,\r\n      wrapUp() {\r\n        done();\r\n      }\r\n    };\r\n\r\n    // register our real-time DB listener for the set of eateries in our pool\r\n    fassets.eateryService.monitorDbEateryPool(\r\n      action.user.pool,\r\n      fassets.sel.getDeviceLoc(getState()),\r\n      (eateries) => {\r\n\r\n        // broadcast a notification of a change in our eateries (or the initial population)\r\n        dispatch( _eateriesAct.dbPool.changed(eateries) );\r\n\r\n      });\r\n  },\r\n\r\n}) );\r\n\r\n\r\n/**\r\n * Default the actions.filterForm.open() domain param from the\r\n * appState filter.\r\n */\r\nexport const defaultFilter = createLogic({\r\n\r\n  name: `${_eateries}.defaultFilter`,\r\n  type: String(_eateriesAct.filterForm.open),\r\n\r\n  transform({getState, action, fassets}, next) {\r\n    if (!action.domain) {\r\n      action.domain = _eateriesSel.getListViewFilter(getState());\r\n    }\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n/**\r\n * Process eatery filter.\r\n */\r\nexport const processFilter = createLogic({\r\n\r\n  name: `${_eateries}.processFilter`,\r\n  type: String(_eateriesAct.filterForm.process),\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    // console.log(`xx logic: eatery.processFilter, action is: `, action);\r\n    //   action: {\r\n    //     \"domain\": {\r\n    //       \"distance\":  6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //     \"type\": \"eateries.filter.process\",\r\n    //     \"values\": {\r\n    //       \"distance\": 6, // null when NOT supplied\r\n    //       \"sortOrder\": \"name\",\r\n    //     },\r\n    //   }\r\n    \r\n    // show our view\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n\r\n    // close eatery form filter\r\n    dispatch( _eateriesAct.filterForm.close() );\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const spin = createLogic({\r\n\r\n  name: `${_eateries}.spin`,\r\n  type: String(_eateriesAct.spin),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    const appState         = getState();\r\n    const filteredEateries = _eateriesSel.getFilteredEateries(appState);\r\n\r\n    // supplement action with spinMsg\r\n    action.spinMsg = `... selecting your eatery from ${filteredEateries.length} entries!`;\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    setTimeout( () => {\r\n\r\n      const appState = getState();\r\n      const filteredEateries  = _eateriesSel.getFilteredEateries(appState);\r\n\r\n      // algorighm from MDN ... https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\r\n      const min      = Math.ceil(0);                        // min is inclusive (in usage below)\r\n      const max      = Math.floor(filteredEateries.length); // max is exclusive (in usage below)\r\n      const randIndx = Math.floor(Math.random() * (max - min)) + min;\r\n      \r\n      const randomEateryId = filteredEateries[randIndx].id;\r\n\r\n      dispatch( _eateriesAct.spin.complete(randomEateryId) );\r\n      done();\r\n\r\n    }, 1000);\r\n\r\n  },\r\n\r\n});\r\n\r\nexport const spinComplete = createLogic({\r\n\r\n  name: `${_eateries}.spinComplete`,\r\n  type: String(_eateriesAct.spin.complete),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n    dispatch( _eateriesAct.viewDetail(action.eateryId) );\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const addToPoolPrep = createLogic({\r\n\r\n  name: `${_eateries}.addToPoolPrep`,\r\n  type: String(_eateriesAct.dbPool.add),\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    fassets.discoveryService.fetchEateryDetail(action.eateryId)\r\n      .then(eatery => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail(eatery) );\r\n        done();\r\n      })\r\n      .catch(err => {\r\n        dispatch( _eateriesAct.dbPool.add.eateryDetail.fail(action.eateryId, err) );\r\n        done();\r\n      });\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\nexport const addToPool = createLogic({\r\n\r\n  name: `${_eateries}.addToPool`,\r\n  type: String(_eateriesAct.dbPool.add.eateryDetail),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // add the new eatery\r\n    fassets.eateryService.addEatery(action.eatery)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\nexport const removeFromPool = createLogic({\r\n\r\n  name: `${_eateries}.removeFromPool`,\r\n  type: String(_eateriesAct.dbPool.remove),\r\n\r\n  transform({getState, action, fassets}, next, reject) {\r\n\r\n    // remove the supplied eatery\r\n    fassets.eateryService.removeEatery(action.eateryId)\r\n           .catch( (err) => {\r\n             // report unexpected error to user\r\n             discloseError({err});\r\n           });\r\n\r\n    next(action);\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic (accumulated in index.js)\r\n// ... named exports (above) are used by unit tests :-)\r\nexport default expandWithFassets( (fassets) => [\r\n  monitorDbPool(fassets),\r\n  ...eateryFilterFormMeta.registrar.formLogic(), // inject the standard eatery filter form-based logic modules\r\n  defaultFilter,\r\n  processFilter,\r\n  spin,\r\n  spinComplete,\r\n  addToPoolPrep,\r\n  addToPool,\r\n  removeFromPool,\r\n] );\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\n\r\nimport {withFassets}    from 'feature-u';\r\nimport {withStyles}     from '@material-ui/core/styles';\r\nimport withState        from '../../../util/withState';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\n\r\nimport _eateriesAct     from '../actions';\r\n\r\nimport CloseIcon        from '@material-ui/icons/Close';\r\nimport Dialog           from '@material-ui/core/Dialog';\r\nimport DialogActions    from '@material-ui/core/DialogActions';\r\nimport DialogContent    from '@material-ui/core/DialogContent';\r\nimport DialogTitle      from '@material-ui/core/DialogTitle';\r\nimport IconButton       from '@material-ui/core/IconButton';\r\nimport Link             from '@material-ui/core/Link';\r\nimport LinkIcon         from '@material-ui/icons/Link';\r\nimport List             from '@material-ui/core/List';\r\nimport ListItem         from '@material-ui/core/ListItem';\r\nimport ListItemIcon     from '@material-ui/core/ListItemIcon';\r\nimport ListItemText     from '@material-ui/core/ListItemText';\r\nimport NavigationIcon   from '@material-ui/icons/Navigation';\r\nimport PhoneIcon        from '@material-ui/icons/Phone';\r\nimport SpinIcon         from '@material-ui/icons/SwapCalls';\r\nimport Typography       from '@material-ui/core/Typography';\r\nimport {TransitionZoom} from '../../../util/Transition';\r\n\r\nconst styles = theme => ({\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  bottomBar: {\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * EateryDetailScreen displaying the details of a given eatery.\r\n */\r\nfunction EateryDetailScreen({curUser, eatery, handleClose, handleSpin, fullScreen, classes}) {\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={handleClose}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionZoom}>\r\n\r\n      <DialogTitle disableTypography className={classes.titleBar}>\r\n        \r\n        <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n          Eatery\r\n          <Typography color=\"inherit\" inline={true} noWrap>\r\n            &nbsp;({curUser.pool})\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <IconButton color=\"inherit\" onClick={handleClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <List>\r\n\r\n          <ListItem>\r\n            <ListItemText \r\n                primary={<Typography variant=\"h6\">{eatery.name}</Typography>}/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <NavigationIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.navUrl}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.addr}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <PhoneIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={`tel:${eatery.phone}`}\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    {eatery.phone}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <LinkIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText \r\n                primary={\r\n                  <Link variant=\"body1\" \r\n                        href={eatery.website}\r\n                        target=\"_blank\"\r\n                        color=\"inherit\"\r\n                        underline=\"none\">\r\n                    Web: {eatery.website}\r\n                  </Link>\r\n                }/>\r\n          </ListItem>\r\n\r\n        </List>\r\n      </DialogContent>\r\n\r\n      <DialogActions className={classes.bottomBar}>\r\n        <IconButton color=\"inherit\" onClick={handleSpin}>\r\n          <SpinIcon/>\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin Again</Typography>\r\n        </IconButton>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nEateryDetailScreen.propTypes = {\r\n  eatery:     PropTypes.object.isRequired,\r\n  fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst EateryDetailScreenWithState = withState({\r\n  component: EateryDetailScreen,\r\n  mapStateToProps(appState, {fassets}) { // ... fassets available in ownProps (via withFassets() below)\r\n    return {\r\n      curUser: fassets.sel.curUser(appState),\r\n    };\r\n  },\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      handleClose() {\r\n        dispatch( _eateriesAct.viewDetail.close() );\r\n      },\r\n      handleSpin() {\r\n        dispatch( _eateriesAct.spin() );\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nconst EateryDetailScreenWithFassets = withFassets({\r\n  component: EateryDetailScreenWithState,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n\r\nconst EateryDetailScreenWithStyles = withStyles(styles)(EateryDetailScreenWithFassets);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(EateryDetailScreenWithStyles);\r\n","import React               from 'react';\r\nimport {withFassets}       from 'feature-u';\r\nimport withState           from '../../../util/withState';\r\nimport withStyles          from '@material-ui/core/styles/withStyles';\r\n\r\nimport _eateriesAct        from '../actions';\r\nimport * as _eateriesSel   from '../state';\r\n\r\nimport Typography          from '@material-ui/core/Typography';\r\nimport ListItemIcon        from '@material-ui/core/ListItemIcon';\r\nimport RestaurantIcon      from '@material-ui/icons/Restaurant';\r\nimport List                from '@material-ui/core/List';\r\nimport ListItem            from '@material-ui/core/ListItem';\r\nimport ListItemText        from '@material-ui/core/ListItemText';\r\n\r\nimport EateryDetailScreen  from './EateryDetailScreen';\r\nimport SplashScreen        from '../../../util/SplashScreen';\r\n\r\nconst listStyles = (theme) => ({ // ? NOT currently used ... a big fat no-op\r\n  list: {\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * EateriesListScreen displaying a set of eateries (possibly filtered).\r\n */\r\nfunction EateriesListScreen({classes, curUser, filteredEateries, filter, selectedEatery, spinMsg, showDetail}) {\r\n\r\n  if (!filteredEateries) {\r\n    return <SplashScreen msg=\"... waiting for pool entries\"/>;\r\n  }\r\n\r\n  let currentDistance = -1;\r\n\r\n  function listContent() {\r\n    const content = [];\r\n    filteredEateries.forEach( eatery => {\r\n      // optionally supply sub-header when ordered by distance\r\n      if (filter.sortOrder === 'distance' && eatery.distance !== currentDistance) {\r\n        currentDistance = eatery.distance;\r\n        // ?? additional style: ... NOTE have not yet seen this rendering\r\n        //    - ? red color (or secondary\r\n        //    - ? format \"(as the crow flies)\" on second line -and- smaller\r\n        const subTxt = `${currentDistance} mile${currentDistance===1?'':'s'} (as the crow flies)`;\r\n        content.push((\r\n          <ListItem key={`subheader${currentDistance}`}\r\n                    dense\r\n                    button\r\n                    divider>\r\n            <ListItemText primary={subTxt}/>\r\n          </ListItem>\r\n        ));\r\n      }\r\n      // supply our primary entry content\r\n      content.push((\r\n        <ListItem key={eatery.id}\r\n                  dense\r\n                  button\r\n                  divider\r\n                  onClick={()=>showDetail(eatery.id)}>\r\n          <ListItemIcon>\r\n            <RestaurantIcon/>\r\n          </ListItemIcon>\r\n\r\n          <ListItemText \r\n              primary={\r\n                <Typography variant=\"h6\"\r\n                  noWrap>\r\n                  {eatery.name}\r\n                  <Typography inline={true} noWrap>\r\n                    &nbsp;({`${eatery.distance} mile${currentDistance===1?'':'s'}`})\r\n                  </Typography>\r\n                </Typography>\r\n              }\r\n              secondary={\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                  {eatery.addr}\r\n                </Typography>\r\n              }/>\r\n        </ListItem>\r\n      ));\r\n    });\r\n    return content;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List className={classes.list}>\r\n        { listContent() }\r\n      </List>\r\n      {spinMsg && <SplashScreen msg={spinMsg}/>}\r\n      {selectedEatery && <EateryDetailScreen eatery={selectedEatery}/>}\r\n    </>\r\n  );\r\n}\r\n\r\nconst EateriesListScreenWithState = withState({\r\n  component: EateriesListScreen,\r\n  mapStateToProps(appState, {fassets}) { // ... fassets available in ownProps (via withFassets() below)\r\n    return {\r\n      filteredEateries: _eateriesSel.getFilteredEateries(appState),\r\n      filter:           _eateriesSel.getListViewFilter(appState),\r\n      selectedEatery:   _eateriesSel.getSelectedEatery(appState),\r\n      spinMsg:          _eateriesSel.getSpinMsg(appState),\r\n      curUser:          fassets.sel.curUser(appState),\r\n    };\r\n  },\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      showDetail(eateryId) {\r\n        //console.log(`xx showDetail for ${eateryId}`);\r\n        dispatch( _eateriesAct.viewDetail(eateryId) );\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nconst EateriesListScreenWithStyles = withStyles(listStyles)(EateriesListScreenWithState);\r\n\r\nexport default /* EateriesListScreenWithFassets = */ withFassets({\r\n  component: EateriesListScreenWithStyles,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n","import React             from 'react';\r\n\r\nimport Radio             from '@material-ui/core/Radio';\r\nimport RadioGroup        from '@material-ui/core/RadioGroup';\r\nimport FormHelperText    from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel  from '@material-ui/core/FormControlLabel';\r\nimport FormControl       from '@material-ui/core/FormControl';\r\nimport FormLabel         from '@material-ui/core/FormLabel';\r\n\r\nimport PropTypes         from 'prop-types';\r\nimport verify            from '../../verify';\r\n\r\n/**\r\n * An IForm radio container input element that:\r\n *   - defines a common visualization,\r\n *   - manifests validation messages,\r\n *   - interfacing with IForm (accessors, and handlers)\r\n *\r\n * PROPS:\r\n *   - fieldName:     (a string) the iForm field name\r\n *   - iForm:         (an IFormMeta) the iFormMeta object in control\r\n *   - row:           (a boolean) to format buttons in a row (default column)\r\n *   - helperText:    (a string) to display help user text (default none)\r\n *   - children:      (<IRadioField.Op>) the radio options to select from\r\n *   - ...extraProps: (...any) injected directly into <FormControl>\r\n *                    ex: variant=\"standard\"/\"outlined\"/\"filled\" ... AI: currently doesn't work\r\n *\r\n * NOTE: Unlike text input, radios always expose validation msgs (i.e. they\r\n *       are NOT dynamically injected based on touches).\r\n *       ... HOWEVER: validation is seldomly shown \r\n *                    because of the controlled nature of the radio!\r\n *\r\n * Usage:\r\n *   const radioProps = {fieldName: 'myFieldName', iForm};\r\n *   ...\r\n *   <IRadioField {...radioProps} row helperText=\"... help text here\">\r\n *     <IRadioField.Op value=\"1\" label=\"One\" {...radioProps}/>\r\n *     <IRadioField.Op value=\"2\" label=\"Two\" {...radioProps}/>\r\n *   </IRadioField>\r\n */\r\nexport default function IRadioField({fieldName, iForm, row, helperText, children, ...extraProps}) {\r\n\r\n  // validate properties\r\n  const check = verify.prefix('<IRadioField> property violation: ')\r\n\r\n  // ... fieldName\r\n  check(fieldName, 'fieldName is required');\r\n\r\n  // ... iForm\r\n  check(iForm, 'iForm is required');\r\n  check(iForm.handleFieldTouched, `iForm prop MUST be an IFormMeta object ... in fieldName: '${fieldName}'`); // NOTE: duck type check\r\n\r\n  // ... fieldName must be defined in iForm\r\n  const fieldLabel = iForm.getLabel(fieldName);\r\n  check(fieldLabel, `supplied fieldName '${fieldName}' does NOT exist in the supplied iForm: '${iForm.getLabel()}'`);\r\n\r\n  // ... row\r\n  if (row) { // when supplied\r\n    check(row===true || row===false, `row must be a boolean (true/false) ... in fieldName: '${fieldName}'`);\r\n  }\r\n  const rowProp = row ? true : false; // normalize (defaulting to false)\r\n\r\n  // ... helperText (just let PropTypes validate)\r\n\r\n  // ... insure NO clashes with props we use internally\r\n  //     NOTE: we allow helperText to be supplied (and overwrite on error situations)\r\n  //     NOTE: currently have NONE (commented out)\r\n  // ['have', 'none', 'for', 'now'].forEach(\r\n  //   (prop) => check(!extraProps[prop], `'${prop}' prop cannot be used (it is managed internally) ... for fieldName: '${fieldName}'`)\r\n  // );\r\n\r\n  // compute field success/error adornments\r\n  let   msgDom       = null; // optional DOM displaying helperText -or- field validation message\r\n  const managedProps = {};   // NOTE: currently assumed to go in <FormControl>\r\n  const fieldMsg     = iForm.getMsg(fieldName);   // null/undefined for NO msg (i.e. valid/clean)\r\n  if (fieldMsg) { // error adornment\r\n    managedProps.error = true;\r\n    msgDom  = <FormHelperText>{fieldMsg}</FormHelperText>\r\n  }\r\n  else if (helperText) {\r\n    msgDom  = <FormHelperText>{helperText}</FormHelperText>\r\n  }\r\n\r\n  // emit IRadioField\r\n  return (\r\n    <FormControl {...extraProps} {...managedProps}>\r\n      <FormLabel>{fieldLabel}</FormLabel>\r\n      <RadioGroup name={fieldName}\r\n                  row={rowProp}\r\n                  value={iForm.getValue(fieldName)}>\r\n        {children}\r\n      </RadioGroup>\r\n      {msgDom}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nIRadioField.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  row:          PropTypes.bool,\r\n  helperText:   PropTypes.string,\r\n  children:     PropTypes.node.isRequired, // IRadioField content is required (i.e. the IRadioField.Op's)\r\n};\r\n\r\n\r\n\r\nIRadioField.Op = function ({fieldName, iForm, value, label}) {\r\n  const handleFieldChanged = () => iForm.handleFieldChanged(fieldName, value);\r\n  // NOTE: <FormControlLabel> is used as a drop-in-replacement of Radio/Switch/Checkbox DISPLAYING an extra label\r\n  return (\r\n    <FormControlLabel value={value}\r\n                      control={<Radio/>}\r\n                      label={label}\r\n                      checked={value===iForm.getValue(fieldName)}\r\n                      onChange={handleFieldChanged}/>\r\n  );\r\n}\r\n\r\nIRadioField.Op.propTypes = {\r\n  fieldName:    PropTypes.string.isRequired,\r\n  iForm:        PropTypes.any.isRequired,\r\n  value:        PropTypes.string.isRequired,\r\n  label:        PropTypes.string.isRequired,\r\n};\r\n","import React                 from 'react';\r\n\r\nimport withState             from '../../../util/withState';\r\nimport {withStyles}          from '@material-ui/core/styles';\r\nimport withMobileDialog      from '@material-ui/core/withMobileDialog';\r\n\r\nimport eateryFilterFormMeta  from '../eateryFilterFormMeta';\r\nimport ITextField            from '../../../util/iForms/comp/ITextField';\r\nimport IRadioField           from '../../../util/iForms/comp/IRadioField';\r\n\r\nimport Button                from '@material-ui/core/Button';\r\nimport CloseIcon             from '@material-ui/icons/Close';\r\nimport Dialog                from '@material-ui/core/Dialog';\r\nimport DialogContent         from '@material-ui/core/DialogContent';\r\nimport DialogContentText     from '@material-ui/core/DialogContentText';\r\nimport DialogTitle           from '@material-ui/core/DialogTitle';\r\nimport FilterIcon            from '@material-ui/icons/FilterList';\r\nimport FormHelperText        from '@material-ui/core/FormHelperText';\r\nimport Grid                  from '@material-ui/core/Grid';\r\nimport IconButton            from '@material-ui/core/IconButton';\r\nimport InProgress            from '@material-ui/core/LinearProgress';  // -or- '@material-ui/core/CircularProgress';\r\nimport Typography            from '@material-ui/core/Typography';\r\nimport {TransitionSlide}     from '../../../util/Transition';\r\n\r\n\r\nconst styles = theme => ({\r\n\r\n  titleBar: {\r\n    display:         'flex',\r\n    alignItems:      'center', // vertically align title text with close (X) to it's right\r\n    padding:         '10px 15px',\r\n    color:           theme.palette.common.white,\r\n    backgroundColor: theme.palette.primary.main, // theme.palette.primary.main (bluish) or theme.palette.secondary.main (redish)\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  entry: {\r\n    margin:   '30px 0px',\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n\r\n  inProgress: {\r\n    margin: theme.spacing.unit * 4,\r\n  },\r\n\r\n});\r\n\r\nfunction CenterItems({children}) {\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * EateryFilterScreen: gather filter information (selection criteria) \r\n * for our eatery pool view.\r\n */\r\nfunction EateryFilterScreen({iForm, fullScreen, classes}) {\r\n\r\n  const formLabel       = iForm.getLabel();\r\n  const formInProcess   = iForm.inProcess();\r\n  const sortOrderRadioProps = {\r\n    fieldName: 'sortOrder',\r\n    iForm,\r\n  };\r\n\r\n  const formErrMsg = iForm.getMsg();\r\n\r\n  return (\r\n    <Dialog open={true}\r\n            onClose={iForm.handleClose}\r\n            fullScreen={fullScreen}\r\n            TransitionComponent={TransitionSlide}>\r\n\r\n      <form onSubmit={iForm.handleProcess}>\r\n\r\n        <DialogTitle disableTypography className={classes.titleBar}>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            {formLabel}\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={iForm.handleClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n          <DialogContentText className={classes.entry}>\r\n            filter your pool with these settings ...\r\n          </DialogContentText>\r\n\r\n          <div className={classes.entry}>\r\n            <ITextField fieldName=\"distance\"\r\n                        iForm={iForm}\r\n                        autoFocus\r\n                        type=\"number\"\r\n                        helperText=\"prune entries within this distance (leave blank to view entire pool)\"/>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <IRadioField {...sortOrderRadioProps}\r\n                         row\r\n                         helperText=\"sort entries by Restaurant (name) or Distance\">\r\n              <IRadioField.Op value=\"name\"     label=\"Restaurant\" {...sortOrderRadioProps}/>\r\n              <IRadioField.Op value=\"distance\" label=\"Distance\" {...sortOrderRadioProps}/>\r\n            </IRadioField>\r\n          </div>\r\n\r\n          <div className={classes.entry}>\r\n            <CenterItems>\r\n              <Button type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\">\r\n                <FilterIcon className={classes.icon}/>\r\n                Filter Pool\r\n              </Button>\r\n            </CenterItems>\r\n          </div>\r\n\r\n          {formErrMsg && (\r\n             <div className={classes.entry}>\r\n               <FormHelperText error>{formErrMsg}</FormHelperText>\r\n             </div>\r\n           )}\r\n\r\n          {formInProcess && (\r\n             <div className={classes.entry}>\r\n               <InProgress className={classes.inProgress} color=\"secondary\"/>\r\n             </div>\r\n           )}\r\n\r\n        </DialogContent>\r\n\r\n      </form>\r\n\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nconst EateryFilterScreenWithState = withState({\r\n  component: EateryFilterScreen,\r\n  mapStateToProps(appState) {\r\n    return {\r\n      formState: eateryFilterFormMeta.formStateSelector(appState),\r\n    };\r\n  },\r\n  mergeProps(stateProps, dispatchProps, ownProps) {\r\n    return {\r\n      ...ownProps,\r\n    //...stateProps,    // unneeded (in this case) ... wonder: does this impact connect() optimization?\r\n    //...dispatchProps, // ditto\r\n      iForm: eateryFilterFormMeta.IForm(stateProps.formState, \r\n                                        dispatchProps.dispatch),\r\n    };\r\n  },\r\n});\r\n\r\nconst EateryFilterScreenWithStyles = withStyles(styles)(EateryFilterScreenWithState);\r\n\r\n// inject responsive `fullScreen` true/false prop based on screen size\r\n// ... breakpoint screen size: xs, sm (DEFAULT), md, lg, xl\r\nexport default withMobileDialog({breakpoint: 'xs'})(EateryFilterScreenWithStyles);\r\n","import React               from 'react';\r\nimport * as _eateriesSel   from './state';\r\nimport {featureRoute, \r\n        PRIORITY}          from 'feature-router';\r\nimport featureName         from './featureName';\r\nimport EateriesListScreen  from './comp/EateriesListScreen';\r\n//? import EateryDetailScreen  from './comp/EateryDetailScreen'; // ?? these components are NOT compilable yet\r\nimport EateryFilterScreen  from './comp/EateryFilterScreen'; // ?? these components are NOT compilable yet\r\nimport SplashScreen        from '../../util/SplashScreen';\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default [\r\n\r\n  featureRoute({\r\n    priority: PRIORITY.HIGH,\r\n    content({fassets, appState}) {\r\n      // display EateryFilterScreen, when form is active (accomplished by our logic)\r\n      // ... this is done as a priority route, because this screen can be used to\r\n      //     actually change the view - so we display it regarless of the state of the active view\r\n      if (_eateriesSel.isFormFilterActive(appState)) {\r\n        return <EateryFilterScreen/>;\r\n      }\r\n    }\r\n  }),\r\n\r\n  featureRoute({\r\n    content({fassets, appState}) {\r\n\r\n      // allow other down-stream features to route, when the active view is NOT ours\r\n      if (fassets.sel.getView(appState) !== featureName) {\r\n        return null;\r\n      }\r\n      \r\n      // ***\r\n      // *** at this point we know the active view is ours\r\n      // ***\r\n      \r\n      //?????????????????? NOW DONE IN EateriesListScreen\r\n      //? // display anotated SplashScreen, when the spin operation is active\r\n      //? const spinMsg = _eateriesSel.getSpinMsg(appState);\r\n      //? if (spinMsg) {\r\n      //?   return <SplashScreen msg={spinMsg}/>;\r\n      //? }\r\n      \r\n      //?????????????????? NOW DONE IN EateriesListScreen\r\n      //? // display an eatery detail, when one is selected\r\n      //? const selectedEatery = _eateriesSel.getSelectedEatery(appState);\r\n      //? if (selectedEatery) {\r\n      //?   return <EateryDetailScreen eatery={selectedEatery}/>;\r\n      //? }\r\n      \r\n      // fallback: display our EateriesListScreen\r\n      return <EateriesListScreen/>;\r\n    }\r\n  }),\r\n\r\n];\r\n","import React         from 'react';\r\nimport _eateries     from '../featureName';\r\nimport _eateriesAct  from '../actions';\r\n\r\nimport withStyles    from '@material-ui/core/styles/withStyles';\r\nimport {withFassets} from 'feature-u';\r\nimport withState     from '../../../util/withState';\r\n\r\nimport Divider                  from '@material-ui/core/Divider';\r\nimport ListItem                 from '@material-ui/core/ListItem';\r\nimport ListItemIcon             from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction  from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText             from '@material-ui/core/ListItemText';\r\nimport PoolIcon                 from '@material-ui/icons/RestaurantMenu'; // possibilities: Restaurant RestaurantMenu Star StarRate Stars BlurOn AllOut DragIndicator GroupWork Reorder Apps Whatshot\r\nimport SettingsIcon             from '@material-ui/icons/Tune';           // possibilities: Tune PermDataSetting Settings PhonelinkSetup FilterList Filter\r\n\r\n/**\r\n * EateryLeftNavItem: our Eatery entry into the LeftNav.\r\n */\r\nfunction EateryLeftNavItem({classes, changeView, handleFilter}) {\r\n\r\n  // render our menu item\r\n  return (\r\n    <>\r\n      <ListItem button\r\n                onClick={changeView}>\r\n        <ListItemIcon className={classes.major}><PoolIcon/></ListItemIcon>\r\n        <ListItemText primaryTypographyProps={{className:classes.major}} primary=\"Pool\"/>\r\n        <ListItemSecondaryAction onClick={handleFilter}>\r\n          <ListItemIcon className={classes.minor}><SettingsIcon/></ListItemIcon>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider/>\r\n    </>\r\n  );\r\n}\r\n\r\nconst EateryLeftNavItemWithState = withState({\r\n  component: EateryLeftNavItem,\r\n  mapDispatchToProps(dispatch, {fassets}) {// ... fassets available in ownProps (via withFassets() below)\r\n    return {\r\n      changeView() {\r\n        dispatch( fassets.actions.changeView(_eateries) );\r\n      },\r\n      handleFilter() {\r\n        dispatch( _eateriesAct.filterForm.open() );\r\n      },\r\n    };\r\n  },\r\n});\r\n\r\nconst EateryLeftNavItemWithFassets = withFassets({\r\n  component: EateryLeftNavItemWithState,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // ... introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n\r\nconst styles = (theme) => ({\r\n  major: {\r\n    color: theme.palette.secondary.main, // redish\r\n  },\r\n  minor:{\r\n    color: theme.palette.primary.main,   // bluish\r\n  },\r\n});\r\n\r\nexport default /* EateryLeftNavItemWithStyle = */  withStyles(styles)(EateryLeftNavItemWithFassets);\r\n","import React             from 'react';\r\nimport {withFassets}     from 'feature-u';\r\nimport withState         from '../../../util/withState';\r\nimport * as _eateriesSel from '../state';\r\nimport Typography        from '@material-ui/core/Typography';\r\n\r\n/**\r\n * EateriesTitle displaying the eateries pool title\r\n */\r\nfunction EateriesTitle({curUser, filter}) {\r\n  return (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Pool\r\n\r\n      <Typography color=\"inherit\"\r\n                  inline={true}\r\n                  noWrap>\r\n        &nbsp;({curUser.pool})\r\n      </Typography>\r\n\r\n      {filter.distance && \r\n       <Typography color=\"inherit\"\r\n                   noWrap>\r\n         ... within {filter.distance} mile{filter.distance===1?'':'s'}\r\n       </Typography>}\r\n\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst EateriesTitleWithState = withState({\r\n  component: EateriesTitle,\r\n  mapStateToProps(appState, {fassets}) { // ... fassets available in ownProps (via withFassets() below)\r\n    return {\r\n      curUser: fassets.sel.curUser(appState),\r\n      filter:  _eateriesSel.getListViewFilter(appState),\r\n    };\r\n  },\r\n});\r\n\r\nexport default /* EateriesTitleWithFassets = */ withFassets({\r\n  component: EateriesTitleWithState,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n","import React             from 'react';\r\nimport withState         from '../../../util/withState';\r\nimport _eateriesAct      from '../actions';\r\nimport Typography        from '@material-ui/core/Typography';\r\nimport IconButton        from  '@material-ui/core/IconButton';\r\nimport SpinIcon          from  '@material-ui/icons/SwapCalls'; // ... ??  loop, swap_vert, vertical_align_center, done, playlist_add_check, check_box, check, swap_calls, present_to_all \r\n\r\n\r\n/**\r\n * EateriesFooter displaying the spin control\r\n */\r\nfunction EateriesFooter({handleSpin}) {\r\n  return (\r\n    <IconButton color=\"inherit\" onClick={handleSpin}>\r\n      <SpinIcon/>\r\n      <Typography color=\"inherit\" variant=\"subtitle1\">&nbsp;&nbsp;Spin</Typography>\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default /* EateriesFooterWithState = */ withState({\r\n  component: EateriesFooter,\r\n  mapDispatchToProps(dispatch) {\r\n    return {\r\n      handleSpin() {\r\n        dispatch( _eateriesAct.spin() );\r\n      },\r\n    };\r\n  },\r\n});\r\n","import {createFeature}    from 'feature-u';\r\nimport _eateries          from './featureName';\r\nimport _eateriesAct       from './actions'; // TODO: QUIRKINESS of IFormMeta (aggravated by feature-u) ... actions MUST be expanded BEFORE IFormMeta instance (eateryFilterFormMeta)\r\nimport reducer            from './state';\r\nimport * as _eateriesSel  from './state';\r\nimport logic              from './logic';\r\nimport route              from './route';\r\nimport EateryLeftNavItem  from './comp/EateryLeftNavItem';\r\nimport EateriesTitle      from './comp/EateriesTitle';\r\nimport EateriesFooter     from './comp/EateriesFooter';\r\n\r\n\r\n// feature: eateries\r\n//          manage and promotes the eateries view (a list of pooled\r\n//          and filtered) restaurants, with the ability to select an\r\n//          eatery through a random spin.  Selected eateries provides\r\n//          the ability to phone, visit their web site, and navigate\r\n//          to them (full details in README)\r\nexport default createFeature({\r\n  name: _eateries,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    define: {\r\n      'actions.addEatery':     _eateriesAct.dbPool.add,      // addEatery(eateryId)    ... slight naming variation to original action\r\n      'actions.removeEatery':  _eateriesAct.dbPool.remove,   // removeEatery(eateryId) ... slight naming variation to original action\r\n\r\n      'sel.getEateryDbPool':   _eateriesSel.getDbPool, // ... slight naming variation to original selector\r\n    },\r\n\r\n    defineUse: {\r\n      [`AppLayout.LeftNavItem.${_eateries}`]: EateryLeftNavItem, // inject our entry into the leftNav\r\n\r\n      // auxiliary view content for the eateries view\r\n      [`AppLayout.view.${_eateries}`]: {\r\n        TitleComp:  EateriesTitle,\r\n        FooterComp: EateriesFooter,\r\n      },\r\n    }\r\n  },\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // default the app view to be self\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    dispatch( fassets.actions.changeView(_eateries) );\r\n  },\r\n});\r\n","/**\r\n * EateryServiceAPI is a \"pseudo\" interface specifying the EateryService API\r\n * which all implementations (i.e. derivations) must conform.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceAPI {\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.monitorDbEateryPool() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.addEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    throw new Error(`***ERROR*** ${this.constructor.name}.removeEatery() is a required service method that has NOT been implemented`);\r\n  }\r\n\r\n};\r\n","import {createFeature}   from 'feature-u';\r\nimport EateryServiceAPI  from './EateryServiceAPI';\r\n\r\n// feature: eateryService\r\n//          promote a service API that manages a real-time persistent\r\n//          \"Eateries\" DB, through the `eateryService` use contract\r\n//          (full details in README)\r\nexport default createFeature({\r\n  name: 'eateryService',\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    use: [\r\n      ['eateryService', {required: true, type: objectOfTypeEateryServiceAPI}],\r\n    ],\r\n  }\r\n});\r\n\r\nfunction objectOfTypeEateryServiceAPI(fassetsValue) {\r\n  return fassetsValue instanceof EateryServiceAPI ? null : 'object of type EateryServiceAPI, NOT: ' + fassetsValue;\r\n}\r\n","import firebase         from 'firebase';\r\nimport geodist          from 'geodist';\r\nimport EateryServiceAPI from '../EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceFirebase is the **real** EateryServiceAPI derivation\r\n * using the Firebase service APIs.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceFirebase extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = {       // current \"pool\" monitor (initially a placebo)\r\n    pool:   null,          // type: string\r\n    dbRef:  null,          // type: firebase.database.Reference\r\n    wrapUp: () => 'no-op', // type: function(): void ... cleanup existing monitored resources\r\n  };\r\n\r\n\r\n  /**\r\n   * Monitor a set of eateries, within our real-time DB, as defined by\r\n   * the supplied pool.  The real-time monitor is triggered both from\r\n   * an initial population, and when data changes.\r\n   * \r\n   * @param {string} pool the eatery pool identifier to monitor\r\n   * (e.g. 'DateNightPool').\r\n   * \r\n   * @param {(struct: {lat, lng})} baseLoc the location from which to\r\n   * calculate the distance to each eatery\r\n   * \r\n   * @param {function} monitorCB the callback function that\r\n   * communicates the set of monitored eateries.  This function is\r\n   * called both for an initial data population, and whenever data\r\n   * changes.  It has the following signature:\r\n   *  + monitorCB(eateries): void\r\n   */\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) {\r\n\r\n    // close prior monitor (if any)\r\n    this.curPoolMonitor.wrapUp();\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      dbRef: firebase.database().ref(`/pools/${pool}`),\r\n      wrapUp() {\r\n        this.dbRef.off('value');\r\n      }\r\n    };\r\n\r\n    // listen for eatery data changes in the specified pool\r\n    this.curPoolMonitor.dbRef.on('value', (snapshot) => {\r\n\r\n      // conditional logic accommodates an empty pool\r\n      // ... a firebase DB philosophy is that it will NOT store empty data (or collections)\r\n      const eateries = snapshot.val() !== null ? snapshot.val() : {};\r\n\r\n      // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n      for (const eateryId in eateries) {\r\n        const eatery = eateries[eateryId];\r\n        eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n      }\r\n\r\n      // notify our supplied monitorCB\r\n      // console.log(`xx EateryServiceFirebase.monitorDbEateryPool() -and- MOCK RECORDING ... eateries changed for pool '${this.curPoolMonitor.pool}': ${JSON.stringify(eateries)}`);\r\n      monitorCB(eateries);\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Add new Eatery to the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {Eatery} eatery the eatery entry to add\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when add\r\n   * complete and captures async errors.\r\n   */\r\n  addEatery(eatery) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.addEatery() adding eatery: /pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eatery.id}`);\r\n      dbRef.set(eatery)\r\n           .then( () => { // a void resolve indicates the add is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`add eatery (${eatery.id}) to pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the supplied eateryId from the DB being monitored.\r\n   *\r\n   * This method can only be called, once a successful\r\n   * monitorDbEateryPool() has been established, because of the\r\n   * persistent nature of this service.\r\n   * \r\n   * @param {number} eateryId the eatery id to remove\r\n   * \r\n   * @returns {void via promise} a void promise, resolved when remove\r\n   * complete and captures async errors.\r\n   */\r\n  removeEatery(eateryId) {\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceFirebase.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n      // remove the eatery to our DB pool\r\n      // console.log(`xx EateryServiceFirebase.removeEatery() removeing eatery: /pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n\r\n      const dbRef = firebase.database().ref(`/pools/${this.curPoolMonitor.pool}/${eateryId}`);\r\n      dbRef.set(null)\r\n           .then( () => { // a void resolve indicates the remove is complete\r\n           })\r\n           .catch( err => { // unexpected error\r\n             return reject(err.defineAttemptingToMsg(`remove eatery (${eateryId}) from pool ${this.curPoolMonitor.pool}`));\r\n           });\r\n    });\r\n  }\r\n\r\n};\r\n","import {createFeature}       from 'feature-u';\r\nimport featureFlags          from '../../../../featureFlags';\r\nimport EateryServiceFirebase from './EateryServiceFirebase';\r\n\r\n// feature: eateryServiceFirebase\r\n//          defines the real 'eateryService' (via the Firebase API),\r\n//          conditionally promoted when WIFI is available(i.e. **not**\r\n//          mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceFirebase',\r\n\r\n  enabled: featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceFirebase(),\r\n    },\r\n  },\r\n\r\n  appWillStart({fassets, curRootAppElm}) { // initialize FireBase (required by this service)\r\n    fassets.initFireBase();\r\n  },\r\n\r\n});\r\n","import geodist          from 'geodist';\r\nimport EateryServiceAPI from '../EateryServiceAPI';\r\n\r\n/**\r\n * EateryServiceMock is the **mock** EateryServiceAPI derivation.\r\n * \r\n * NOTE: This represents a persistent service of a real-time DB, where\r\n *       the monitored DB is retained between service invocations.\r\n */\r\nexport default class EateryServiceMock extends EateryServiceAPI {\r\n\r\n  /**\r\n   * Our persistent monitor that manages various aspects of a given pool.\r\n   */\r\n  curPoolMonitor = { // current \"pool\" monitor (initially a placebo) ... similar concept to production\r\n    pool:      null, // type: string\r\n    monitorCB: null, // type: client CB function\r\n    eateries:  null, // the actual set of eateries in our pool\r\n  };\r\n\r\n\r\n  monitorDbEateryPool(pool, baseLoc, monitorCB) { // ... see EateryServiceAPI\r\n\r\n    // define our initial pool of eateries (a subset of eateriesMockDB)\r\n    const eateries = initialEateryPoolIds.reduce( (hash, id) => {\r\n      hash[id] = eateriesMockDB[id];\r\n      return hash;\r\n    }, {});\r\n\r\n    // create a new monitor (retaining needed info for subsequent visibility)\r\n    this.curPoolMonitor = {\r\n      pool,\r\n      monitorCB,\r\n      eateries,\r\n    };\r\n\r\n    // supplement eateries with distance from the supplied baseLoc (as the crow flies)\r\n    // ... this mock logic is similar to that of production, but we cheat and do it to our entire DB\r\n    //     as a result it doesn't have to be done again\r\n    for (const eateryId in eateriesMockDB) {\r\n      const eatery = eateriesMockDB[eateryId];\r\n      eatery.distance = geodist([eatery.loc.lat, eatery.loc.lng], [baseLoc.lat, baseLoc.lng]);\r\n    }\r\n\r\n    // notify our supplied monitorCB\r\n    // ... NOTE: the API returns void ... it truly is NOT a promise\r\n    monitorCB(eateries);\r\n\r\n  }\r\n\r\n\r\n  addEatery(eatery) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.addEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('add an Eatery to the DB')\r\n        );\r\n      }\r\n\r\n      // add the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recoginize the change\r\n      // console.log(`xx addEatery: `, eatery);\r\n      this.curPoolMonitor.eateries = {\r\n        ...this.curPoolMonitor.eateries,\r\n        [eatery.id]: eatery\r\n      };\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n    });\r\n  }\r\n\r\n\r\n  removeEatery(eateryId) { // ... see EateryServiceAPI\r\n\r\n    // utilize promise as per API ... resolves: void\r\n    return new Promise( (resolve, reject) => {\r\n\r\n      // verify we are monitoring a pool\r\n      // ... NOTE: same as production service\r\n      if (!this.curPoolMonitor.pool) {\r\n        return reject(\r\n          // unexpected condition\r\n          new Error('***ERROR*** (within app logic) EateryServiceMock.removeEatery(): may only be called once a successful monitorDbEateryPool() has completed.')\r\n            .defineAttemptingToMsg('remove an Eatery from the DB')\r\n        );\r\n      }\r\n\r\n\r\n      // remove the eatery to our DB pool\r\n      // NOTE: this must be immutable to allow redux to recoginize the change\r\n      // console.log(`xx removeEatery: ${eateryId}`);\r\n      const eateries = Object.assign({}, this.curPoolMonitor.eateries);\r\n      delete eateries[eateryId];\r\n      this.curPoolMonitor.eateries = eateries;\r\n\r\n      // notify our monitorCB\r\n      this.curPoolMonitor.monitorCB(this.curPoolMonitor.eateries);\r\n\r\n    });\r\n  }\r\n\r\n};\r\n\r\n\r\n// our initial pool of eateries (a subset of eateriesMockDB)\r\nconst initialEateryPoolIds = [\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n];\r\n\r\n// our MOCK eateries DB pool\r\nexport const eateriesMockDB = {\r\n  \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\": {\r\n    \"addr\": \"2000 Lakeshore Dr Uc250, New Orleans, LA 70148, USA\",\r\n    \"id\": \"ChIJ-6rxFimpIIYRCrq8YVb3Ujs\",\r\n    \"loc\": {\r\n      \"lat\": 30.02439820000001,\r\n      \"lng\": -90.0684455\r\n    },\r\n    \"name\": \"Aramark\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4274750946707028490\",\r\n    \"phone\": \"(504) 280-6079\",\r\n    \"website\": \"https://www.aramark.com/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ01VeXQymIIYRI6lnasCzx3M\": {\r\n    \"addr\": \"724 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ01VeXQymIIYRI6lnasCzx3M\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543,\r\n      \"lng\": -90.0689558\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8342834473727404323\",\r\n    \"phone\": \"(504) 522-5973\",\r\n    \"website\": \"http://www.acmeoyster.com/french-quarter/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ28cfCwymIIYRmTnBVitvmZ0\": {\r\n    \"addr\": \"841 Iberville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ28cfCwymIIYRmTnBVitvmZ0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9553468,\r\n      \"lng\": -90.0698063\r\n    },\r\n    \"name\": \"Deanie's Seafood Restaurant in the French Quarter\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11356230167321196953\",\r\n    \"phone\": \"(504) 581-1316\",\r\n    \"website\": \"https://www.deanies.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\": {\r\n    \"addr\": \"900 Harrison Ave, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJ2_bmEw6vIIYRS7ztDnnLpNg\",\r\n    \"loc\": {\r\n      \"lat\": 30.003912,\r\n      \"lng\": -90.103667\r\n    },\r\n    \"name\": \"Mondo\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15610825929174924363\",\r\n    \"phone\": \"(504) 224-2633\",\r\n    \"website\": \"http://www.mondoneworleans.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\": {\r\n    \"addr\": \"307 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ2ybOvA2mIIYRMRjz-wyjyu4\",\r\n    \"loc\": {\r\n      \"lat\": 29.9544808,\r\n      \"lng\": -90.0665677\r\n    },\r\n    \"name\": \"Café Fleur-De-Lis\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17206744602484348977\",\r\n    \"phone\": \"(504) 529-9641\",\r\n    \"website\": \"http://cafefleurdelis.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6U-QewymIIYRzP5x_fdjwEw\": {\r\n    \"addr\": \"115 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ6U-QewymIIYRzP5x_fdjwEw\",\r\n    \"loc\": {\r\n      \"lat\": 29.954424,\r\n      \"lng\": -90.0695719\r\n    },\r\n    \"name\": \"Red Fish Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5530530259171147468\",\r\n    \"phone\": \"(504) 598-1200\",\r\n    \"website\": \"http://www.redfishgrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\": {\r\n    \"addr\": \"2601 Royal St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJ6b-WfSOmIIYRHRWCCIzhh08\",\r\n    \"loc\": {\r\n      \"lat\": 29.96491200000001,\r\n      \"lng\": -90.051209\r\n    },\r\n    \"name\": \"Mimi's In the Marigny\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5730797042406659357\",\r\n    \"phone\": \"(504) 872-9868\",\r\n    \"website\": \"http://mimismarigny.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ6yNtftWuIIYRJrESGu4C5fM\": {\r\n    \"addr\": \"6100 Hamburg St Suite A, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6yNtftWuIIYRJrESGu4C5fM\",\r\n    \"loc\": {\r\n      \"lat\": 30.020369,\r\n      \"lng\": -90.0767649\r\n    },\r\n    \"name\": \"Yummy Sushi\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=17574456342546133286\",\r\n    \"phone\": \"(504) 309-9401\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\": {\r\n    \"addr\": \"315 S Broad Ave, New Orleans, LA 70119, USA\",\r\n    \"id\": \"ChIJ6yVNhImlIIYR8tQxm8GDdi0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636662,\r\n      \"lng\": -90.0895056\r\n    },\r\n    \"name\": \"Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3275950646514275570\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 3\r\n  },\r\n  \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\": {\r\n    \"addr\": \"1522 Robert E Lee Blvd, New Orleans, LA 70122, USA\",\r\n    \"id\": \"ChIJ6zsQedWuIIYRYmlx6sWCkUw\",\r\n    \"loc\": {\r\n      \"lat\": 30.0207669,\r\n      \"lng\": -90.07682419999999\r\n    },\r\n    \"name\": \"The Füd Bar\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5517334805059037538\",\r\n    \"phone\": \"(504) 309-3284\",\r\n    \"website\": \"http://www.eathappynola.com/\",\r\n    \"distance\": 2\r\n  },\r\n  \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\": {\r\n    \"addr\": \"19130 Rogers Ln, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ76kBGjFcJ4YRwmBQteVXEyk\",\r\n    \"loc\": {\r\n      \"lat\": 30.4735482,\r\n      \"lng\": -90.0887137\r\n    },\r\n    \"name\": \"The Chimes-Covington\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2959806024213618882\",\r\n    \"phone\": \"(985) 892-5396\",\r\n    \"website\": \"http://www.thechimes.com/the-chimes-covington\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\": {\r\n    \"addr\": \"630 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJ7SpQ6RGmIIYRsuU_zP71sBI\",\r\n    \"loc\": {\r\n      \"lat\": 29.9577089,\r\n      \"lng\": -90.0645131\r\n    },\r\n    \"name\": \"Gumbo Shop\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1346846763281016242\",\r\n    \"phone\": \"(504) 525-1486\",\r\n    \"website\": \"http://gumboshop.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\": {\r\n    \"addr\": \"307 Exchange Pl, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8VL0ug2mIIYRDrOWNVA6nhY\",\r\n    \"loc\": {\r\n      \"lat\": 29.9546927,\r\n      \"lng\": -90.067018\r\n    },\r\n    \"name\": \"Green Goddess\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1629804231325561614\",\r\n    \"phone\": \"(504) 301-3347\",\r\n    \"website\": \"http://greengoddessrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8W3hFQymIIYRQObKMMNMyRo\": {\r\n    \"addr\": \"808 Bienville St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJ8W3hFQymIIYRQObKMMNMyRo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9555463,\r\n      \"lng\": -90.06883859999999\r\n    },\r\n    \"name\": \"GW Fins\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1930158316525905472\",\r\n    \"phone\": \"(504) 581-3467\",\r\n    \"website\": \"http://gwfins.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\": {\r\n    \"addr\": \"125 Camp St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJ8dWgxgymIIYRyt8bRdLUXXU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9520226,\r\n      \"lng\": -90.0687354\r\n    },\r\n    \"name\": \"Red Gravy\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8457149674839334858\",\r\n    \"phone\": \"(504) 561-8844\",\r\n    \"website\": \"http://redgravycafe.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\": {\r\n    \"addr\": \"70456 LA-21 E, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJ9Uw1l75cJ4YRXJ2HT-BttUU\",\r\n    \"loc\": {\r\n      \"lat\": 30.4537876,\r\n      \"lng\": -90.1340372\r\n    },\r\n    \"name\": \"Subway Restaurants\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5023041769576045916\",\r\n    \"phone\": \"(985) 875-0624\",\r\n    \"website\": \"http://order.subway.com/Stores/Redirect.aspx?s=28364&sa=0&f=r&utm_source=google&utm_medium=local&utm_term=0&utm_content=28364&utm_campaign=fwh-local-remote-order&cid=0:0:0:0:0:0&segment_code=0\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJDVhB0w2mIIYRZVLScBsQtTo\": {\r\n    \"addr\": \"739 Conti St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDVhB0w2mIIYRZVLScBsQtTo\",\r\n    \"loc\": {\r\n      \"lat\": 29.956247,\r\n      \"lng\": -90.067626\r\n    },\r\n    \"name\": \"Oceana Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4230305135027442277\",\r\n    \"phone\": \"(504) 525-6002\",\r\n    \"website\": \"http://www.oceanagrill.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJDxnIrtelIIYR8sJkRU4JuTM\": {\r\n    \"addr\": \"1732 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJDxnIrtelIIYR8sJkRU4JuTM\",\r\n    \"loc\": {\r\n      \"lat\": 29.9369517,\r\n      \"lng\": -90.076805\r\n    },\r\n    \"name\": \"The Avenue Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3727020398402126578\",\r\n    \"phone\": \"(504) 586-9243\",\r\n    \"website\": \"http://theavenuepub.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJDyC9Ig6mIIYRDWmrSR08N54\": {\r\n    \"addr\": \"718 St Peter, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJDyC9Ig6mIIYRDWmrSR08N54\",\r\n    \"loc\": {\r\n      \"lat\": 29.9582008,\r\n      \"lng\": -90.0652973\r\n    },\r\n    \"name\": \"Pat O'Brien's\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11400647078199388429\",\r\n    \"phone\": \"(504) 525-4823\",\r\n    \"website\": \"http://www.patobriens.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJETttTjKkIIYRfnaTcqDqbnw\": {\r\n    \"addr\": \"3128 Magazine St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJETttTjKkIIYRfnaTcqDqbnw\",\r\n    \"loc\": {\r\n      \"lat\": 29.924039,\r\n      \"lng\": -90.086011\r\n    },\r\n    \"name\": \"The Rum House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8966361882979169918\",\r\n    \"phone\": \"(504) 941-7560\",\r\n    \"website\": \"http://www.therumhouse.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJFYDeXQymIIYRh1Cion6Ta9I\": {\r\n    \"addr\": \"716 Iberville St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJFYDeXQymIIYRh1Cion6Ta9I\",\r\n    \"loc\": {\r\n      \"lat\": 29.954206,\r\n      \"lng\": -90.068728\r\n    },\r\n    \"name\": \"Dickie Brennan's Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=15162374742576615559\",\r\n    \"phone\": \"(504) 522-2467\",\r\n    \"website\": \"http://www.dickiebrennanssteakhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\": {\r\n    \"addr\": \"72011 Holly St, Abita Springs, LA 70420, USA\",\r\n    \"id\": \"ChIJG_d8TP5eJ4YR6wK6RwXBFkc\",\r\n    \"loc\": {\r\n      \"lat\": 30.47869790000001,\r\n      \"lng\": -90.0391606\r\n    },\r\n    \"name\": \"Abita Brew Pub\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5122493854602887915\",\r\n    \"phone\": \"(985) 892-5837\",\r\n    \"website\": \"http://www.abitabrewpub.com/\",\r\n    \"distance\": 32\r\n  },\r\n  \"ChIJO8UE__pZJ4YROei1_1_xklM\": {\r\n    \"addr\": \"1917 Lakeshore Dr, Mandeville, LA 70448, USA\",\r\n    \"id\": \"ChIJO8UE__pZJ4YROei1_1_xklM\",\r\n    \"loc\": {\r\n      \"lat\": 30.3524862,\r\n      \"lng\": -90.0674878\r\n    },\r\n    \"name\": \"Rips On the Lake\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=6022141046362073145\",\r\n    \"phone\": \"(985) 727-2829\",\r\n    \"website\": \"http://www.ripsonthelake.com/\",\r\n    \"distance\": 23\r\n  },\r\n  \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\": {\r\n    \"addr\": \"200 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJRQDMLA2mIIYR-ZQnRWmSdnU\",\r\n    \"loc\": {\r\n      \"lat\": 29.9510068,\r\n      \"lng\": -90.0674083\r\n    },\r\n    \"name\": \"The Ruby Slipper Cafe\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8464113530518869241\",\r\n    \"phone\": \"(504) 525-9355\",\r\n    \"website\": \"http://www.therubyslippercafe.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJT4MvDBKmIIYRFjCBCX693Yc\": {\r\n    \"addr\": \"534 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJT4MvDBKmIIYRFjCBCX693Yc\",\r\n    \"loc\": {\r\n      \"lat\": 29.955558,\r\n      \"lng\": -90.065077\r\n    },\r\n    \"name\": \"NOLA Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9790189513996316694\",\r\n    \"phone\": \"(504) 522-6652\",\r\n    \"website\": \"http://emerilsrestaurants.com/nola\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJTz6VoQumIIYRAXvVrezBp-U\": {\r\n    \"addr\": \"123 Baronne St, New Orleans, LA 70112, USA\",\r\n    \"id\": \"ChIJTz6VoQumIIYRAXvVrezBp-U\",\r\n    \"loc\": {\r\n      \"lat\": 29.9538764,\r\n      \"lng\": -90.0716274\r\n    },\r\n    \"name\": \"Domenica\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16548408578069068545\",\r\n    \"phone\": \"(504) 648-6020\",\r\n    \"website\": \"http://www.domenicarestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\": {\r\n    \"addr\": \"1403 Washington Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJW3d2Wc2lIIYRu-qs_NaSOkg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9287839,\r\n      \"lng\": -90.08421849999999\r\n    },\r\n    \"name\": \"Commander's Palace\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5204633771439876795\",\r\n    \"phone\": \"(504) 899-8221\",\r\n    \"website\": \"https://www.commanderspalace.com/\",\r\n    \"distance\": 6\r\n  },\r\n  \"ChIJWegGCA6mIIYRYAiMKN4T4CM\": {\r\n    \"addr\": \"713 St Louis St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJWegGCA6mIIYRYAiMKN4T4CM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95674039999999,\r\n      \"lng\": -90.06639969999999\r\n    },\r\n    \"name\": \"Antoine's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2585088030994597984\",\r\n    \"phone\": \"(504) 581-4422\",\r\n    \"website\": \"http://www.antoines.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\": {\r\n    \"addr\": \"365 Canal St Suite 220, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJX0qVUw2mIIYRNZcBBOu8Xfs\",\r\n    \"loc\": {\r\n      \"lat\": 29.95115109999999,\r\n      \"lng\": -90.0653869\r\n    },\r\n    \"name\": \"Morton's The Steakhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18112840993924552501\",\r\n    \"phone\": \"(504) 566-0221\",\r\n    \"website\": \"http://www.mortons.com/neworleans/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\": {\r\n    \"addr\": \"547 St Ann St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJXUB3oBGmIIYRDRcvPi-pdDM\",\r\n    \"loc\": {\r\n      \"lat\": 29.95826729999999,\r\n      \"lng\": -90.0629094\r\n    },\r\n    \"name\": \"Stanley Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3707774413604591373\",\r\n    \"phone\": \"(504) 587-0093\",\r\n    \"website\": \"http://stanleyrestaurant.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\": {\r\n    \"addr\": \"6025 Pinnacle Pkwy, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJXXjcfZhcJ4YRWnFiE4ofXes\",\r\n    \"loc\": {\r\n      \"lat\": 30.444494,\r\n      \"lng\": -90.12936499999999\r\n    },\r\n    \"name\": \"Texas Roadhouse\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16959746449638322522\",\r\n    \"phone\": \"(985) 867-8008\",\r\n    \"website\": \"https://www.texasroadhouse.com/restaurant-locations/louisiana/covington\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJYbYLMBimIIYR_jUx5ds4Quo\": {\r\n    \"addr\": \"536 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJYbYLMBimIIYR_jUx5ds4Quo\",\r\n    \"loc\": {\r\n      \"lat\": 29.9632722,\r\n      \"lng\": -90.0578685\r\n    },\r\n    \"name\": \"Three Muses\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=16880116870432241150\",\r\n    \"phone\": \"(504) 252-4801\",\r\n    \"website\": \"http://www.3musesnola.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\": {\r\n    \"addr\": \"801 Chartres St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJaS5FoBGmIIYRTXOjqm3XxI0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9583835,\r\n      \"lng\": -90.063105\r\n    },\r\n    \"name\": \"Muriel's Jackson Square\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10215526720797373261\",\r\n    \"phone\": \"(504) 568-1885\",\r\n    \"website\": \"http://www.muriels.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\": {\r\n    \"addr\": \"6300 Argonne Blvd, New Orleans, LA 70124, USA\",\r\n    \"id\": \"ChIJaVmoJg6vIIYR9iB3FoxFfEQ\",\r\n    \"loc\": {\r\n      \"lat\": 30.004869,\r\n      \"lng\": -90.102976\r\n    },\r\n    \"name\": \"The Velvet Cactus\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=4934895759665864950\",\r\n    \"phone\": \"(504) 301-2083\",\r\n    \"website\": \"http://www.thevelvetcactus.com/\",\r\n    \"distance\": 1\r\n  },\r\n  \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\": {\r\n    \"addr\": \"333 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJf-CSq3SmIIYR1QNnxY9r5wo\",\r\n    \"loc\": {\r\n      \"lat\": 29.950587,\r\n      \"lng\": -90.07044619999999\r\n    },\r\n    \"name\": \"Luke\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=785714925235798997\",\r\n    \"phone\": \"(504) 378-2840\",\r\n    \"website\": \"http://www.lukeneworleans.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJfV2h73KmIIYRRDpBV-crpB8\": {\r\n    \"addr\": \"401 Poydras St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJfV2h73KmIIYRRDpBV-crpB8\",\r\n    \"loc\": {\r\n      \"lat\": 29.949065,\r\n      \"lng\": -90.06708809999999\r\n    },\r\n    \"name\": \"Mother's Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2279995583957645892\",\r\n    \"phone\": \"(504) 523-9656\",\r\n    \"website\": \"http://www.mothersrestaurant.net/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\": {\r\n    \"addr\": \"613 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJgTgvHA6mIIYR8-Hw_kHU-f0\",\r\n    \"loc\": {\r\n      \"lat\": 29.9575423,\r\n      \"lng\": -90.0652683\r\n    },\r\n    \"name\": \"The Court of Two Sisters\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=18300891940711883251\",\r\n    \"phone\": \"(504) 522-7261\",\r\n    \"website\": \"http://www.courtoftwosisters.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJi2AxW3SmIIYRmML7jsbqtb8\": {\r\n    \"addr\": \"701 St Charles Ave, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJi2AxW3SmIIYRmML7jsbqtb8\",\r\n    \"loc\": {\r\n      \"lat\": 29.947316,\r\n      \"lng\": -90.07156100000002\r\n    },\r\n    \"name\": \"Herbsaint\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=13814205570552152728\",\r\n    \"phone\": \"(504) 524-4114\",\r\n    \"website\": \"http://www.herbsaint.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJiUWE9A2mIIYRngo31C8qPSw\": {\r\n    \"addr\": \"416 Chartres St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJiUWE9A2mIIYRngo31C8qPSw\",\r\n    \"loc\": {\r\n      \"lat\": 29.955348,\r\n      \"lng\": -90.0655\r\n    },\r\n    \"name\": \"K-Paul's Louisiana Kitchen\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=3187750496160385694\",\r\n    \"phone\": \"(504) 596-2530\",\r\n    \"website\": \"http://www.kpauls.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJnUfNIiOmIIYRibUzWhx-PBg\": {\r\n    \"addr\": \"2440 Chartres St, New Orleans, LA 70117, USA\",\r\n    \"id\": \"ChIJnUfNIiOmIIYRibUzWhx-PBg\",\r\n    \"loc\": {\r\n      \"lat\": 29.9636919,\r\n      \"lng\": -90.0529387\r\n    },\r\n    \"name\": \"New Orleans Cake Café & Bakery\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1746409415750432137\",\r\n    \"phone\": \"(504) 943-0010\",\r\n    \"website\": \"http://www.nolacakes.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\": {\r\n    \"addr\": \"1202 N Hwy 190, Covington, LA 70433, USA\",\r\n    \"id\": \"ChIJnYiUJxtcJ4YRkAFmz9vshEU\",\r\n    \"loc\": {\r\n      \"lat\": 30.44807140000001,\r\n      \"lng\": -90.0815896\r\n    },\r\n    \"name\": \"Acme Oyster House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=5009389114364395920\",\r\n    \"phone\": \"(985) 246-6155\",\r\n    \"website\": \"http://www.acmeoyster.com/\",\r\n    \"distance\": 30\r\n  },\r\n  \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\": {\r\n    \"addr\": \"800 Tchoupitoulas St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJp6mGj3GmIIYRfS0qjpoGsmo\",\r\n    \"loc\": {\r\n      \"lat\": 29.944616,\r\n      \"lng\": -90.067286\r\n    },\r\n    \"name\": \"Emeril's New Orleans\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=7688214774754717053\",\r\n    \"phone\": \"(504) 528-9393\",\r\n    \"website\": \"http://emerilsrestaurants.com/emerils-new-orleans\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJpdlCODylIIYRyeE-wYHtahE\": {\r\n    \"addr\": \"626 S Carrollton Ave, New Orleans, LA 70118, USA\",\r\n    \"id\": \"ChIJpdlCODylIIYRyeE-wYHtahE\",\r\n    \"loc\": {\r\n      \"lat\": 29.94384989999999,\r\n      \"lng\": -90.1339165\r\n    },\r\n    \"name\": \"The Camellia Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1255076587724792265\",\r\n    \"phone\": \"(504) 309-2679\",\r\n    \"website\": \"https://www.facebook.com/pages/Camellia-Grill/104113072958918?rf=250301408353469\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJryxqrxCmIIYRtUFAh4d96BY\": {\r\n    \"addr\": \"1201 Royal St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJryxqrxCmIIYRtUFAh4d96BY\",\r\n    \"loc\": {\r\n      \"lat\": 29.96209660000001,\r\n      \"lng\": -90.06116809999999\r\n    },\r\n    \"name\": \"Verti Marte\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=1650707284474479029\",\r\n    \"phone\": \"(504) 525-4767\",\r\n    \"website\": \"not-in-search\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJs_quaAymIIYRUwRs2-LHWqA\": {\r\n    \"addr\": \"144 Bourbon St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJs_quaAymIIYRUwRs2-LHWqA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9545625,\r\n      \"lng\": -90.0691287\r\n    },\r\n    \"name\": \"Bourbon House\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11554767571130254419\",\r\n    \"phone\": \"(504) 522-0111\",\r\n    \"website\": \"http://www.bourbonhouse.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJt2f3WgymIIYRb1B1S_gWc3I\": {\r\n    \"addr\": \"201 Royal St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJt2f3WgymIIYRb1B1S_gWc3I\",\r\n    \"loc\": {\r\n      \"lat\": 29.9543868,\r\n      \"lng\": -90.0683629\r\n    },\r\n    \"name\": \"Mr. B's Bistro\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=8246960598319190127\",\r\n    \"phone\": \"(504) 523-2078\",\r\n    \"website\": \"http://www.mrbsbistro.com/\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\": {\r\n    \"addr\": \"717 Orleans St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJu2hvxRGmIIYRaS0qajrz0ZE\",\r\n    \"loc\": {\r\n      \"lat\": 29.95864749999999,\r\n      \"lng\": -90.0645742\r\n    },\r\n    \"name\": \"Roux on Orleans Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10507446837846879593\",\r\n    \"phone\": \"(504) 571-4604\",\r\n    \"website\": \"http://www.bourbonorleans.com/restaurant-dining.php\",\r\n    \"distance\": 4\r\n  },\r\n  \"ChIJuwqeNamlIIYRiCYSjKciG5c\": {\r\n    \"addr\": \"4905 Freret St, New Orleans, LA 70115, USA\",\r\n    \"id\": \"ChIJuwqeNamlIIYRiCYSjKciG5c\",\r\n    \"loc\": {\r\n      \"lat\": 29.935024,\r\n      \"lng\": -90.1074596\r\n    },\r\n    \"name\": \"Cure\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=10888334627103188616\",\r\n    \"phone\": \"(504) 302-2357\",\r\n    \"website\": \"http://curenola.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\": {\r\n    \"addr\": \"800 Magazine St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJv2VvX3GmIIYRlCIIn4WtIYY\",\r\n    \"loc\": {\r\n      \"lat\": 29.945088,\r\n      \"lng\": -90.069051\r\n    },\r\n    \"name\": \"Pêche Seafood Grill\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=9665197064724161172\",\r\n    \"phone\": \"(504) 522-1744\",\r\n    \"website\": \"https://www.pecherestaurant.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\": {\r\n    \"addr\": \"201 Julia St, New Orleans, LA 70130, USA\",\r\n    \"id\": \"ChIJvTnAEW6mIIYRqA7o0JRIRyA\",\r\n    \"loc\": {\r\n      \"lat\": 29.9444575,\r\n      \"lng\": -90.0647824\r\n    },\r\n    \"name\": \"Mulate's | The Original Cajun Restaurant\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=2325907536557379240\",\r\n    \"phone\": \"(504) 522-1492\",\r\n    \"website\": \"https://www.mulates.com/\",\r\n    \"distance\": 5\r\n  },\r\n  \"ChIJzXUQJhimIIYR7wBw72LWWZs\": {\r\n    \"addr\": \"508 Frenchmen St, New Orleans, LA 70116, USA\",\r\n    \"id\": \"ChIJzXUQJhimIIYR7wBw72LWWZs\",\r\n    \"loc\": {\r\n      \"lat\": 29.962781,\r\n      \"lng\": -90.057801\r\n    },\r\n    \"name\": \"The Maison\",\r\n    \"navUrl\": \"https://maps.google.com/?cid=11194214069218312431\",\r\n    \"phone\": \"(504) 371-5543\",\r\n    \"website\": \"http://www.maisonfrenchmen.com/\",\r\n    \"distance\": 4\r\n  },\r\n};\r\n\r\n\r\n// our discovery list (used by DiscoveryServiceMock)\r\nexport const discoverySearchPage1 = {\r\n  pagetoken: 'THERE_IS_MORE',\r\n  discoveries: []\r\n};\r\nexport const discoverySearchPage2 = {\r\n  pagetoken: null, // no mo pages\r\n  discoveries: []\r\n};\r\nconst discoveryPagingDivision_eateryId = \"ChIJTz6VoQumIIYRAXvVrezBp-U\";\r\nlet divisionHit = false;\r\nfor (const eateryId in eateriesMockDB) {\r\n  const eatery = eateriesMockDB[eateryId];\r\n  if (eatery.id === discoveryPagingDivision_eateryId)\r\n    divisionHit = true;\r\n  if (!divisionHit) \r\n    discoverySearchPage1.discoveries.push(eatery);\r\n  else\r\n    discoverySearchPage2.discoveries.push(eatery);\r\n}\r\n","import {createFeature}    from 'feature-u';\r\nimport featureFlags       from '../../../../featureFlags';\r\nimport EateryServiceMock  from './EateryServiceMock';\r\n\r\n// feature: eateryServiceMock\r\n//          defines the mock 'eateryService' implementation,\r\n//          conditionally promoted when WIFI is NOT available(i.e. mocking)\r\nexport default createFeature({\r\n  name:    'eateryServiceMock',\r\n\r\n  enabled: !featureFlags.useWIFI,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n    defineUse: {\r\n      'eateryService': new EateryServiceMock(),\r\n    },\r\n  },\r\n\r\n});\r\n","import {generateActions} from 'action-u';\r\nimport _bootstrap        from './featureName';\r\n\r\nexport default generateActions.root({\r\n                   // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n  [_bootstrap]: { // actions(): Action ... the root IS an action (e.g. bootstrap() action)\r\n                   // > start boostrap initialization process\r\n                   actionMeta: {},\r\n\r\n    setStatus: { // actions.setStatus(statusMsg): Action\r\n                 // > set bootstrap status (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n                 actionMeta: {\r\n                   traits: ['statusMsg'],\r\n                 },\r\n    },\r\n\r\n    // the fundamental action that indicates the bootstrap process is complete\r\n    // ... monitored by down-stream features (to start the app running),\r\n    complete: { // actions.complete(): Action\r\n                // > bootstrap is complete and app is ready to start\r\n                actionMeta: {},\r\n    },\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'bootstrap';\r\n","import {createLogic}      from 'redux-logic';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\nimport discloseError      from '../../../util/discloseError';\r\n\r\n/**\r\n * Administer the \"bootstrap\" initialization process, initiated by\r\n * dispatching the `bootstrap()` action.\r\n * \r\n * A bootstrapFn is a client-specific critical-path initialization that\r\n * must be completed before the app can run.\r\n * \r\n * Bootstraps can be supplied by any number of features, under the\r\n * `'bootstrap.*'` fassets use contract.  These are functions (created\r\n * through `createBootstrapFn()`), that perform any critical-path\r\n * client-specific initialization.  All bootstraps will run to\r\n * completion before this administrative process is finished (as\r\n * denoted by the `bootstrap.complete()` action).\r\n * \r\n * Actions that are emitted by this process are:\r\n * \r\n *  - bootstrap.setStatus(statusMsg)\r\n *  \r\n *    Status is a human interpretable representation of the bootstrap\r\n *    process (e.g. 'Waiting for bla bla bla' -or- 'COMPLETE').\r\n * \r\n *    This status is used by our SplashScreen, informing the user\r\n *    of what is going on.\r\n * \r\n *  - client-specific actions\r\n * \r\n *    These actions can optionally emitted by client-specific\r\n *    bootstrapFns.  As an example, a device feature's bootstrapFn may\r\n *    need to retain it's GPS location.\r\n * \r\n *  - bootstrap.complete()\r\n * \r\n *    This is a **fundamental result** of the bootstrap process\r\n *    completion.  It indications that all bootstraps have completed,\r\n *    and the app is fully initialized and ready to run.\r\n * \r\n *    This action is typically monitored by an external feature to\r\n *    start the app.\r\n */\r\nexport const bootstrap = createLogic({\r\n\r\n  name: `${_bootstrap}`,        // our featureName IS the module name (bootstrap)\r\n  type: String(_bootstrapAct),  // our base actions IS the bootstrap() action\r\n  warnTimeout: 0, // long-running process (runs till all bootstrap initialization has completed)\r\n  \r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n\r\n    // identify the various bootstrap items to process\r\n    // ... employing our use contract\r\n    const bootstrapFns = fassets.get('bootstrap.*'); // bootstrapFn[]\r\n\r\n    // initialize all bootstrapFns to an un-processed status\r\n    bootstrapFns.forEach( (bootstrapFn) => bootstrapFn.complete = false );\r\n\r\n    // helper to \"wrapup\" when all bootstrap initialization has completed\r\n    function wrapup() {\r\n      dispatch( _bootstrapAct.setStatus('COMPLETE') ); // maintain our status as complete\r\n      dispatch( _bootstrapAct.complete() );            // the fundamental action that triggers downstream processes\r\n      done();\r\n    }\r\n\r\n    // no-op if there are NO bootstrapFns ... there is nothing to do\r\n    if (bootstrapFns.length === 0) {\r\n      wrapup();\r\n      return;\r\n    }\r\n\r\n    // helper that monitors the completion of each bootstrapFn\r\n    // ... optionally with the supplied err\r\n    function bootstrapFnFinished(bootstrapFn, err=null) {\r\n\r\n      // mark bootstrapFn as completed\r\n      // ... unless there is an unexpected error\r\n      if (!err || !err.isUnexpected()) {\r\n        bootstrapFn.complete = true;\r\n      }\r\n\r\n      // handle error conditions\r\n      if (err) {\r\n        // add the \"what\" context to this raw error\r\n        err.defineAttemptingToMsg(bootstrapFn.bootstrapWhat);\r\n\r\n        // disclose the error to the user -and- log it\r\n        discloseError({err, logIt:true});\r\n      }\r\n\r\n      // change our status to one of the \"open\" un-processed bootstrapFns\r\n      // ... giving user visibility of what is being done\r\n      // ... e.g. 'Waiting for bla bla bla'\r\n      const nextBootstrapFn = bootstrapFns.find( (bootstrapFn) => !bootstrapFn.complete );\r\n      if (nextBootstrapFn) {\r\n        dispatch( _bootstrapAct.setStatus(nextBootstrapFn.bootstrapWhat) );\r\n      }\r\n\r\n      // when ALL bootstrapFns have completed, we are done!!!\r\n      // ... we have successfully initialized ALL bootstrapFns\r\n      // ... otherwise we keep going\r\n      //     - even when we are hung with one bootstrapFn that errored\r\n      //       ... because this process is a critical path that must complete\r\n      //       ... there is no subsequent work that will be done in the entire app\r\n      if (!nextBootstrapFn) {\r\n        wrapup();\r\n      }\r\n\r\n    }\r\n\r\n    // \"prime the pump\" by setting our status to the FIRST bootstrapFn\r\n    // ... giving user visibility of what is being done\r\n    // ... e.g. 'Waiting for bla bla bla'\r\n    dispatch( _bootstrapAct.setStatus(bootstrapFns[0].bootstrapWhat) );\r\n    \r\n    // asynchronously kick off each each bootstrapFn process\r\n    // ... via promise\r\n    bootstrapFns.forEach(bootstrapFn => {\r\n      bootstrapFn({getState, dispatch, fassets})\r\n        .then( () => {\r\n          // console.log(`xx resolving bootstrapFn IN logic processor ... bootstrap.${bootstrapFn.bootstrapWhat}`);\r\n          bootstrapFnFinished(bootstrapFn);\r\n        })\r\n        .catch( (err) => {\r\n          // console.log(`xx error caught invoking bootstrap.${bootstrapFn.bootstrapWhat}: `, err);\r\n          bootstrapFnFinished(bootstrapFn, err);\r\n        });\r\n    });\r\n\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  bootstrap,\r\n];\r\n","import {combineReducers}  from 'redux';\r\nimport {reducerHash}      from 'astx-redux-util';\r\nimport {slicedReducer}    from 'feature-redux';\r\nimport _bootstrap         from './featureName';\r\nimport _bootstrapAct      from './actions';\r\n\r\n\r\n// ***\r\n// *** Our feature reducer, managing state for the bootstrap process.\r\n// ***\r\nconst reducer = slicedReducer(_bootstrap, combineReducers({\r\n\r\n  // status: string ... bootstrap status - 'Waiting for bla bla bla' -or- 'COMPLETE'\r\n  //                    - VISIBLE in the SplashScreen startup\r\n  //                      ... via selector: getBootstrapStatusMsg(appState)\r\n  //                    - USED to determine when our app is ready to start\r\n  //                      ... via selector: isBootstrapComplete(appState)\r\n  status: reducerHash({\r\n    [_bootstrapAct.setStatus]: (state, action) => action.statusMsg,\r\n  }, 'Waiting for App to start'), // initialState\r\n\r\n}) );\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                               /** Our feature state root (via slicedReducer as a single-source-of-truth) */\r\nconst getFeatureState        = (appState) => reducer.getSlicedState(appState);\r\nconst gfs = getFeatureState;   // ... concise alias (used internally)\r\n\r\n\r\n                                     /** Is app ready to start (based on our bootstrap status): boolean */\r\nexport const isBootstrapComplete   = (appState) => gfs(appState).status === 'COMPLETE';\r\n                                     /** Bootstrap status message: string ('Waiting for bla bla bla' -or- 'COMPLETE') */\r\nexport const getBootstrapStatusMsg = (appState) => gfs(appState).status;\r\n","import React                   from 'react';\r\nimport {isBootstrapComplete,\r\n        getBootstrapStatusMsg} from './state';\r\nimport {featureRoute, \r\n        PRIORITY}              from 'feature-router';\r\nimport SplashScreen            from '../../../util/SplashScreen';\r\n\r\n\r\n// ***\r\n// *** The routes for this feature.\r\n// ***\r\n\r\nexport default featureRoute({\r\n\r\n  priority: PRIORITY.HIGH+10,\r\n\r\n  content({fassets, appState}) {\r\n\r\n    // promote a simple SplashScreen (with status) until the bootstrap process is complete\r\n    // NOTE: Errors from bootstrap hooks are promoted through independent user notifications (toasts)\r\n    if (!isBootstrapComplete(appState)) {\r\n      // console.log(`xx bootstrap feature router ... NOT COMPLETE: route -> SplashScreen with msg: ${getBootstrapStatusMsg(appState)}`);\r\n      return <SplashScreen msg={getBootstrapStatusMsg(appState)}/>;\r\n    }\r\n\r\n    return null;\r\n  },\r\n\r\n});\r\n","import {createFeature}       from 'feature-u';\r\nimport _bootstrap            from './featureName';\r\nimport {isFassetBootstrapFn} from './bootstrapFn';\r\nimport _bootstrapAct         from './actions';\r\nimport logic                 from './logic';\r\nimport route                 from './route';\r\nimport reducer               from './state';\r\n\r\n// feature: bootstrap\r\n//          initialize the app through a critical-path app initialization\r\n//          process that must complete before the app can run, using the\r\n//          `'bootstrap.*'` fassets use contract (full details in README)\r\nexport default createFeature({\r\n  name: _bootstrap,\r\n\r\n  reducer,\r\n  logic,\r\n  route,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    // the 'bootstrap.*' use contract (see 'bootstrap' logic module)\r\n    use: [\r\n      ['bootstrap.*', {required: false, type: isFassetBootstrapFn}],\r\n    ],\r\n\r\n\r\n    // various public \"push\" resources\r\n    define: {\r\n\r\n      // *** public actions ***\r\n                                   // the fundamental action, \r\n                                   // monitored by down-stream features (e.g. authorization),\r\n                                   // logically starting our app running!\r\n      'actions.bootstrapComplete': _bootstrapAct.complete, // ... slight naming variation to original action\r\n\r\n    }\r\n  },\r\n\r\n  appDidStart({fassets, appState, dispatch}) {\r\n    // dispatch our base bootstrap action, that \"kicks off\" the app's bootstrap initialization process\r\n    dispatch( _bootstrapAct() ); // ... this base \"actions\" is the bootstrap action\r\n  }\r\n\r\n});\r\n","import {generateActions} from 'action-u';\r\nimport _layout           from './featureName';\r\n\r\nexport default generateActions.root({\r\n  [_layout]: { // prefix all actions with our feature name, guaranteeing they unique app-wide!\r\n\r\n    changeView: {  // actions.changeView(viewName): Action\r\n                   // > change the currentView to the supplied viewName.\r\n                   actionMeta: {\r\n                     traits: ['viewName'],\r\n                   },\r\n    },\r\n\r\n  },\r\n});\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'layout';\r\n","import {reducerHash}      from 'astx-redux-util';\r\nimport {slicedReducer}    from 'feature-redux';\r\nimport _layoutAct         from './actions';\r\n\r\n// ***\r\n// *** Our feature reducer, managing the currentView state.\r\n// ***\r\n\r\nconst reducer = slicedReducer('view.currentView', reducerHash({\r\n  [_layoutAct.changeView]: (state, action) => action.viewName,\r\n}, 'uninitialized') ); // initialState\r\n\r\nexport default reducer;\r\n\r\n\r\n// ***\r\n// *** Various Selectors\r\n// ***\r\n\r\n                        // NOTE: in this case, our feature state root IS our currentView (very simple)!\r\n                        //       ... we use slicedReducer as a single-source-of-truth\r\nexport const getView  = (appState) => reducer.getSlicedState(appState);\r\n","import React           from 'react';\r\n\r\nimport {withFassets }  from 'feature-u';\r\nimport withStyles      from '@material-ui/core/styles/withStyles';\r\n\r\nimport AppBar          from '@material-ui/core/AppBar';\r\nimport Drawer          from '@material-ui/core/Drawer';\r\nimport List            from '@material-ui/core/List';\r\nimport Toolbar         from '@material-ui/core/Toolbar';\r\nimport Typography      from '@material-ui/core/Typography';\r\n\r\n\r\nlet _openLeftNav = null; // expose our inner function\r\n\r\n/**\r\n * Open our left-nav menu (our publicly promoted function).\r\n */\r\nexport function openLeftNav() {\r\n  if (_openLeftNav) {\r\n    _openLeftNav();\r\n  }\r\n}\r\n\r\n\r\nconst leftNavStyles = (theme) => ({\r\n  leftNav: {\r\n    width: 250, // make width significant enough to space out our secondary menu icons\r\n  },\r\n});\r\n\r\n\r\n/**\r\n * LeftNav: our LeftNav component that accumulates menu items via use contract.\r\n */\r\nfunction LeftNav({classes, leftNavItems}) {\r\n\r\n  const [leftNavVisible, setLeftNavVisible] = React.useState(false);\r\n  _openLeftNav          = () => setLeftNavVisible(true);\r\n  const closeLeftNav    = () => setLeftNavVisible(false);\r\n\r\n  // AI: have seen some usage of tabIndex in <div> under <Drawer> (unsure if needed)\r\n  //     tabIndex={0} ... should be focus-able in sequential keyboard navigation, but its order is defined by the document's source order */}\r\n  return (\r\n    <Drawer open={leftNavVisible}\r\n            onClose={closeLeftNav}>\r\n      <div className={classes.leftNav}\r\n           onClick={closeLeftNav}\r\n           onKeyDown={closeLeftNav}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              Select a view\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          {leftNavItems.map( ([fassetsKey, LeftNavItem]) => <LeftNavItem key={fassetsKey}/> )}\r\n        </List>\r\n      </div>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nconst LeftNavWithFassets = withFassets({\r\n  component: LeftNav,\r\n  mapFassetsToProps: {\r\n    // <ListItem>s to inject in our left-nav (the manifestation of our use contract)\r\n    leftNavItems: 'AppLayout.LeftNavItem.*@withKeys',\r\n  }\r\n});\r\n\r\nexport default /* LeftNavWithStyles = */  withStyles(leftNavStyles)(LeftNavWithFassets);\r\n","import React          from 'react';\r\nimport PropTypes      from 'prop-types';\r\nimport withStyles     from '@material-ui/core/styles/withStyles';\r\nimport {withFassets}  from 'feature-u';\r\nimport withState      from '../../../../util/withState';\r\n\r\nimport LeftNav        from './LeftNav';\r\nimport {openLeftNav}  from './LeftNav';\r\nimport UserMenu       from './UserMenu';\r\n\r\nimport AppBar         from '@material-ui/core/AppBar';\r\nimport IconButton     from '@material-ui/core/IconButton';\r\nimport MenuIcon       from '@material-ui/icons/Menu';\r\nimport Toolbar        from '@material-ui/core/Toolbar';\r\nimport Typography     from '@material-ui/core/Typography';\r\n\r\n\r\n/**\r\n * ?? rework description\r\n * \r\n * AppLayout is a re-usable top-level layout component that\r\n * establishes the application characteristics like Tool Bar, Left\r\n * Nav, etc.\r\n * \r\n * The main page content is rendered as children of this component\r\n * (like eateries and discovery).\r\n *\r\n * USAGE:\r\n * ```\r\n *   <AppLayout>\r\n *     ... page content here\r\n *   </AppLayout>\r\n * ```\r\n */\r\n\r\nconst appStyles = (theme) => ({\r\n\r\n  app: {\r\n    display: 'flex', // KJB: does not seem to be doing anything\r\n  },\r\n\r\n  appBar: {\r\n    //? ***Dashboard Sample***\r\n    //? zIndex:     theme.zIndex.drawer + 1,\r\n    //? transition: theme.transitions.create(['width', 'margin'], {\r\n    //?   easing:   theme.transitions.easing.sharp,\r\n    //?   duration: theme.transitions.duration.leavingScreen,\r\n    //? }),\r\n  },\r\n\r\n  bottomBar: {\r\n    top:        'auto',\r\n    bottom:     0,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  toolbar: {\r\n    //? ***Dashboard Sample***\r\n    //? paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n\r\n  menuButton: {\r\n    //? marginLeft:  12, //? ...more ***Dashboard Sample***\r\n    marginRight: 36, // proper spacing between menu button and title\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1, // moves right-most toolbar items to the right\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',                 // content window is height is same as our viewport (100%)\r\n    overflow: 'auto',                // add scrollbar ONLY when necessary\r\n\r\n    paddingTop:    '4em', // HACK: so ToolBar doesn't cover up ... must be a better way\r\n    paddingBottom: '4em', // HACK: so BottomBar doesn't cover up ... must be a better way\r\n    // padding: theme.spacing.unit * 3, // ... from sample content ... sample: 8 * 3\r\n  },\r\n\r\n});\r\n\r\nfunction AppLayout({curView, viewAuxiliaryContent, classes, children}) {\r\n\r\n  // define our auxiliary view content\r\n  const curViewAuxiliaryContent = resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent);\r\n  const {TitleComp, FooterComp} = curViewAuxiliaryContent;\r\n\r\n  return (\r\n    <div className={classes.app}>\r\n\r\n      {/* Title Bar */}\r\n      <AppBar className={classes.appBar}\r\n              position=\"absolute\">\r\n        <Toolbar className={classes.toolbar}\r\n                 disableGutters={false}>\r\n\r\n          {/* Left Nav Activation Button openLeftNav */}\r\n          <IconButton className={classes.menuButton}\r\n                      color=\"inherit\"\r\n                      onClick={openLeftNav}>\r\n            <MenuIcon/>\r\n          </IconButton>\r\n\r\n          {/* Title */}\r\n          <div className={classes.title}>\r\n            <TitleComp/>\r\n          </div>\r\n\r\n          {/* User Profile Menu */}\r\n          <UserMenu/>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Left Nav */}\r\n      <LeftNav/>\r\n\r\n      {/* Page Content */}\r\n      <main className={classes.content}>\r\n        {children}\r\n      </main>\r\n\r\n      {/* Optional Bottom Bar */}\r\n      {FooterComp && (\r\n         <AppBar className={classes.bottomBar}\r\n                 position=\"absolute\">\r\n           <Toolbar className={classes.toolbar}\r\n                    disableGutters={false}>\r\n             <FooterComp/>\r\n           </Toolbar>\r\n         </AppBar>\r\n       )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired, // main page content (like eateries and discovery)\r\n};\r\n\r\n\r\nconst AppLayoutWithState = withState({\r\n  component: AppLayout,\r\n  mapStateToProps(appState, {fassets}) { // ... 2nd param (ownProps) seeded from withFassets() below\r\n    return {\r\n      curView:  fassets.sel.getView(appState),\r\n    };\r\n  },\r\n});\r\n\r\nconst AppLayoutWithFassets = withFassets({\r\n  component: AppLayoutWithState,\r\n  mapFassetsToProps: {\r\n    fassets:              '.', // introduce fassets into props via the '.' keyword\r\n    viewAuxiliaryContent: 'AppLayout.view.*@withKeys',\r\n  }\r\n});\r\n\r\nexport default /* AppLayoutWithStyles = */ withStyles(appStyles)(AppLayoutWithFassets);\r\n\r\n\r\n\r\n\r\nfunction resolveCurViewAuxiliaryContent(curView, viewAuxiliaryContent) {\r\n  const matchKey = `AppLayout.view.${curView}`;\r\n  const [, curViewAuxiliaryContent] = viewAuxiliaryContent.find( ([key]) => key === matchKey ) || fallbackViewAuxiliaryContent;\r\n  return curViewAuxiliaryContent;\r\n}\r\n\r\nconst fallbackViewAuxiliaryContent = ['AppLayout.view.FALLBACK', {\r\n  TitleComp: () => (\r\n    <Typography variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap>\r\n      Eatery Nod\r\n    </Typography>\r\n  ),\r\n}];\r\n","import React              from 'react';\r\nimport PropTypes          from 'prop-types';\r\nimport withState          from '../../../../util/withState';\r\nimport {withFassets}      from 'feature-u';\r\nimport withStyles         from '@material-ui/core/styles/withStyles';\r\nimport {MuiThemeProvider,      // NOTE: MuiThemeProvider **SHOULD** be at the root of ALL visible components\r\n        createMuiTheme}   from '@material-ui/core/styles';\r\nimport CssBaseline        from '@material-ui/core/CssBaseline';\r\nimport AppLayout          from './AppLayout';\r\nimport Notify             from '../../../../util/notify';\r\n\r\n/**\r\n * ?? rework description\r\n *\r\n * MainLayout is a re-usable top-level component that promotes the\r\n * proper Material-UI (MUI) theming/styling WITH a reactive layout.\r\n *\r\n * Typically, this is used implicitly through AppLayout, however some\r\n * components that are NOT part of AppLayout (like SignIn) will use\r\n * MainLayout explicitly.\r\n * \r\n * USAGE:\r\n * ```\r\n *   <MainLayout>\r\n *     ... content here\r\n *   </MainLayout>\r\n * ```\r\n * \r\n * NOTE: This implementation was initially gleaned from the MUI\r\n *       Sign-in page layout example.\r\n *        - Visual: https://material-ui.com/getting-started/page-layout-examples/sign-in/\r\n *        - Source: https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/page-layout-examples/sign-in/MainLayout.js\r\n */\r\n\r\nconst lightTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n\r\n  palette: {\r\n    type: 'light',\r\n    // AI: More theming to consider\r\n    // primary: {\r\n    //   main: '#37b44e',\r\n    // },\r\n    // secondary: {\r\n    //   main: '#000',\r\n    // },\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst mainStyles = (theme) => ({\r\n  main: {\r\n    width:        'auto',\r\n    display:      'block', // Fix IE 11 issue.\r\n    //marginLeft:   theme.spacing.unit * 3, // KJB: bad news for my AppLayout content container\r\n    //marginRight:  theme.spacing.unit * 3,\r\n\r\n    // reactive design ?? KJB: better understand // KJB: ?? THIS IS CAUSING HAVOC on my main content container overall width\r\n    //? [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n    //?   width:       400,\r\n    //?   marginLeft:  'auto',\r\n    //?   marginRight: 'auto',\r\n    //? },\r\n  },\r\n});\r\n\r\nfunction MainLayout({uiTheme, curUser, classes, children}) {\r\n  const themeInUse = uiTheme==='dark' ? darkTheme : lightTheme;\r\n  \r\n  // conditionally inject AppLayout when user is signed-in\r\n  const theRestOfTheStory = curUser.isUserSignedIn() ? (\r\n    <AppLayout>\r\n      {children}\r\n    </AppLayout>\r\n  ) : (\r\n    <>\r\n      {children}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <MuiThemeProvider theme={themeInUse}>\r\n      <CssBaseline/>\r\n      <Notify/>\r\n      <main className={classes.main}>\r\n        {theRestOfTheStory}\r\n      </main>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nMainLayout.propTypes = {\r\n  children:     PropTypes.node.isRequired,\r\n  classes:      PropTypes.object.isRequired,\r\n};\r\n\r\nconst MainLayoutWithState = withState({\r\n  component: MainLayout,\r\n  mapStateToProps(appState, {fassets}) { // ... 2nd param (ownProps) seeded from withFassets() below\r\n    return {\r\n      uiTheme: fassets.sel.getUITheme(appState),\r\n      curUser: fassets.sel.curUser(appState),\r\n    };\r\n  },\r\n});\r\n\r\nconst MainLayoutWithFassets = withFassets({\r\n  component: MainLayoutWithState,\r\n  mapFassetsToProps: {\r\n    fassets: '.', // introduce fassets into props via the '.' keyword\r\n  }\r\n});\r\n\r\nexport default /* AppLayoutWithStyles = */ withStyles(mainStyles)(MainLayoutWithFassets);\r\n","import React                from 'react';\r\nimport {createFeature,\r\n        fassetValidations}  from 'feature-u';\r\n\r\nimport _layout              from './featureName';\r\nimport _layoutAct           from './actions';\r\nimport reducer              from './state';\r\nimport * as _layoutSel      from './state';\r\n\r\nimport MainLayout           from './comp/MainLayout';\r\n\r\n// feature: layout\r\n//          ?? retrofit description -and- update README.md\r\n//          ?? also maintain the currentView state as a string (full details in README)\r\n//          ?? OLD TRASH:\r\n//          ? promote the app-specific Drawer/SideBar on the app's left\r\n//          ? side.  This feature is app-neutral, as it pulls in it's\r\n//          ? menu items from external features using the\r\n//          ? 'leftNavItem.*' use contract (full details in README)\r\nexport default createFeature({\r\n  name: _layout,\r\n\r\n  // our public face ...\r\n  fassets: {\r\n\r\n    define: {\r\n      'actions.changeView': _layoutAct.changeView, // changeView(viewName)\r\n      'sel.getView':        _layoutSel.getView,    // getView(appState): string\r\n    },\r\n\r\n    use: [\r\n      // 'AppLayout.UserMenuItem.*': ... component entries of the user-profile menu\r\n      //                                 EXPECTING: <UserMenuItem/>\r\n      ['AppLayout.UserMenuItem.*', {required: true, type: fassetValidations.comp}],\r\n\r\n      // 'AppLayout.LeftNavItem.*': .... component entries of the left-nav bar\r\n      //                                 EXPECTING: <ListItem/>\r\n      ['AppLayout.LeftNavItem.*', {required: true, type: fassetValidations.comp}],\r\n\r\n      // 'AppLayout.view.*': ........... auxiliary view content that varies per view\r\n      //                                 (the wildcard ('*') is indexed by `currentView`)\r\n      //   ViewAuxiliaryContent: {       EXPECTING: ViewAuxiliaryContent object\r\n      //     TitleComp: () => .......... a component defining the header title\r\n      //                                 DEFAULT: rendering of 'Eatery Nod'\r\n      //     FooterComp: () => ......... a component defining the entire footer content\r\n      //                                 DEFAULT: no footer\r\n      //   }\r\n      ['AppLayout.view.*', {required: false, type: fassetValidations.any}],\r\n    ],\r\n  },\r\n\r\n  reducer,\r\n\r\n  // inject our various layout components into the root of our app\r\n  appWillStart({fassets, curRootAppElm}) {\r\n    return (\r\n      <MainLayout>\r\n        {curRootAppElm}\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createFeature}    from 'feature-u';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// feature: pwa\r\n//          orchestrates the Progressive Web App hooks (as defined by Create React App)\r\nexport default createFeature({\r\n  name:    'pwa',\r\n\r\n  appDidStart() {\r\n    // FROM: CRA (Create React App):\r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: http://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n  }\r\n});\r\n","import {createLogic}      from 'redux-logic';\r\nimport _logActions        from './featureName';\r\nimport featureFlags       from '../../../../featureFlags';\r\n\r\nlet lastState = null;\r\n\r\n/**\r\n * Log all dispatched actions.\r\n *\r\n * TODO: retrofit to use real logger:\r\n *       using the following Log levels:\r\n *         - TRACE:   see dispatched actions\r\n *         - VERBOSE: see dispatched actions INCLUDING action content (CAUTION: action content can be BIG)\r\n */\r\nexport const actionLogger = createLogic({\r\n\r\n  name: `${_logActions}.actionLogger`,\r\n  type: '*', // monitor ALL action types\r\n\r\n  transform({getState, action}, next) {\r\n\r\n    if (featureFlags.log === 'verbose') { // group action/state together\r\n      console.group(`Action: ${action.type}`);\r\n    }\r\n\r\n    console.log('Dispatched Action: ', action);\r\n\r\n    // TODO: retrofit to use log-u:\r\n    // // log dispatched action\r\n    // if (log.isVerboseEnabled()) {\r\n    //   log.verbose(()=> `Dispatched Action: ${FMT(action.type)} with content:\\n${FMT(action)}`);\r\n    // }\r\n    // else {\r\n    //   log.trace(()=>   `Dispatched Action: ${FMT(action.type)}`);\r\n    // }\r\n\r\n    // continue processing\r\n    next(action);\r\n  },\r\n\r\n  process({getState, action, fassets}, dispatch, done) {\r\n\r\n    if (featureFlags.log === 'verbose') { // state can be big ... log conditionally\r\n\r\n      const curState = getState();\r\n      if (curState === lastState) {\r\n        console.log('Current State: UNCHANGED');\r\n      }\r\n      else {\r\n        console.log('Current State: ', curState);\r\n      }\r\n      lastState = curState;\r\n\r\n      console.groupEnd();\r\n    }\r\n\r\n    done();\r\n  },\r\n\r\n});\r\n\r\n\r\n// promote all logic modules for this feature\r\n// ... NOTE: individual logic modules are unit tested using the named exports.\r\nexport default [\r\n  actionLogger,\r\n];\r\n","/**\r\n * Expose our featureName through a mini-meta module that is\r\n * \"importable\" in all use-cases (a single-source-of-truth).\r\n */\r\nexport default 'logActions';\r\n","import {createFeature}  from 'feature-u';\r\nimport _logActions      from './featureName';\r\nimport logic            from './logic';\r\nimport featureFlags     from '../../../../featureFlags';\r\n\r\n// feature: logActions\r\n//          log all dispatched actions and resulting state (full details in README)\r\nexport default createFeature({\r\n  name:    _logActions,\r\n  enabled: featureFlags.log ? true : false, // NOTE: feature-u requires boolean, but featureFlags.log can be a string (e.g. 'verbose')\r\n  logic,\r\n});\r\n","import React         from 'react';\r\n\r\nimport {notify,\r\n        toast,\r\n        alert,\r\n        confirm}     from '../../../../../util/notify';\r\n\r\nimport Divider       from '@material-ui/core/Divider';\r\nimport ListItem      from '@material-ui/core/ListItem';\r\nimport ListItemIcon  from '@material-ui/core/ListItemIcon';\r\nimport ListItemText  from '@material-ui/core/ListItemText';\r\nimport MsgIcon       from '@material-ui/icons/LowPriority';\r\n\r\n\r\n/**\r\n * SandboxLeftNavItem: our Sandbox entry into the LeftNav.\r\n */\r\nexport default function SandboxLeftNavItem() {\r\n\r\n  // render our menu item\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* Sandbox \"toast\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox toasts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>toast.success({msg: 'success toast'}) )}\r\n    {doTest(\"info\",    ()=>toast.info   ({msg: 'info toast'}) )}\r\n    {doTest(\"warn\",    ()=>toast.warn   ({msg: 'warn toast'}) )}\r\n    {doTest(\"error\",   ()=>toast.error  ({\r\n       msg: 'error toast',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: error toast CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: error toast CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"alert\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox alerts ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>alert.success({msg: 'success alert'}) )}\r\n    {doTest(\"info\",    ()=>alert.info   ({msg: 'info alert'}) )}\r\n    {doTest(\"warn\",    ()=>alert.warn   ({msg: 'warn alert'}) )}\r\n    {doTest(\"error\",   ()=>alert.error  ({\r\n       msg: 'error alert',\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => alert.success({msg: 'WowZee: error alert CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => alert.success({msg: 'WooWoo: error alert CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    {/* Sandbox \"confirm\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox confirms ... \"/>\r\n    </ListItem>\r\n    {doTest(\"success\", ()=>confirm.success({msg: 'success confirm', actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"info\",    ()=>confirm.info   ({msg: 'info confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"warn\",    ()=>confirm.warn   ({msg: 'warn confirm'   , actions:[{txt:'Okey Dokey'}] }) )}\r\n    {doTest(\"error\",   ()=>confirm.error  ({msg: 'error confirm'  , actions:[{txt:'Okey Dokey'}] }) )}\r\n\r\n\r\n\r\n    {/* Sandbox \"notify\" tests */}\r\n    <Divider/>\r\n    <ListItem>\r\n      <ListItemText primary=\"sandbox raw notifies ... \"/>\r\n    </ListItem>\r\n    {doTest(\"notify\",   ()=> notify({\r\n       msg: 'my notify\\nNow is the time for every good man to come to the aid of his country ... I really hope this works for a really long line\\nnext next line',\r\n       position: 'top-center',\r\n       duration: null, // do this to keep it up (requiring user acknowledgment)\r\n       actions: [\r\n         {\r\n           txt: 'OK',\r\n         },\r\n         {\r\n           txt:    'WowZee',\r\n           action: () => toast.success({msg: 'WowZee: notify CB'}),\r\n         },\r\n         {\r\n           txt:    'WooWoo',\r\n           action: () => toast.success({msg: 'WooWoo: notify CB'}),\r\n         }\r\n       ],\r\n     }) )}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst doTest = (label, cb) => (\r\n  <ListItem button\r\n            onClick={cb}>\r\n    <ListItemIcon><MsgIcon/></ListItemIcon>\r\n    <ListItemText primary={label}/>\r\n  </ListItem>\r\n);\r\n","import device                        from './util/device/feature';\r\nimport deviceService                 from './util/device/deviceService/feature';\r\n\r\nimport auth                          from './auth/feature';\r\nimport authService                   from './auth/authService/feature';\r\nimport authServiceFirebase           from './auth/authService/authServiceFirebase/feature';\r\nimport authServiceMock               from './auth/authService/authServiceMock/feature';\r\n\r\nimport eateries                      from './eateries/feature';\r\nimport eateryService                 from './eateries/eateryService/feature';\r\nimport eateryServiceFirebase         from './eateries/eateryService/eateryServiceFirebase/feature';\r\nimport eateryServiceMock             from './eateries/eateryService/eateryServiceMock/feature';\r\n\r\n//? import discovery                     from './discovery/feature';\r\n//? import discoveryService              from './discovery/discoveryService/feature';\r\n//? import discoveryServiceGooglePlaces  from './discovery/discoveryService/discoveryServiceGooglePlaces/feature';\r\n//? import discoveryServiceMock          from './discovery/discoveryService/discoveryServiceMock/feature';\r\n\r\nimport bootstrap                     from './util/bootstrap/feature';\r\n//? import firebaseInit              from './util/firebaseInit/feature';\r\nimport layout                        from './util/layout/feature';\r\nimport pwa                           from './util/pwa/feature';\r\n\r\nimport logActions                    from './util/diagnostic/logActions/feature';\r\nimport sandbox                       from './util/diagnostic/sandbox/feature';\r\n\r\n// accumulate ALL features\r\n// ... see README.md for details\r\nexport default [\r\n\r\n  device,\r\n  deviceService,\r\n\r\n  auth,\r\n  authService,\r\n  authServiceFirebase,\r\n  authServiceMock,\r\n\r\n  eateries,\r\n  eateryService,\r\n  eateryServiceFirebase,\r\n  eateryServiceMock,\r\n\r\n  //? discovery,\r\n  //? discoveryService,\r\n  //? discoveryServiceGooglePlaces,\r\n  //? discoveryServiceMock,\r\n\r\n  // ... util\r\n  bootstrap,\r\n  //? firebaseInit,\r\n  layout,\r\n  pwa,\r\n\r\n  // ... diagnostic\r\n  logActions,\r\n  sandbox,\r\n];\r\n","import {createFeature}  from 'feature-u';\r\nimport featureFlags     from '../../../../featureFlags'\r\nimport SandboxLeftNavItem  from './comp/SandboxLeftNavItem';\r\n\r\n// feature: sandbox\r\n//          promote interactive tests (full details in README)\r\nexport default createFeature({\r\n  name:    'sandbox',\r\n\r\n  enabled: featureFlags.sandbox,\r\n\r\n  fassets: {\r\n    defineUse: {\r\n      'AppLayout.LeftNavItem.sandbox': SandboxLeftNavItem, // inject our entries into the LeftNav\r\n    },\r\n  },\r\n});\r\n","import '@babel/polyfill'; // required for feature-u es2015+ constructs // TODO: L8TR: see if this is really needed (if not un-install it) NOTE: was ...import 'babel-polyfill';\r\nimport './util/ErrorExtensionPolyfill';\r\nimport React                 from 'react';\r\nimport ReactDOM              from 'react-dom';\r\nimport {launchApp}           from 'feature-u';\r\nimport {createReducerAspect} from 'feature-redux';\r\nimport {createLogicAspect}   from 'feature-redux-logic';\r\nimport {createRouteAspect}   from 'feature-router';\r\nimport features              from './features';\r\nimport SplashScreen          from './util/SplashScreen';\r\n//import configureEateryNodDiagnostics  from './util/configureEateryNodDiagnostics'; TODO\r\n\r\n// launch our application, exposing the feature-u Fassets object (facilitating cross-feature-communication)!\r\nexport default launchApp({\r\n  aspects: appAspects(),\r\n  features,\r\n  registerRootAppElm(rootAppElm) {\r\n    ReactDOM.render(rootAppElm,\r\n                    document.getElementById('root'));\r\n  }\r\n});\r\n\r\n\r\n// accumulate/configure the Aspect plugins matching our app's run-time stack\r\nfunction appAspects() {\r\n\r\n  // define our framework run-time stack\r\n  const reducerAspect = createReducerAspect();\r\n  const logicAspect   = createLogicAspect();\r\n  const routeAspect   = createRouteAspect();\r\n  const aspects = [\r\n    reducerAspect, // redux          ... extending: Feature.reducer\r\n    logicAspect,   // redux-logic    ... extending: Feature.logic\r\n    routeAspect,   // Feature Routes ... extending: Feature.route\r\n  ];\r\n\r\n  // configure Aspects (as needed)\r\n  // ... StateRouter fallback screen (when no routes are in effect)\r\n  routeAspect.config.fallbackElm$ = <SplashScreen msg=\"I'm trying to think but it hurts!\"/>;\r\n\r\n  // TODO\r\n  // configure our app's overall diagnostics (non-production code)\r\n  //configureEateryNodDiagnostics(reducerAspect, logicAspect, routeAspect);\r\n\r\n  // beam me up Scotty :-)\r\n  return aspects;\r\n}\r\n","export {default} from './app'; // redirect to app.js\r\n"],"sourceRoot":""}